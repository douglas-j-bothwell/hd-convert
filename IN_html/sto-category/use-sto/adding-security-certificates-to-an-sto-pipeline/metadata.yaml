type: article
article_id: a9eoqiy8ye
user_id: xwmdbyp4x8
category_id: utstv3qzqt
author:
  name: Doug Bothwell
  email: douglas.bothwell@harness.io
  profile_image: https://www.gravatar.com/avatar/120de2cc624d7903cf3d83b86d0f1b5e?d=mm&s=150
title: DOC-2137 Adding Security Certificates to an STO Pipeline
slug: adding-security-certificates-to-an-sto-pipeline
description: The following workflow describes how to set up a build to run scans that
  require security certificates.
short_version: The following workflow describes how to set up a build to run scans
  that require security certificates.
tags: []
show_toc: false
is_private: true
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-10-24T21:28:21.294405Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: DOC-2137 Adding Security Certificates to an STO Pipeline
  description: The following workflow describes how to set up a build to run scans
    that require security certificates.
  short_version: The following workflow describes how to set up a build to run scans
    that require security certificates.
  body: '<p>This topic describes how to set up a build to run scans that require security
    certificates, license files, and other artifacts.</p><h4>Important Notes</h4><p>To
    use customer artifacts, you need to specify the following:</p><ul><li>A shared
    folder for the scan stage  — the default is <code>/shared/customer_artifacts</code></li><li>A
    stage variable that specify the shared folder  — <code>customer_artifacts_path</code>
    = <code>/shared/customer_artifacts</code></li><li>If a scan requires a customer-provided
    certificate (PEM file), the certificate must be saved in a <code>certificates</code>
    subfolder with the filename <code>certificate</code>: <code>/shared/customer_artifacts_folder/certificates/certificate</code></li></ul><h4>Workflow
    description</h4><ol><li>Create a Secret for the certificate you want to use.<br/>For
    details, go to <a href="https://docs.harness.io/article/ygyvp998mu" target="_blank">Use
    Encrypted Text Secrets</a>.</li><li>In the Pipeline Studio, open the stage where
    you want to add the certificates.</li><li>In the <strong>Overview</strong>, do
    the following:<ol><li>Add the following to <strong>Shared Paths</strong>:<br/><code>/shared/customer_artifacts</code></li><li>Under
    Advanced, add the following to <strong>Stage Variables</strong>: <br/><code>customer_artifacts_path</code>
    = <code>/shared/customer_artifacts</code></li></ol></li><li>In Execution, add
    a Run step <em>before</em> the scan step. This step will install the certificate
    into the build workspace.</li><li>Set up the Run step as follows:<ol><li>Set up
    a shell container, such as alpine, in <strong>Container Registry</strong>, <strong>Image</strong>,
    and <strong>Shell</strong>.</li><li>Open Optional Configuration and add the following
    <strong>Environment Variable</strong> for the secret you created:<br/><code>MYCERT</code>
    = <code>&lt;+secrets.getValue(&#34;my_security_cert&#34;)&gt;</code></li><li>Add
    the following to <strong>Command</strong>:<pre class="hljs bash">set -e<br/>mkdir
    -p -v /shared/customer_artifacts/certificates<br/>printf &#34;%s&#34; &#34;$MYCERT&#34;
    &gt; /shared/customer_artifacts/certificates/certificate</pre></li><li>Click <strong>Apply
    Changes</strong> to return to the scan stage.</li></ol></li><li>If you are using
    a self-signed certificate, add the following option to the scan step:<br/><code>bypass_ssl_check</code>
    = <code>true</code></li></ol><p></p>'
  slug: adding-security-certificates-to-an-sto-pipeline
  tags: []
  is_live: true
