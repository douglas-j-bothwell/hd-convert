type: article
article_id: 6m7dnp95xs
user_id: xwmdbyp4x8
category_id: 4xo13zdnfx
author:
  name: Doug Bothwell
  email: douglas.bothwell@harness.io
  profile_image: https://www.gravatar.com/avatar/120de2cc624d7903cf3d83b86d0f1b5e?d=mm&s=150
title: DRAFT CI-4720 Harness CI Image Updates
slug: draft-ci-4720-harness-ci-image-updates
description: Your organization has a one-month window to run security scans or other
  tests on new CI build images before you deploy them. Every two weeks, Harness publishes
  new versions of images required to run…
short_version: Your organization has a one-month window to run security scans or other
  tests on new CI build images before you deploy them. Every two weeks, Harness publishes
  new versions of images required to run…
tags: []
show_toc: false
is_private: false
is_published: false
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-06-28T21:03:15.572222Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: DRAFT CI-4720 Harness CI Image Updates
  description: ""
  short_version: ""
  body: '<p></p><p>Your organization has a one-month window to run security scans
    or other tests on new CI build images before you deploy them. Every two weeks,
    Harness publishes new versions of images required to run CI builds. Each image
    is backwards-compatible with the previous two releases.</p><h3>Harness CI Image
    Updates</h3><p>Harness updates <code>harness/ci-*</code> images such as <code>harness/ci-addon</code>
    and <code>harness/ci-lite-engine</code> as follows:</p><ul><li>Harness publishes
    updates of all CI images on the second and fourth Monday of each month.</li><li>Version
    numbers use an <code>x.y.z</code> format: <code>x</code> = major release, <code>y</code>
    = minor release, <code>z</code> = hotfix or patch release.</li><li>All images
    are supported for the latest three releases: latest, latest-1, and latest-2. Each
    image release is backward-compatible with the previous two releases.</li><li>You
    can choose to deploy the latest containers immediately upon release, or download
    and scan them before deploying.</li><li>If your builds use containers that are
    more than two releases old, the UI shows a warning that the image versions are
    no longer supported. The builds won&#39;t fail automatically.</li><li>If a hotfix
    or security fix is required for a specific image, Harness will create hotfixes
    for the latest three images and notify customers when these hotfixes are available.</li></ul><h3>Drone
    Plugin Image Updates</h3><p>Drone images are updated as needed. All Drone image
    updates are backward-compatible. When you first deploy CI, Harness will scan all
    plugin images you plan to use and address any vulnerabilities. After your initial
    deployment, Harness will publish updates to address new vulnerabilities based
    on our Service Level Agreement with your organization.</p><h3>Updating the Images
    Used in your Pipelines</h3><p>Harness CI includes an <code>execution-config</code>
    API that enables you to update the images used in your infrastructure. The following
    steps describe the high-level workflow.</p><ol><li>Send a <code>get-default-config</code>
    request to get a list of the latest Harness CI build images and tags. You can
    use the <code>infra</code> parameter to get <code>k8</code> images or <code>VM</code>
    images. <pre>curl --location --request GET &#39;https://app.harness.io/gateway/ci/execution-config/get-default-config?accountIdentifier=$ACCOUNT_ID&amp;infra=VM&#39;
    \<br/>--header &#39;Authorization: Bearer $API_KEY&#39;</pre>The response shows
    the latest supported images and their tags.<pre class="hljs json">{<br/>  &#34;status&#34;:
    &#34;SUCCESS&#34;,<br/>  &#34;data&#34;: {<br/>    &#34;gitCloneTag&#34;: &#34;harness/drone-git:1.1.0&#34;,<br/>    &#34;buildAndPushDockerRegistryTag&#34;:
    &#34;plugins/docker:latest&#34;,<br/>    &#34;buildAndPushECRTag&#34;: &#34;plugins/ecr:latest&#34;,<br/>    &#34;buildAndPushGCRTag&#34;:
    &#34;plugins/gcr:latest&#34;,<br/>    &#34;gcsUploadTag&#34;: &#34;plugins/gcs:1.2.6&#34;,<br/>    &#34;s3UploadTag&#34;:
    &#34;plugins/s3:1.0.5&#34;,<br/>    &#34;artifactoryUploadTag&#34;: &#34;plugins/artifactory:1.0.6&#34;,<br/>    &#34;cacheGCSTag&#34;:
    &#34;plugins/cache:1.3.8&#34;,<br/>    &#34;cacheS3Tag&#34;: &#34;plugins/cache:1.3.8&#34;,<br/>    &#34;securityTag&#34;:
    &#34;plugin/sto_plugin:dev&#34;<br/>  },<br/>  &#34;metaData&#34;: null,<br/>  &#34;correlationId&#34;:
    &#34;e3686be7-8ae5-42d6-b8bb-15b1cdac3ecf&#34;<br/>}</pre></li><li>Send a <code>get-customer-config</code>
    request to get the build images that your CI pipelines currently use. This endpoint
    includes an <code>overridesOnly</code> parameter that, when true, shows only the
    non-default images that your Pipeline uses. If this returns <code>null</code>,
    then your Pipeline is using all default images:<pre class="hljs bash">curl --location
    --request GET &#39;https://app.harness.io/gateway/ci/execution-config/get-customer-config?accountIdentifier=$ACCOUNT_ID&amp;infra=K8&amp;overridesOnly=false&#39;
    \<br/>--header &#39;Authorization: Bearer $API_KEY&#39; <br/>{&#34;status&#34;:&#34;SUCCESS&#34;,&#34;data&#34;:{},&#34;metaData&#34;:null,&#34;correlationId&#34;:&#34;11ce1bc8-b337-4687-9ab9-e13d553ae82f&#34; </pre></li><li>Send
    an <code>updateConfig</code> (POST) request with a list of the images you want
    to update and the new tags to apply.<pre class="hljs bash">curl --location --request
    POST &#39;https://app.harness.io/gateway/ci/execution-config/updateConfig?accountIdentifier=$ACCOUNT_ID&amp;infra=K8&#39;
    \<br/>--header &#39;Authorization: Bearer $API_KEY&#39; \<br/>--header &#39;Content-Type:
    application/json&#39; \<br/>--data-raw &#39;[<br/>    {<br/>        &#34;field&#34;:
    &#34;gitCloneTag&#34;,<br/>        &#34;value&#34;: &#34;harness/drone-git:1.1.0-rootless&#34;<br/>    }<br/>]&#39;</pre></li><li>To
    reset one or more images to their defaults, send a<code>resetConfig</code> (POST)
    request with a list of the images to reset. <pre>url --location --request POST
    &#39;https://app.harness.io/gateway/ci/execution-config/resetConfig?accountIdentifier=$ACCOUNT_ID&amp;infra=K8&#39;
    \<br/>--header &#39;Authorization: Bearer $API_KEY&#39; \<br/>--header &#39;Content-Type:
    application/json&#39; \<br/>--data-raw &#39;[<br/>    {<br/>        &#34;field&#34;:
    &#34;gitCloneTag&#34;<br/>    }<br/>]&#39;</pre></li></ol><p></p>'
  slug: draft-ci-4720-harness-ci-image-updates
  tags: []
  is_live: true
