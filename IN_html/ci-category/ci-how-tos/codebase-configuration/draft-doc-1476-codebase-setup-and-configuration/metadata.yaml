type: article
article_id: lcn8vgt4di
user_id: xwmdbyp4x8
category_id: ojaa8v6fwz
author:
  name: Doug Bothwell
  email: douglas.bothwell@harness.io
  profile_image: https://www.gravatar.com/avatar/120de2cc624d7903cf3d83b86d0f1b5e?d=mm&s=150
title: DRAFT DOC-1476 Codebase Setup and Configuration
slug: draft-doc-1476-codebase-setup-and-configuration
description: This topic describes how to create and edit Codebases. Every CI Pipeline
  with a Build Stage requires a Codebase object that specifies the code repo to build,
  how to connect to that repo, and how to c…
short_version: This topic describes how to create and edit Codebases. Every CI Pipeline
  with a Build Stage requires a Codebase object that specifies the code repo to build,
  how to connect to that repo, and how to c…
tags: []
show_toc: true
is_private: false
is_published: false
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-03-19T16:25:38.072877Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: DRAFT DOC-1476 Codebase Setup and Configuration
  description: ""
  short_version: ""
  body: |-
    <p>This topic describes how to create and edit Codebases. Every CI Pipeline with a Build Stage requires a Codebase object that specifies the code repo to build, how to connect to that repo, and how to clone and build that repo.</p>
    <p>You define the Codebase to build when you add the first Build Stage to a Pipeline. You specify the repo URL and authentication options in the CODEBASE CONNECTOR. You also define whether to clone the repo to your build farm (enabled by default).</p>
    <div class="hd--html">
      <details>
        <summary>Defining the Codebase Connector when setting up a Build Stage:</summary>
        <figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/lcn8vgt4di/1647624762563/create-codebase-connector.png"/></figure>
        <div></div>
      </details>
    </div>
    <p></p>
    <p>The first Build Stage defines the Codebase used for the Pipeline. You can edit the Codebase after you create it: you can change the CODEBASE CONNECTOR and configure ADVANCED OPTIONS that specify how your Harness Delegate clones and builds the repo.</p>
    <div class="hd--html">
      <details>
        <summary>Editing the Codebase for a Pipeline:</summary>
        <div>
          <figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/lcn8vgt4di/1647625160792/edit-codebase-confi.png"/></figure>
        </div>
      </details>
    </div>
    <p></p>
    <p>In this topic:</p>
    <p></p>
    <ul>
      <li><a href="https://ngdocs.harness.io/article/6vks5ym7sq-edit-a-ci-pipeline-codebase-configuration#configure_as_code_yaml">Configure-As-Code: YAML</a></li>
      <li><a href="https://ngdocs.harness.io/article/6vks5ym7sq-edit-a-ci-pipeline-codebase-configuration#see_also">See Also</a></li>
    </ul>
    <h3 id="undefined">Before You Begin</h3>
    <ul>
      <li><a href="/article/x0d77ktjw8-ci-pipeline-quickstart">CI Pipeline Quickstart</a></li>
      <li><a href="/article/2k7lnc7lvl-delegates-overview">Delegates Overview</a></li>
      <li><a href="/article/yn4x8vzw3q-ci-stage-settings">CI Stage Settings</a></li>
      <li><a href="/article/hv2758ro4e-learn-harness-key-concepts">Learn Harness Key Concepts</a></li>
    </ul>
    <h3>Create or Edit a Codebase Connector</h3>
    <p>You can add Codebase to your new CI Pipeline as well as an existing Pipeline that doesn’t have a Codebase yet. </p>
    <p>In this step, you will create Codebase for a new Pipeline in Harness CIE.</p>
    <ol>
      <li>Goto <strong>Pipeline Studio</strong>, click <strong>Add Stage</strong>, and then click <strong>Build</strong>.</li>
      <li>Enter a unique name for your CI stage.</li>
      <li>In <strong>Configure Codebase</strong>, in <strong>Connector</strong>, click <strong>Select Connector.</strong></li>
      <li>Click <strong>New Connector</strong> or click the edit icon for the Connector you want to use for your codebase.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/lcn8vgt4di/1647639277885/create-or-select-an-existing-connector.png"/></figure>
      </li>
      <li>To create a new Connector, do the following:<ol>
          <li>Select the Connector scope:<br/><strong>Project:</strong> available only in the current Project.<br/><strong>Organization:</strong> available to all users in your Organization.<br/><strong>Account:</strong> available to all users in your Account.</li>
          <li>Click New Connector and select the Connector type based on your repo hosting service: GitHub, GitLab, BitBucket, AWS CodeCommit, or Git (if you&#39;re using another provider).</li>
        </ol>
      </li>
      <li>Click through the setup wizard and set the Codebase Connector Settings as needed.</li>
    </ol>
    <ul>
      <li><a href="https://newdocs.helpdocs.io/article/lcn8vgt4di/preview#aws_codecommit_connector_settings">AWS CodeCommit Connector Settings</a></li>
      <li><a href="https://newdocs.helpdocs.io/article/lcn8vgt4di/preview#bitbucket_connector_settings">Bitbucket Connector Settings</a></li>
      <li><a href="https://newdocs.helpdocs.io/article/lcn8vgt4di/preview#github_connector_settings">GitHubConnector Settings</a></li>
      <li><a href="https://newdocs.helpdocs.io/article/lcn8vgt4di/preview#gitlab_connector_settings">GitLab Settings</a></li>
      <li><a href="https://newdocs.helpdocs.io/article/lcn8vgt4di/preview#git_connector_settings">Git Connector Settings</a></li>
    </ul>
    <p>Once you set up and configure the Connector, Harness will use the configured repo to clone your source code and to test and build your Pipeline.</p>
    <p>You can also view the list of your saved connectors in <strong>Connectors</strong> under <strong>Project Setup</strong>.</p>
    <h4>AWS CodeCommit Connector Settings</h4>
    <p></p>
    <div class="hd--html">
      <details>
        <summary>Here is an example:</summary>
        <div>
          <p>Before Harness syncs with your Git repo, it&#39;ll confirm that all Harness&#39; settings are in a valid state. If a connection isn&#39;t working, Harness won&#39;t sync with your Git repo.</p>
          <table>
            <tbody>
              <tr>
                <td>
                  <p>Access Key</p>
                </td>
                <td>
                  <p>AWS Access Key.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>AWS CodeCommit Repository URL</p>
                </td>
                <td>
                  <p>Path of the repository where code commit would take place.</p>
                  <p>For example, <code>https://git-codecommit.us-east-2.amazonaws.com/v1/repos/MyDemoRepo</code>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Description</p>
                </td>
                <td>
                  <p>A description of this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>ID</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Name</p>
                </td>
                <td>
                  <p>The unique name for this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Secret Key</p>
                </td>
                <td>
                  <p>A <a href="https://ngdocs.harness.io/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your AWS user account.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Tags</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/i8t053o0sq-tags-reference">Tags Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>URL Type</p>
                </td>
                <td>
                  <p>You can select <strong>Region</strong> or <strong>Repository</strong>.</p>
                  <p>You can add a connection to your entire region or just a repo in the account. Selecting a Git region enables you to use one Connector for all of your subordinate repositories.</p>
                  <p>Later when you test this connection, you will use a repo in the account.</p>
                  <p>In either case, when you use the Connector later in Harness, you will specify which repo to use.</p>
                </td>
              </tr>
            </tbody>
          </table>
          <p></p>
        </div>
      </details>
    </div>
    <p></p>
    <h4>Bitbucket Connector Settings</h4>
    <p></p>
    <div class="hd--html">
      <details>
        <summary>Here is an example:</summary>
        <div>
          <p>Before Harness syncs with your Git repo, it will confirm that all Harness&#39; settings are in a valid state. If a connection does not work, Harness will not sync with your Git repo.</p>
          <div class="note-callout">Harness supports both Cloud and Data Center (On-Prem) versions of Bitbucket. The following settings are applicable for both versions of Bitbucket.</div>
          <table>
            <tbody>
              <tr>
                <td>
                  <p>API Authentication</p>
                </td>
                <td>
                  <ul>
                    <li>UserName<br/>The username for the account.<div class="note-callout">You must enter a plain-text username or a username secret for <em>both</em> Authentication and API Authentication. You cannot use a plain-text password for one field and a secret for the other.</div>
                    </li>
                    <li>Personal Access Token<br/>A <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the App password of your Bitbucket user account.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/iz5tucdwyu/1646296801499/screenshot-2022-03-03-at-9-58-15-am.png" style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure>
                    </li>
                  </ul>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Authentication</p>
                </td>
                <td>
                  <div class="note-callout">Bitbucket repos with read-only access also require a username and password.</div>
                  <p>You can use a password for HTTPS credentials.</p>
                  <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> to use with the connection. </p>
                  <p>If you log into Bitbucket using a Google account, you can create an application password in Bitbucket to use with Harness. For steps on this, see <a href="https://confluence.atlassian.com/bitbucket/app-passwords-828781300.html" target="_blank">App passwords</a> from Atlassian.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Bitbucket Account URL</p>
                </td>
                <td>
                  <p>The URL for your Git repo. Make sure that it matches the Connection Type option you selected.</p>
                  <p>If you selected <strong>Repository</strong> in <strong>URL</strong> <strong>Type</strong>, enter the full URL for the repo.</p>
                  <p>For <strong>HTTP</strong>, the format for the URL should be <code>https://bitbucket.org/&lt;userName&gt;/&lt;repoName&gt;.git</code>.</p>
                  <p>If you selected <strong>Account</strong> in <strong>URL</strong> <strong>Type</strong>, enter the URL without the repo name. When you use this Connector in a Harness setting you will be prompted to provide a repo name.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Connection Type</p>
                </td>
                <td>
                  <p>You can select <strong>HTTPS</strong> or <strong>SSH</strong> for the connection.</p>
                  <p>You will need to provide the protocol-relevant URL in <strong>Bitbucket Account URL</strong>.</p>
                  <p>If you use Two-Factor Authentication for your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>. HTTPS requires personal access token.</p>
                  <div class="note-callout">For SSH, ensure that the key is not OpenSSH, but rather PEM format. To generate an SSHv2 key, use: <code>ssh-keygen -t rsa -m PEM</code> The <code>rsa</code> and <code>-m PEM</code> ensure the algorithm and that the key is PEM. Next, follow the prompts to create the PEM key. For more information, see the <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen man page</a>.</div>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Description</p>
                </td>
                <td>
                  <p>A description of this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Enable API Access</p>
                </td>
                <td>
                  <p>This option is required for using Git-based triggers, Webhook management, and updating Git statuses. If you are using Harness Git Experience, you will need to use this setting.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>ID</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Name</p>
                </td>
                <td>
                  <p>The unique name for this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Password</p>
                </td>
                <td>
                  <p>A <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your Bitbucket user account.</p>
                  <div class="note-callout">If you have set up Two-Factor Authentication in your Bitbucket account, then you need to generate a personal access token in your repo and enter that token in the <strong>Password/Token</strong> field.</div>
                </td>
              </tr>
              <tr>
                <td>
                  <p>SSH Key</p>
                </td>
                <td>
                  <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> for use with the connection as a <a href="/article/77tfo7vtea-add-file-secrets">Harness Encrypted File secret</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Tags</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/i8t053o0sq-tags-reference">Tags Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>URL Type</p>
                </td>
                <td>
                  <p>You can select <strong>Account</strong> or <strong>Repository</strong>.</p>
                  <p>You can add a connection to your entire Git account or just a repo in the account. Selecting a Git account enables you to use one Connector for all of your subordinate repos.</p>
                  <p>Later when you test this connection, you will use a repo in the account.</p>
                  <p>In either case, when you use the Connector later in Harness, you will specify which repo to use.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Username</p>
                </td>
                <td>
                  <p>Username for the account.</p>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </details>
    </div>
    <p></p>
    <p></p>
    <h4>Git Connector Settings</h4>
    <p></p>
    <div class="hd--html">
      <details>
        <summary>Here is an example:</summary>
        <div>
          <p>Before Harness syncs with your Git repo, it&#39;ll confirm that all Harness&#39; settings are in a valid state. If a connection isn&#39;t working, Harness won&#39;t sync with your Git repo.</p>
          <table>
            <tbody>
              <tr>
                <td>
                  <p>Connection Type</p>
                </td>
                <td>
                  <p>You can select <strong>HTTPS</strong> or <strong>SSH</strong> for the connection.</p>
                  <p>You will need to provide the protocol-relevant URL in <strong>Git Account URL</strong>.</p>
                  <p>If you use Two-Factor Authentication for your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>. HTTS is required a personal access token.</p>
                  <div class="note-callout">For SSH, ensure that the key is not OpenSSH, but rather PEM format. To generate an SSHv2 key, use: <code>ssh-keygen -t rsa -m PEM</code> The <code>rsa</code> and <code>-m PEM</code> ensure the algorithm and that the key is PEM. Next, follow the prompts to create the PEM key. For more information, see the <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen man page</a>.</div>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Description</p>
                </td>
                <td>
                  <p>A description of this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Git Account URL</p>
                </td>
                <td>
                  <p>The URL for your Git repo. Ensure that it matches the Connection Type option you selected.</p>
                  <p>If you selected <strong>Git Repository</strong> in <strong>URL</strong> <strong>Type</strong>, enter the full URL for the repo.</p>
                  <p>If you selected <strong>Git Account</strong> in <strong>URL</strong> <strong>Type</strong>, enter the URL without the repo name. When you use this Connector in a Harness setting you will be prompted to provide a repo name.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>ID</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Name</p>
                </td>
                <td>
                  <p>The unique name for this Connector.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Password</p>
                </td>
                <td>
                  <p>A <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text</a> secret for the credentials of your Git user account.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Setup Delegates</p>
                </td>
                <td>
                  <p>You can select <strong>Connect via any available delegate</strong> or <strong>Connect only via delegates which has all of the following tags</strong>.</p>
                  <p>You need to enter <strong>Selectors</strong> to connect via specific delegates. For more information see <a href="/article/nnuf8yv13o-select-delegates-with-selectors">Select Delegates with Tags</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>SSH Key</p>
                </td>
                <td>
                  <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>Username</strong> as <code>git </code> and an <strong>SSH Key</strong> for use with the connection as a <a href="https://ngdocs.harness.io/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Tags</p>
                </td>
                <td>
                  <p>See <a href="https://ngdocs.harness.io/article/i8t053o0sq-tags-reference">Tags Reference</a>.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>URL Type</p>
                </td>
                <td>
                  <p>You can select <strong>Account</strong> or <strong>Repository</strong>.</p>
                  <p>You can add a connection to your entire Git account or just a repo in the account. Selecting a Git account enables you to use one Connector for all of your subordinate repositories.</p>
                  <p>Later when you test this connection, you will use a repo in the account.</p>
                  <p>In either case, when you use the Connector later in Harness, you will specify which repo to use.</p>
                </td>
              </tr>
              <tr>
                <td>
                  <p>Username</p>
                </td>
                <td>
                  <p>The username for the account.</p>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </details>
    </div>
    <p></p>
    <p></p>
    <h4>GitHub Connector Settings</h4>
    <p></p>
    <div class="hd--html">
      <details>
        <summary>Here is an example:</summary>
        <div>
        <ul>
      <li>One Harness Application cannot be in multiple repos.</li>
      <li>Before Harness syncs with your Git repo, it validates all Harness settings. Harness won&#39;t sync with your Git repo if it cannot establish a connection to the specified Artifact Repo or Cloud Provider.</li>
    </ul>
    <table>
      <tbody>
        <tr>
          <td>
            <p>API Authentication</p>
          </td>
          <td>
            <p>A <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your GitHub user account.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Authentication</p>
          </td>
          <td>
            <div class="note-callout">Read-only GitHub repos also require a username and password/token.</div>
            <p>You can use a password/token for HTTPS credentials.</p>
            <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> to use with the connection. </p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Connection Type</p>
          </td>
          <td>
            <p>You can select <strong>HTTPS</strong> or <strong>SSH</strong> for the connection.</p>
            <p>You will need to provide the protocol-relevant URL in <strong>URL</strong>.</p>
            <p>If you use Two-Factor Authentication for your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>. HTTPS connections require a personal access token.</p>
            <div class="note-callout">For SSH, make sure that the key is PEM and not OpenSSH. To generate an SSHv2 key, use: <br/><code>ssh-keygen -t rsa -m PEM</code> <br/>Use <code>rsa</code> and <code>-m PEM</code> to make sure that the algorithm and the key are PEM.<br/>Next, follow the prompts to create the PEM key. See the  <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen man page</a> and <a href="https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh" target="_blank">Connecting to GitHub with SSH</a>.</div>
            <div class="note-callout">Starting March 15, 2022, GitHub is fully deprecating RSA with SHA-1. GitHub will allow ECDSA and Ed25519 to be used. RSA keys uploaded after this date will work with SHA-2 signatures only (RSA keys uploaded before this date will continue to work with SHA-1). See <a href="https://github.blog/2021-09-01-improving-git-protocol-security-github/#when-are-these-changes-effective" target="_blank">Improving Git protocol security on GitHub</a> from GitHub.<br/><br/>Generating an SSH key in ECDSA looks like this:<br/><br/><code>ssh-keygen -t ecdsa -b 256 -f /home/user/Documents/ECDSA/key -m pem</code></div>
          </td>
        </tr>
        <tr>
          <td>
            <p>Description</p>
          </td>
          <td>
            <p>Text string.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Enable API Access</p>
          </td>
          <td>
            <p>This option is required for using Git-based triggers, Webhooks management, and updating Git statuses.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>GitHub Repository URL</p>
          </td>
          <td>
            <p>The URL for a Git org or repo. The URL format must match the <a href="#connection_type" target="_blank">Connection Type</a> you selected --for example:</p>
            <ul>
              <li>HTTPS: <a href="https://github.com/wings-software/harness-docs.git" target="_blank">https://github.com/wings-software/harness-docs.git</a></li>
              <li>SSH: <a href="https://github.com/org-name/repo-name" target="_blank">git@github.com:wings-software/harness-docs.git</a></li>
            </ul>
            <p>If you selected <strong>Git Repository</strong> in <a href="#url_type">URL Type</a>, enter the full URL for the repo such as <a href="https://github.com/org-name/repo-name"><code>https://github.com/org-name/repo-name</code></a>.</p>
            <p>If you selected <strong>Git Account</strong> in <a href="#url_type">URL Type</a>, enter the URL without the repo name, like <code>https://github.com/org-name</code>. You will need to provide a repo name before you can use the Connector in Harness.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>ID</p>
          </td>
          <td>
            <p>See <a href="/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Name</p>
          </td>
          <td>
            <p>The unique name for this Connector.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Password/Personal Access Token</p>
          </td>
          <td>
            <p>A <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your GitHub user account.</p>
            <p>A Personal Access Token (PAT) is required if your GitHub authentication uses 2FA.</p>
            <p>Typically, you can validate your token from the command line before using it in Harness. For example:</p>
            <p><code>curl -i https://api.github.com -u &lt;username&gt;:&lt;token&gt;</code></p>
            <div class="note-callout">If have Two-Factor Authentication set up in your Git repo, then you need to generate a personal access token in your repo and enter that token in the <strong>Password/Token</strong> field. In GitHub, you can set up the personal access token at <a href="https://github.com/settings/tokens/new" target="_blank">https://github.com/settings/tokens/new</a>.</div>
          </td>
        </tr>
        <tr>
          <td>
            <p>PAT Permissions</p>
          </td>
          <td>
            <p></p>
            <ul>
              <li>The GitHub user account used to create the Personal Access Token must have admin permissions on the repo.</li>
              <li>GitHub doesn&#39;t provide a way of scoping a PAT for read-only access to repos. You must select the following permissions:</li>
            </ul>
            <p></p>
            <figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/v9sigwjlgo/1643087216872/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure>
          </td>
        </tr>
        <tr>
          <td>
            <p>SSH Key</p>
          </td>
          <td>
            <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> to use with the connection as a <a href="/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a>.</p>
            <p>Harness also supports <a href="https://docs.github.com/en/developers/overview/managing-deploy-keys#deploy-keys" target="_blank">GitHub deploy keys</a>. Deploy keys grant access to a single repo. Using a deploy key ensures that the Connector only works with the specific repo you selected in <strong>URL Type</strong>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Tags</p>
          </td>
          <td>
            <p>See <a href="/article/i8t053o0sq-tags-reference">Tags Reference</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>URL Type</p>
          </td>
          <td>
            <p>You can select Git Account (which is a GitHub <strong>organization</strong>) or Git Repository.</p>
            <p>You can add a connection to your entire Git org or just a repo in the org. Selecting a Git org enables you to use one Connector for all of your subordinate repos.</p>
            <p>Later, when you test this connection, you&#39;ll use a repo in the org.</p>
            <p>In either case, when you use the Connector later in Harness, you&#39;ll specify which repo to use.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Username</p>
          </td>
          <td>
            <p>Your personal GitHub account username.</p>
          </td>
        </tr>
      </tbody>
    </table></div>
      </details>
    </div>
    <p></p>

    <p></p>
    <h4>GitLab Connector Settings</h4>
    <p></p>
    <div class="hd--html">
      <details>
        <summary>Here is an example:</summary>
        <div>
        <ul>
      <li>One Harness Application cannot be in multiple repos.</li>
      <li>Before Harness syncs with your Git repo, it&#39;ll confirm that all Harness&#39; settings are in a valid state. If a connection isn&#39;t working — for example, a connection to an Artifact Repo or Cloud Provider — Harness won&#39;t sync with your Git repo.</li>
    </ul>
    <table>
      <tbody>
        <tr>
          <td>
            <p>API Authentication</p>
          </td>
          <td>
            <p>A <a href="https://ngdocs.harness.io/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your Gitlab user account.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Authentication</p>
          </td>
          <td>
            <p>You can use a password/token for HTTPS credentials.</p>
            <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> for use with the connection. </p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Connection Type</p>
          </td>
          <td>
            <p>You can select <strong>HTTPS</strong> or <strong>SSH</strong> for the connection.</p>
            <p>You will need to provide the protocol-relevant URL in <strong>GitLab Account URL</strong>.</p>
            <p>If you use Two-Factor Authentication for your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>. HTTPS is required a personal access token.</p>
            <div class="note-callout">For SSH, ensure that the key is not OpenSSH, but rather RSA or another algorithm. To generate an SSHv2 key, use: <code>ssh-keygen -t rsa -m PEM</code> The <code>rsa</code> and <code>-m PEM</code> ensure that the key is RSA. Next, follow the prompts to create the PEM key. For more information, see the <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen man page</a>.</div>
            <p>To sync with GitLab, you will need to generate a SSH key pair and add the SSH key to your GitLab account. For more information, see <a href="https://gitlab.com/help/ssh/README#generating-a-new-ssh-key-pair" target="_blank">Generating a new SSH key pair</a> from GitLab.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Description</p>
          </td>
          <td>
            <p>Text string.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Enable API Access</p>
          </td>
          <td>
            <p>This option is required for using Git-based triggers, Webhooks management, and updating Git statuses. You&#39;ll need this setting if you use <a href="https://ngdocs.harness.io/article/utikdyxgfz-harness-git-experience-overview">Harness Git Experience</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>ID</p>
          </td>
          <td>
            <p>See <a href="https://ngdocs.harness.io/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>GitLab Account URL</p>
          </td>
          <td>
            <p>The URL for your Git repo. Ensure that it matches the Connection Type option you selected.</p>
            <p>If you selected <strong>Repository</strong> in <strong>Type</strong>, enter the full URL for the repo.</p>
            <p>If you selected <strong>Account</strong> in <strong>Type</strong>, enter the URL without the repo name. When you use this Connector in a Harness setting you will be prompted to provide a repo name.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Name</p>
          </td>
          <td>
            <p>The unique name for this Connector.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Password/Personal Access Token</p>
          </td>
          <td>
            <p>A <a href="https://ngdocs.harness.io/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a> for the credentials of your GitLab user account.</p>
            <p>The Personal Access Token requirements for Harness are: <code>api</code>, <code>read_repository</code>, <code>write_repository</code>.</p>
            <figure><a href="https://files.helpdocs.io/i5nl071jo5/articles/5abnoghjgo/1646939076070/image.png"><img src="https://files.helpdocs.io/i5nl071jo5/articles/5abnoghjgo/1646939076070/image.png"/></a></figure>
          </td>
        </tr>
        <tr>
          <td>
            <p>SSH Key</p>
          </td>
          <td>
            <p>If you selected <strong>SSH</strong> as the connection protocol, you must add the <strong>SSH Key</strong> for use with the connection as a <a href="https://ngdocs.harness.io/article/osfw70e59c-add-text-secrets">Harness Encrypted Text secret</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Tags</p>
          </td>
          <td>
            <p>See <a href="https://ngdocs.harness.io/article/i8t053o0sq-tags-reference">Tags Reference</a>.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>URL Type</p>
          </td>
          <td>
            <p>You can select Git Account or Git Repository.</p>
            <p>You can add a connection to your entire Git account or just a repo in the account. Selecting a Git account enables you to use one Connector for all of your subordinate repos.</p>
            <p>Later when you test this connection, you will use a repo in the account.</p>
            <p>In either case, when you use the Connector later in Harness, you will specify which repo to use.</p>
          </td>
        </tr>
        <tr>
          <td>
            <p>Username</p>
          </td>
          <td>
            <p>The username <strong>git</strong>.</p>
            <div class="note-callout"><strong>git</strong> is the only value you should use in <strong>Username</strong>.</div>
          </td>
        </tr>
      </tbody>
    </table>
        </div>
      </details>
    </div>
    <p></p>

    <h3>Edit Codebase Configuration</h3>
    <p>After you create your Build Stage, you can edit the Codebase for the Pipeline. Click <strong>Codebase</strong> in the right panel. You can change the Codebase Connector and the following advanced options.</p>
    <h4>Depth</h4>
    <p>Depth is the number of commits that you want to clone from your Git repo.</p>
    <p>Depth is set to 1 by default for manual triggers. For triggers other than the manual trigger, you need to set the depth number.</p>
    <p>For details, see <a href="https://git-scm.com/docs/git-clone" target="_blank">https://git-scm.com/docs/git-clone</a>.</p>
    <h4>SSL Verify</h4>
    <p>Select an option to verify your Git SSL certification.</p>
    <p>If set to <strong>True</strong>, it verifies your Git SSL certificate.</p>
    <p>If set to <strong>False</strong>, your Git SSL certificate verification is skipped.</p>
    <h4>Pull Request Clone Strategy</h4>
    <p>Select a pull request clone strategy.</p>
    <h5>Merge Commit</h5>
    <p>Merges the source branch of the pull request to the target branch.</p>
    <h5>Source Branch</h5>
    <p>Clones only the source branch of the pull request.</p>
    <h4>Set Container Resources</h4>
    <p>Maximum resources limit values for the resources used by the container at runtime.</p>
    <h5>Limit Memory</h5>
    <p>Maximum memory that the container can use.</p>
    <p>You can express memory as an integer value with one of these suffixes: G, M, Gi, Mi.</p>
    <h5>Limit CPU</h5>
    <p>See <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes">Resource units in Kubernetes</a>.</p>
    <p>Limit the number of cores that the container can use.</p>
    <p>Limits for CPU resources are measured in CPU units.</p>
    <p>Fractional requests are allowed. The expression 0.1 is equivalent to the expression 100m, which can be read as one hundred millicpu.</p>
    <div class="tip-callout">If cloning your Codebase takes more time than expected, try these configurations for cloning your codebase:<br/>1. Increase the <a href="/article/6vks5ym7sq-edit-a-ci-pipeline-codebase-configuration#limit_memory">Limit Memory</a> of Git clone to 1 Gi.<br/>2. Use <a href="/article/6vks5ym7sq-edit-a-ci-pipeline-codebase-configuration#source_branch" target="_blank">Source Branch clone strateg</a>y instead of Merge Commit. Source branch clones only the pull request branch.<br/>3. Specify <a href="/article/6vks5ym7sq-edit-a-ci-pipeline-codebase-configuration#depth" target="_blank">Depth</a> to 1.</div>
    <h3>Configure-As-Code: YAML</h3>
    <p>You can also use the following YAML snippet to set up the Codebase configuration in CIE.</p><pre class="hljs yaml">ci:<br/>            codebase:<br/>                connectorRef:<br/>                repoName: <br/>                build: <br/>                depth: <br/>                sslVerify: <br/>                prCloneStrategy: </pre>
    <h3>See Also</h3>
    <ul>
      <li><a href="https://ngdocs.harness.io/article/f6yobn7iq0-runtime-inputs">Runtime Inputs</a></li>
      <li><a href="/article/m0awmzipdp-create-a-connector-using-yaml">Create a Connector using YAML</a></li>
    </ul>
    <p></p>
  slug: draft-doc-1476-codebase-setup-and-configuration
  tags: []
  is_live: true
