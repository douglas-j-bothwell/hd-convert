type: article
article_id: ud5rjfcp8h
user_id: xwmdbyp4x8
category_id: rg8mrhqm95
author:
  name: Doug Bothwell
  email: douglas.bothwell@harness.io
  profile_image: https://www.gravatar.com/avatar/120de2cc624d7903cf3d83b86d0f1b5e?d=mm&s=150
title: Run Windows Builds in a Kubernetes Build Infrastructure
slug: run-windows-builds-in-a-kubernetes-build-infrastructure
description: You can run Windows builds in your Kubernetes build infrastructure. Windows
  Server 2019 images are available for running CI Builds and for out-of-the-box Ci
  Steps.
short_version: You can run Windows builds in your Kubernetes build infrastructure.
  Windows Server 2019 images are available for running CI Builds and for out-of-the-box
  Ci Steps.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-17T01:26:12.688794Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Run Windows Builds in a Kubernetes Build Infrastructure
  description: You can run Windows builds in your Kubernetes build infrastructure.
    Windows Server 2019 images are available for running CI Builds and for out-of-the-box
    Ci Steps.
  short_version: You can run Windows builds in your Kubernetes build infrastructure.
    Windows Server 2019 images are available for running CI Builds and for out-of-the-box
    Ci Steps.
  body: '<p>You can run Windows builds in your Kubernetes build infrastructure. Windows
    Server 2019 images are available for running CI Builds and for out-of-the-box
    Ci Steps such as Run, Run Step, Save, and Restore.</p><h3>Important Notes</h3><ul><li>You
    can&#39;t run Steps that build and push to Docker registries, because Kaniko is
    not supported on Windows.</li><li>You canâ€™t run Docker-in-Docker using a Windows
    image, because privileged mode is not supported on Windows.</li><li>Only Windows
    Server 2019 images are supported. If you are using Google Kubernetes Engine, make
    sure you use the recommended image type for Windows Server 2019.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/ud5rjfcp8h/1657464436534/windows-image-in-gke.png"
    style="display:block;margin-left:0;margin-right:auto" data-hd-align="left"/></figure></li><li>If
    you use a custom Windows image in a Run Step, the container must be based on <a
    href="https://hub.docker.com/_/microsoft-windows-servercore">Windows Server Core</a>
    version 1809 and must include <code>netapi32.dll</code>. To include this in your
    image, add the following command to the Dockerfile:<pre>COPY --from=core /windows/system32/netapi32.dll
    /windows/system32/netapi32.dll</pre></li></ul><h3>Run the Windows Build</h3><ol><li>Set
    up your cluster with both Linux and Windows node pools. Linux is required for
    running the Delegate.</li><li>Set up the Build Stage in your Pipeline. Go to the
    Infrastructure tab and set the following options:<ol><li><strong>OS</strong> =
    <strong>Windows</strong></li><li>Under <strong>Advanced</strong>, set the Node
    Selector to use the Windows node pool. Enter the following key/value pair:<br/><strong>kubernetes.io/os</strong>
    = <strong>windows</strong><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/ud5rjfcp8h/1657465245784/node-selector-windows.png"
    style="max-height:50%;max-width:50%;display:block;margin-left:0;margin-right:auto"
    data-hd-height="50%" data-hd-width="50%" data-hd-align="left"/></figure></li></ol></li><li>Run
    the CI build.</li></ol><h3>YAML Example</h3><p>The following Pipeline definition
    provides a simple example for setting up a Pipeline to run Windows builds.</p><details><summary>Details</summary><div><pre
    class="hljs yaml">pipeline:<br/>  name: WindowsK8<br/>  identifier: WindowsK8<br/>  projectIdentifier:
    myproject<br/>  orgIdentifier: default<br/>  tags: {}<br/>  properties:<br/>    ci:<br/>      codebase:<br/>        connectorRef:
    $GITHUB_CONNECTOR<br/>        repoName: testing-flask-with-pytest<br/>        build:
    &lt;+input&gt;<br/>  stages:<br/>    - stage:<br/>        name: Build and Test<br/>        identifier:
    Build_and_Test<br/>        type: CI<br/>        spec:<br/>          cloneCodebase:
    true<br/>          infrastructure:<br/>            type: KubernetesDirect<br/>            spec:<br/>              connectorRef:
    $K8S_CONNECTOR<br/>              namespace: harness-delegate-ng<br/>              automountServiceAccountToken:
    true<br/>              nodeSelector:<br/>                kubernetes.io/os: windows<br/>              os:
    Windows<br/>          execution:<br/>            steps:<br/>              - step:<br/>                  type:
    Run<br/>                  name: helloWorld<br/>                  identifier: Pre<br/>                  spec:<br/>                    connectorRef:
    $DOCKERHUB_CONNECTOR<br/>                    image: winamd64/python<br/>                    shell:
    Powershell<br/>                    command: &#34;Write-Host \&#34;hello world\&#34;
    &#34;</pre></div></details><p></p>'
  slug: run-windows-builds-in-a-kubernetes-build-infrastructure
  tags: []
  is_live: true
