type: article
article_id: o75arkcg8i
user_id: slcpusem6b
category_id: viib5j7fek
author:
  name: Archana Singh
  profile_image: https://www.gravatar.com/avatar/e323facc5a711ac44c46e58dcb52aa3e?d=mm&s=150
title: Optimize Kubernetes Costs with Workload Recommendations
slug: workload-recommendations
description: Harness Cloud Cost Management (CCM) provides recommendations for your
  Kubernetes clusters. These recommendations show you resource optimization opportunities
  to potentially reduce your monthly spending.
short_version: Harness Cloud Cost Management (CCM) provides recommendations for your
  Kubernetes clusters. These recommendations show you resource optimization opportunities
  to potentially reduce your monthly spending.
tags:
- kubernetes
- optimize cloud cost
- recommendations
- workload
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-06-27T23:18:05.813635Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Optimize Kubernetes Costs with Workload Recommendations
  description: Harness Cloud Cost Management (CCM) provides recommendations for your
    Kubernetes clusters. These recommendations show you resource optimization opportunities
    to potentially reduce your monthly spending.
  short_version: Harness Cloud Cost Management (CCM) provides recommendations for
    your Kubernetes clusters. These recommendations show you resource optimization
    opportunities to potentially reduce your monthly spending.
  body: '<p>One of the most impactful ways to reduce spend on Kubernetes infrastructure
    is to make sure your clusters are optimally sized for the workloads and node pools
    they run. Harness Cloud Cost Management (CCM) provides recommendations for your
    Kubernetes clusters to show you resource optimization opportunities to potentially
    reduce your monthly spend.</p><p>The recommendations are computed by analyzing
    the past utilization of CPU and memory of your workload. The implementation uses
    a histogram method to compute recommendations.</p><p>You can also tune recommendations
    by changing the Quality of Service (QoS) and the percentage of recommended CPU
    and memory requests/limits buffer.</p><p>This topic describes how CCM computes
    workload recommendations and how you can use them to potentially reduce monthly
    costs.</p><div class="note-callout">Before using recommendations in your cluster
    environment, ensure that you evaluate their impact thoroughly. The person reviewing
    the recommendations should be able to understand the impacts identified in the
    recommendations, as well as the impact on the infrastructure and business.<br/>Using
    recommendations without proper assessment could result in unexpected changes,
    such as issues with system performance or poor reliability.</div><h3>Before You
    Begin</h3><ul><li><a href="/article/ltt65r6k39-set-up-cost-visibility-for-kubernetes">Set
    Up Cloud Cost Management for Kubernetes</a></li><li><a href="/category/e7k0qds7tw-ccm-perspectives">CCM
    Perspectives</a></li></ul><h3>Review: How are Workload Recommendations Computed?</h3><p>In
    Harness CCM, the workload recommendations are computed by analyzing the past utilization
    of CPU and memory of your workload. The implementation uses a histogram method
    to compute the recommendations.</p><p></p><p>The computation adds a 15% buffer
    to the recommended resources by default. CCM also allows you to add any additional
    buffer using the Tune recommendations option.</p><p></p><p>When you enable <a
    href="https://ngdocs.harness.io/article/ltt65r6k39-set-up-cost-visibility-for-kubernetes"
    target="_blank">Cost Visibility</a> for your <a href="https://ngdocs.harness.io/article/1gaud2efd4-add-a-kubernetes-cluster-connector"
    target="_blank">Kubernetes Cluster</a>, the <a href="https://ngdocs.harness.io/article/2k7lnc7lvl-delegates-overview"
    target="_blank">Delegate</a> associated with your Connector starts collecting
    CPU and memory resource utilization metrics for every node and pod (including
    individual containers) present in the cluster every minute using a metrics server.
     CCM relies on the Metrics Server and initializes recommendations after an initial
    data collection of 24-48 hours. The Metrics Server is queried by the controller
    every minute for utilization data.</p><p></p><p>The utilization data collected
    every minute is then aggregated in the Delegate for a 20-minute window. The 20-minute
    aggregated data is then sent to Harness:</p><ul><li><strong>CPU</strong>: For
    CPU values, a partial histogram for the last 20 minutes is sent. </li><li><strong>Memory</strong>:
    The maximum value of the memory is sent as a single data point.</li></ul><p>We
    use this data for further processing and to compute the complete histogram displayed
    in the UI (partial histograms are merged for the CPU and memory histogram is computed
    using the data points).</p><p></p><p>Each of these daily histograms has an equal
    weightage for a given workload. As a result, if you select the last 30 days of
    data to aggregate, we will assign equal weightage to each of the 30 days.</p><p></p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1647288836866/screenshot-2022-03-15-at-1-43-27-am.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p></p><p>You
    can choose to tune the recommendations by changing the Quality of Service (QoS)
    and the percentage of recommended CPU and memory requests/limits buffer. See Tune
    Recommendations.</p><p></p><p>You can also customize your recommendations by increasing
    or decreasing the request and limit coverage of the CPU and memory samples. Simply
    drag the slider of the number of samples to adjust the percentile. The slider
    indicates the percentile of all the CPU and memory samples that are covered to
    compute the resource recommendations. Based on your selection, the recommendations
    for your workload are made.</p><h4>Why Histogram?</h4><p>A histogram is used to
    account for the seasonality of high resource utilization on certain days of the
    week. Assume your application receives a lot of traffic (and thus a lot of resource
    utilization) on weekends and we&#39;re using a decaying histogram. In that case:</p><ul><li>If
    you view workload recommendation on Friday and selected the last seven days of
    utilization data, then Saturday will be given the least weightage, followed by
    Sunday, hence the recommended resources will be low.</li><li>If you view the workload
    recommendation on Monday, Sunday will be given the most weightage, hence your
    recommended resources may be high.</li></ul><p>To avoid this, we use the histogram
    method and give equal weight to all previous days.</p><h3>Review: Types of Workload
    Recommendations</h3><p>The recommendations are categorized as the following:</p><ul><li>Cost
    Optimized</li><li>Performance Optimized</li></ul><h4>Cost Optimized</h4><p>The
    cost-optimized recommendations are computed as the following:</p><ul><li>The lower
    bound is based on the 50th percentiles of CPU samples and memory peaks.</li><li>There
    is no upper bound for CPU samples and memory peaks are based on the 95th percentile.
    It is recommended not to set the upper bound for the CPU samples, because the
    CPU is considered a compressible resource. If your application starts hitting
    the CPU limits, Kubernetes starts throttling the pods.</li><li>There is no limit
    set for the CPU. This is to avoid the throttling of the workloads when there is
    a spike in CPU usage. The usage of the CPU may go up in certain conditions, for
    example during the pod start. In such a scenario, the CPU can burst and get the
    required additional resources.</li><li>The potential monthly spend and savings
    are calculated based on the 90th percentiles of CPU samples and memory peaks.</li></ul><p>Since
    the recommendations are computed using the 50th percentile of the CPU samples
    and memory peaks, this may potentially lead to system performance issues. Before
    using cost-optimized recommendations, ensure that you evaluate the recommendation&#39;s
    impact thoroughly.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1647289350942/screenshot-2022-03-15-at-1-43-27-am.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p></p><h4>Performance
    Optimized</h4><p>The performance-optimized recommendations are computed using
    the 95th percentile of CPU samples and memory peaks. Because of this, the probability
    of having any effect on the performance is minimum. However, the cost may go high
    for the resources that are optimized using this method.</p><p></p><p>The potential
    monthly spend and savings are calculated based on the 90th percentiles of CPU
    samples and memory peaks.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1647973249260/screenshot-2022-03-22-at-11-50-34-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><h5>Example</h5><p>Let&#39;s
    try to understand how the recommendations are computed using the following example.
    The following example illustrates how the resources can be optimized using the
    cost-optimized recommendations:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1648021062398/screenshot-2022-03-23-at-1-07-16-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p></p><pre>Current
    Resources:<br/>  limits:<br/>    memory: 8Gi<br/>    cpu: 1<br/>   requests:<br/>     memory:
    8Gi<br/>     cpu: 1<br/> <br/>Recommended Resources based on utilization data
    for the last 7 days (QoS: Guaranteed, %of buffer: 0)<br/><br/> limits:<br/>  memory:
    3.5Gi<br/>  cpu: 1.1<br/>requests:<br/>  memory: 3.5Gi<br/>  cpu: 1.1</pre><p></p><p>The
    current resources are provisioned using <code>8Gi memory</code> and <code>1 CPU</code>,
    the recommended resources require only <code>3.5Gi memory</code> and <code>1.1m
    CPU</code> for limits and requests both.</p><h3>Step: View Recommendations</h3><div
    class="note-callout">Once you enable CCM, it may take up to 48 hours for the recommendations
    to appear in Cloud Costs. It depends on the time at which CCM receives the utilization
    data for the workload.</div><p>In <strong>Cloud Costs</strong>, click <strong>Recommendations</strong>.</p><p>The
    recommendations page displays the following information:</p><ul><li>A breakdown
    of all the available recommendations.</li><li><strong>Potential Monthly Savings</strong>
    across your Kubernetes clusters if you apply the recommendations.</li><li><strong>Forecasted
    Monthly Spend</strong> across your Kubernetes clusters if you do not apply the
    recommendations.</li><li><strong>Emissions that can be reduced</strong> and <strong>Potential
    Carbon Emissions</strong> are features that track greenhouse gas emissions.</li></ul><p>The
    <strong>Recommendation Breakdown</strong> displays the following information:</p><p></p><table><tbody><tr><td><p><strong>Monthly
    Savings</strong></p></td><td><p>Potential monthly savings for your resource, if
    you apply the recommendations.</p></td></tr><tr><td><p><strong>Resource Name</strong></p></td><td><p>Name
    of the resource for which CCM displays the recommendation.</p></td></tr><tr><td><p><strong>Monthly
    Saving</strong></p></td><td><p>Potential Monthly Savings for the resource, if
    you apply the recommendations.</p></td></tr><tr><td><p><strong>Monthly Cost</strong></p></td><td><p>The
    monthly cost of the recommendation.</p></td></tr><tr><td><p><strong>Recommendation
    Type</strong></p></td><td><p>Type of the recommendation for your resource. For
    example, <strong>rightsizing</strong> or <strong>resizing</strong>. Based on your
    resource type, CCM recommends rightsizing or resizing your CPU, memory, or node
    counts.</p></td></tr></tbody></table><p></p><p>You can create and use filters
    to select resources and recommendations.</p><p>You can filter by:</p><ul><li><strong>Resource
    Name:</strong> the name of the resource being monitored.</li><li><strong>Namespace</strong>:
    each Kubernetes namespace in the cluster.</li><li><strong>Cluster Name</strong>:
    each Kubernetes cluster in your infrastructure.</li><li><strong>Resource Type</strong>:
    the type of resources for which the recommendation is displayed. Currently, CCM
    supports ECS service, node pool and workload.</li><li><strong>Savings</strong>:
    enter the minimum monthly savings. For example, all the recommendations with potential
    monthly savings of more than $1000.</li><li><strong>Potential Spend</strong>:
    filter by forecasted monthly spend greater than the specified amount. For example,
    all the recommendations with forecasted monthly spend of more than $1000.</li></ul><p>The
    recommendation for the selected resource is displayed.</p><p>Click a recommendation
    to view its details.</p><p>Within a recommendation, select the number of days
    to compute recommendations based on the utilization data. You can select the last
    day, 7 days, or 30 days.</p><p>You can use this information to optimize your resources
    to potentially reduce your monthly cloud costs.</p><h3>Step: Tune and Share Recommendations</h3><p>Tune
    the recommendations by changing the Quality of Service (QoS) and the percentage
    of recommended CPU and memory requests/limits buffer.</p><h4>Quality Of Service(QoS)
    for Workloads</h4><p>You can set burstable or guaranteed QoS for recommended requests/limits.
    For more information on QoS, see <a href="https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/">Configure
    Quality of Service for Pods</a>.</p><h5>Burstable</h5><p>A pod is assigned to
    a QoS class of burstable if:</p><ul><li>The pod does not meet the criteria for
    QoS class Guaranteed.</li><li>At least one container in the pod has a memory or
    CPU request.</li></ul><p>In this QoS class, resources can go beyond requests up
    to the limits. This recommended action does not affect other workloads and stays
    within bounds of usage. The scheduler uses the request to place the pod on a node,
    but the pod can use more resources up to the limit before it’s killed or throttled.
    For more information, see the <a href="https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/#create-a-pod-that-gets-assigned-a-qos-class-of-burstable">QoS
    class of Burstable</a>.</p><p>We do not recommend CPU limits in the case of burstable
    QoS.</p><h5>Guaranteed</h5><p>In this Quality of Service (QoS) class, resource
    requests and limits are set to the same values. Setting them to the same values
    guarantees that the resources requested by the container will be available to
    it when it is scheduled. This is considered as the ideal QoS class for the most
    stable Kubernetes clusters.</p><p>For a pod to be given a QoS class of guaranteed:</p><ul><li>Every
    container in the pod must have a memory limit and a memory request, and they must
    be the same.</li><li>Every container in the pod must have a CPU limit and a CPU
    request, and they must be the same.</li></ul><p>For more information, see the
    <a href="https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/#create-a-pod-that-gets-assigned-a-qos-class-of-guaranteed">QoS
    class of Guaranteed</a>.</p><p>To change the QoS, do the following:</p><ol><li>In
    the Recommendations details page, go to the <strong>Tune</strong> <strong>Recommendations</strong>
    section.</li><li>In <strong>Quality Of Service (QoS)</strong>, select <strong>Burstable</strong>
    or <strong>Guaranteed</strong>.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1647973047635/screenshot-2022-03-22-at-11-38-07-pm.png"/></figure>Based
    on your selection, the recommendations for your resources are made.</li></ol><h4>Buffer
    for Workloads</h4><p>You can set the percentage of buffer for recommended requests/limits.</p><div
    class="note-callout">By default, the recommendation computation adds a 15% buffer
    to the recommended resources. This option allows you to add an additional buffer
    to your resources.</div><p>In the Recommendations details page, go to the <strong>Tune</strong>
    <strong>Recommendations</strong> section.</p><p>In <strong>% Buffer to be considered
    for CPU/Memory values</strong>, drag the slider to increase or decrease the percentage
    of the buffer. By default, it is set to 0.</p><p>The resource recommendations
    are based on the percentage of the buffer you set.</p><h4>Set CPU/Memory/Node
    count/Instance preferences</h4><p>See <a href="/article/x75xp0xime-node-pool-recommendations">Optimize
    Kubernetes Costs with Node Pool Recommendations</a>.</p><h4>Sharing Recommendations</h4><p>When
    you tune a recommendation, the URL for the recommendation captures your changes.</p><p>You
    can see the changes following <code>details?</code> in the URL. For example, <code>details?buffer=10&amp;QoS=&#34;GUARANTEED&#34;</code>.</p><p>Capturing
    your changes in the URL enables you to share your tuned recommendation and ensure
    others can see you tuning. Simply tune the recommendation and then share the URL.</p><h3>Step:
    View Workload Details</h3><p>You can also view the following information:</p><ul><li>Details
    of the pods associated with the workload.</li><li>CPU and memory utilization of
    the workload.</li></ul><p>In the Recommendations details page, in <strong>Workload
    Details</strong>, click <strong>View more details</strong>.</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1647970571521/screenshot-2022-03-22-at-11-05-54-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p></p><p>The
    following details are displayed:</p><p></p><ul><li><strong>Workload details</strong>:
    The following information is displayed:<ul><li>Workload</li><li>Namespace</li><li>Workload
    Type</li><li>Cluster</li></ul></li><li><strong>Cost details</strong>: The following
    cost details are displayed:<ul><li><strong>Total Cost</strong>: For Kubernetes
    clusters, the total cost is the sum of all the node costs. For ECS clusters, the
    sum of all container instances.</li><li><strong>Idle Cost</strong>: Idle cost
    is the cost of idle resources (CPU and memory) allocated to a Kubernetes pod or
    an Amazon ECS task but is not utilized. For more information, see <a href="/article/hs7cyi1nix-harness-key-cloud-cost-concepts#idle_cost">Idle
    Cost</a>.</li><li><strong>Utilized Cost</strong>: Utilized cost is the cost estimate
    for the utilized node or pod resources.</li></ul></li><li><strong>Aggregation</strong>:
    The aggregated CPU and memory utilization value of your workload. The values are
    displayed as the following:<ul><li><strong>Time-weighted</strong>: This considers
    the active duration of pods when calculating the CPU and memory utilization.<figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1638465917754/screenshot-2021-12-02-at-10-54-28-pm.png"
    style="max-height:80%;max-width:80%" data-hd-height="80%" data-hd-width="80%"/></figure></li><li><strong>Absolute</strong>:
    This simply aggregates the CPU and memory utilization values.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/o75arkcg8i/1638465995066/screenshot-2021-12-02-at-10-56-02-pm.png"
    style="max-height:80%;max-width:80%" data-hd-height="80%" data-hd-width="80%"/></figure></li></ul></li></ul><p>Let&#39;s
    try to understand how <strong>time-weighted</strong> and <strong>absolute</strong>
    values are calculated using the following examples:</p><h5>Example 1</h5><p>Let&#39;s
    assume you want to check the CPU requests of your workload between 3 a.m. and
    4 a.m. Imagine there were two pods during that duration:</p><ol><li>Each pod requesting
    0.4 CPU</li><li>1st pod was deleted at 3:53 a.m. So the 1st pod was active for
    53 minutes in that duration</li><li>2nd pod was created at 3.53 a.m., so it was
    active for 7 mins in that duration</li></ol><p>In the case of <strong>time-weighted</strong>,
    the utilization value is calculated as the following:</p><p><code>[(cpu request
    of pod 1) * (active time) + (cpu request of pod 2) * (active time)]/ total duration</code></p><p>which
    is equal to <code>[(0.4*53) + (0.4*7)]/60 = 0.4</code></p><p>In the case of <strong>absolute</strong>,
    the utilization value is calculated as the following:</p><p><code>(cpu request
    of pod 1) + (cpu request of pod 2)</code></p><p>which is equal to <code>0.4 +
    0.4 = 0.8</code></p><h5>Example 2</h5><p>Let&#39;s assume you want to check the
    CPU requests of three workloads in your cluster:</p><ol><li>Each workload requesting
    0.4 CPU</li><li>Workload 1 runs from 0-25 mins into the hour</li><li>Workload
    2 runs from 15-40 mins into the hour</li><li>Workload 3 runs from 35-60 mins into
    the hour</li></ol><p>In the case of <strong>time-weighted</strong>, the utilization
    value is calculated as the following:</p><p><code>[(cpu request of pod 1) * (active
    time) + (cpu request of pod 2) * (active time) + (cpu request of pod 3) * (active
    time)]/ total duration</code></p><p>which is equal to <code>((0.4*25) + (0.4*25)
    + (0.4*25))/60 = 0.5</code></p><p>In the case of <strong>absolute</strong>, the
    utilization value is calculated as the following:</p><p><code>(cpu request of
    pod 1) + (cpu request of pod 2) + (cpu request of pod 3)</code></p><p>which is
    equal to <code>0.4 + 0.4 + 0.4 = 1.2</code></p><h3>Next Steps</h3><ul><li><a href="/article/x75xp0xime-node-pool-recommendations">Optimize
    Kubernetes Costs with Node Pool Recommendations</a></li><li><a href="/article/b8sdsxlfee-analyze-cost-for-kubernetes-using-perspectives">Analyze
    Cost for Kubernetes Using Perspectives</a></li></ul><h3>See Also</h3><p>The following
    blog post walks you through workload recommendations:</p><p><a href="https://harness.io/blog/recommendations-deep-dive/">Cloud
    Cost Workload Recommendations</a></p><p></p>'
  slug: workload-recommendations
  tags:
  - kubernetes
  - optimize cloud cost
  - recommendations
  - workload
  is_live: true
