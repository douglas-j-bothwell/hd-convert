type: article
article_id: ryk2e3ujpn
user_id: slcpusem6b
category_id: biypfy9p1i
author:
  name: Archana Singh
  profile_image: https://www.gravatar.com/avatar/e323facc5a711ac44c46e58dcb52aa3e?d=mm&s=150
title: Create AutoStopping Rules for RDS
slug: create-auto-stopping-rules-for-rds
description: This topic describes how to create AutoStopping Rules for Amazon Relational
  Database Service (RDS).
short_version: This topic describes how to create AutoStopping Rules for Amazon Relational
  Database Service (RDS).
tags:
- Autostopping rules
- Amazon RDS
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-05-09T08:50:04.025088Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Create AutoStopping Rules for RDS
  description: This topic describes how to create AutoStopping Rules for Amazon Relational
    Database Service (RDS).
  short_version: This topic describes how to create AutoStopping Rules for Amazon
    Relational Database Service (RDS).
  body: '<p>AutoStopping Rule is a dynamic and powerful resource orchestrator for
    non-production workloads. For more information, see <a href="https://ngdocs.harness.io/article/wzr5tz0ero-auto-stopping-rules">AutoStopping
    Rules Overview</a>.</p><p>This topic describes how to create AutoStopping Rules
    for Amazon Relational Database Service (RDS).</p><h3>Before You Begin</h3><ul><li><a
    href="https://ngdocs.harness.io/article/hiyi6xvj36-connect-to-an-aws-connector">Create
    an AWS Connector for AutoStopping Rules</a></li></ul><h3>Prerequisites</h3><ul><li>Access
    to CUR. See <a href="https://ngdocs.harness.io/article/80vbt5jv0q-set-up-cost-visibility-for-aws#review_cost_and_usage_reports_cur_and_ccm_requirements"
    target="_blank">Review: Cost and Usage Reports (CUR) and CCM Requirements</a></li><li>Permissions
    to create a cross-account role. See <a href="https://ngdocs.harness.io/article/80vbt5jv0q-set-up-cost-visibility-for-aws#aws_resource_optimization_using_auto_stopping_rules"
    target="_blank">AWS Access Permissions</a></li><li>Permissions for AWS Resource
    Optimization Using AutoStopping Rules. See<strong> </strong><a href="https://ngdocs.harness.io/article/80vbt5jv0q-set-up-cost-visibility-for-aws#aws_resource_optimization_using_auto_stopping_rules"
    target="_blank">AWS Resource Optimization Using AutoStopping Rules</a></li><li>The
    database that will be onboarded must be able to start and stop. Harness AutoStopping
    cannot manage certain DB instances, such as serverless ones, because they cannot
    be started or stopped.</li></ul><h3>Review: Use Cases for Using AutoStopping for
    RDS</h3><p>This section describes some of the most common scenarios where you
    can use AutoStopping Rules with RDS.</p><h4>EC2 Rule With RDS Dependency</h4><p>This
    is an ideal use case when a web server or an application server connects to an
    RDS database to access/store data.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/ryk2e3ujpn/1649666383865/screenshot-2022-04-11-at-2-09-07-pm.png"/></figure><p>In
    this scenario, if there is no traffic to the application server (EC2 instance),
    the AutoStopping Rule will stop both the application server and the RDS database
    that it connects to. When the application server receives traffic, the Rule will
    start the RDS instance first, followed by the EC2 instance. This results in substantial
    cost savings for both instances. </p><p>You can achieve this by simply creating
    an EC2 AutoStopping Rule and adding an RDS Rule as a dependency.</p><h4>Query
    the Archived Database Using Your Own Database Client</h4><p>See <a href="/article/ryk2e3ujpn-create-auto-stopping-rules-for-rds#use_harness_auto_stopping_cli_to_keep_the_rds_instance_s_running">Use
    Harness AutoStopping CLI to Keep the RDS Instance(s) Running</a>.</p><h3>Step
    1: Add a Cloud Provider</h3><p>Perform the following steps to link your AWS cloud
    account to Harness.</p><ol><li>In <strong>Cloud Costs</strong>, click <strong>New
    AutoStopping Rule</strong>.<figure><a href="https://files.helpdocs.io/i5nl071jo5/articles/hiyi6xvj36/1627917097777/screenshot-2021-08-02-at-8-40-48-pm.png"><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/hiyi6xvj36/1627917097777/screenshot-2021-08-02-at-8-40-48-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></a></figure></li><li>In <strong>AutoStopping
    Rules</strong>, select <strong>AWS</strong>. It is the cloud account in which
    your workloads are running that you want to manage using AutoStopping rules.<figure><a
    href="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1634476693199/screenshot-2021-10-17-at-6-47-51-pm.png"><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1634476693199/screenshot-2021-10-17-at-6-47-51-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></a></figure></li><li>If
    you have already linked your AWS account and want to use that account, then select
    the AWS account from the <strong>Connect to your AWS account</strong> drop-down
    list.</li><li>If you have not added your cloud account, click <strong>Connect
    to your AWS account</strong> drop-down list and then click <strong>New Connector</strong>.
    For the detailed steps, see <a href="https://ngdocs.harness.io/article/hiyi6xvj36-connect-to-an-aws-connector">Connect
    to an AWS Connector</a>.<figure><a href="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1641315189370/screenshot-2022-01-04-at-10-22-55-pm.png"><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1641315189370/screenshot-2022-01-04-at-10-22-55-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></a></figure></li></ol><h3>Step
    2: Add a New AutoStopping Rule for RDS</h3><p>Creating AutoStopping Rules for
    Amazon RDS involves the following steps:</p><h4 id="undefined">Define an AutoStopping
    Rule</h4><ol><li>In <strong>Cloud Costs,</strong> in <strong>AutoStopping Rules</strong>,
    click <strong>New AutoStopping Rule</strong>.</li><li>In the cloud account type,
    select <strong>AWS</strong>. It is the cloud account in which your workloads are
    running that you want to manage using AutoStopping rules.</li><li>Select your
    AWS account from the <strong>Connect to your AWS account</strong> drop-down list
    and click <strong>Next</strong>. If you have not added an AWS cloud account, see <a
    href="https://newdocs.helpdocs.io/article/hiyi6xvj36-connect-to-an-aws-connector">Connect
    to an AWS Connector</a>.<figure><a href="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1634480750909/screenshot-2021-10-17-at-7-55-31-pm.png"><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/7025n9ml7z/1634480750909/screenshot-2021-10-17-at-7-55-31-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></a></figure></li><li>In <strong>Define
    your AutoStopping rule</strong>, in <strong>Name your Rule</strong>, enter a name
    for your rule. This is the name of your AutoStopping rule.</li><li>In <strong>Idle
    time</strong>, enter the idle time in minutes. This is the time that the AutoStopping
    rule will wait before stopping the idle instances.</li></ol><h4>Select the Resources
    to be Managed by the AutoStopping Rule</h4><p>Select the cloud resources that
    you want to manage using this rule. AutoStopping Rule will monitor the selected
    resources and stop them when they are idle beyond the configured idle time.</p><ol><li>In <strong>Select
    the resources to be managed by the rule</strong>, select <strong>RDS</strong>
    and then click Add RDS instance.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/ryk2e3ujpn/1651841971040/screenshot-2022-05-06-at-6-29-10-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>In <strong>Select
    RDS Instance</strong>, do the following:<ol><li>Select the region where your instance
    is hosted from the drop-down list.</li><li>Select the RDS instance for which you
    want to enable AutoStopping Rule and click <strong>Add Selected</strong>.<figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/ryk2e3ujpn/1651842989997/screenshot-2022-05-06-at-6-46-19-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure></li><li>Once
    you&#39;ve made all the selections, click <strong>Add Selected</strong>.</li></ol></li><li>Click
    <strong>Next</strong>.</li></ol><h4>(Optional) Set Up Advanced Configuration</h4><p>In
    this step, you can configure the following settings:</p><ul><li><strong>Add Dependency</strong>:
    Set dependencies between two or more AutoStopping Rules when you want one Rule
    to make one or more Rules to be active based on the traffic that it receives.
    See <a href="https://newdocs.helpdocs.io/article/7025n9ml7z-create-autostopping-rules-aws#add_dependency">Add
    Dependency</a>.</li><li><strong>Fixed Schedules</strong>: Create fixed uptime
    or downtime schedules for the resources managed by this AutoStopping Rule. When
    a resource is configured to go up or down on a fixed schedule, it is unaffected
    by activity or idleness during that time period. See <a href="https://newdocs.helpdocs.io/article/7025n9ml7z-create-autostopping-rules-aws#fixed_schedules">Fixed
    Schedules</a>.</li></ul><h3>Review</h3><p>In Review, verify all the configuration
    details and click <strong>Save Rule</strong>. To edit any of the configuration
    settings, click <strong>EDIT</strong> and modify the settings.</p><p>Your AutoStopping
    rule is listed under the <a href="https://ngdocs.harness.io/article/ehmi6kiynl-autostopping-dashboard">AutoStopping
    Rules dashboard</a>.</p><h3>Use Harness AutoStopping CLI to Keep the RDS Instance(s)
    Running</h3><p>You can also use Harness AutoStopping CLI to query the archived
    database using your own database client. Basically you&#39;re leveraging Harness
    CLI to keep the RDS instance(s) running.</p><ol><li>From the AutoStopping dashboard,
    click on the RDS rule.</li><li>In <strong>Download CLI</strong>, select your operating
    system to download the Harness CLI for your system.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/ryk2e3ujpn/1652071260888/screenshot-2022-05-09-at-10-09-42-am.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure></li><li>Click
    <strong>Download CLI</strong>.</li><li>Run the following command to connect to
    an RDS database.<br/><pre>harness connect --host hostname --port 5432</pre><br/>The
    above command will start the RDS database if it is not running and set up a secure
    tunnel to it. This command will output the connection details to which you can
    connect your database client.</li><li>As an example, in the case of Postgres,
    the following command can be used to connect to the database.<br/><pre>psql -h
    localhost -p port-received-from-above -u postgres</pre><br/>As soon as your database
    client is disconnected, AutoStopping will consider it as idleness and shut down
    the database after the configured idle time.</li></ol><p></p>'
  slug: create-auto-stopping-rules-for-rds
  tags:
  - Autostopping rules
  - Amazon RDS
  is_live: true
