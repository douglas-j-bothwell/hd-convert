type: article
article_id: ux8wo1l75q
user_id: slcpusem6b
category_id: 6bw1qej23v
author:
  name: Archana Singh
  profile_image: https://www.gravatar.com/avatar/e323facc5a711ac44c46e58dcb52aa3e?d=mm&s=150
title: Configure ECG for AutoStopping Rules
slug: configure-ecg-for-auto-stopping-rules
description: This topic describes how to configure ECG for the AutoStopping Rules.
short_version: This topic describes how to configure ECG for the AutoStopping Rules.
tags:
- ECG
- Autostopping rules
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-01-28T16:15:07.289078Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Configure ECG for AutoStopping Rules
  description: This topic describes how to configure ECG for the AutoStopping Rules.
  short_version: This topic describes how to configure ECG for the AutoStopping Rules.
  body: '<p>This topic describes how to configure ECG for the <a href="/article/wzr5tz0ero-auto-stopping-rules">AutoStopping
    Rules</a>. You can assume ECG as an <strong>event emitter</strong> for your rule.
    It sends usage records for the configured rules.</p><p></p><p>When the ECG is
    configured to watch a workload, AutoStopping Rule will not stop the resource until
    the workload finishes running. ECG comes with the following pre-installed watchers:</p><ul><li><a
    href="/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#metrics_watcher">Metrics</a></li><li><a
    href="/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#process_watcher">Process</a> </li></ul><p></p><p>By
    default, the AutoStopping Rule listens to HTTP/HTTPS traffic. On the other hand,
    a resource can be working on long-running background jobs like batch jobs. Nightly
    data updates or scheduled processing, for example. In this scenario, relying just
    on network traffic to detect resource idleness is not the ideal solution. For
    such scenarios, you can configure ECG for your AutoStopping Rules.</p><p></p><p>In
    this topic:</p><ul><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#before_you_begin">Before
    You Begin</a></li><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#metrics_watcher">Metrics
    Watcher</a></li><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#process_watcher">Process
    Watcher</a></li><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#configure_ecg">Configure
    ECG</a><ul><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#step_1_install_the_ecg_agent">Step
    1: Install the ECG Agent</a></li><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#step_2_specify_the_configuration_details">Step
    2: Specify the Configuration Details</a><ul><li><a href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#example">Example</a></li></ul></li><li><a
    href="https://ngdocs.harness.io/article/ux8wo1l75q-configure-ecg-for-auto-stopping-rules#step_3_restart_the_ecg_process">Step
    3: Restart the ECG Process</a></li></ul></li></ul><h3>Before You Begin</h3><ul><li><a
    href="/article/wzr5tz0ero-auto-stopping-rules">AutoStopping Rules Overview</a></li><li><a
    href="/category/biypfy9p1i-create-auto-stopping-rules">Create AutoStopping Rules</a></li></ul><h3>Metrics
    Watcher</h3><p>Metrics watcher is used to detect idleness based on CPU and memory
    of the resource. If the CPU and memory values are below the configured limit,
    AutoStopping will detect that as idleness for the resource and stop it.</p><p></p><pre>[metrics]<br/>cpu
    = &#34;40&#34;<br/>memory = &#34;5Gb&#34;</pre><p></p><h3>Process Watcher</h3><p>Process
    watcher watches for the existence of processes that match the supplied condition.
    When a process with the matching condition is detected, AutoStopping will detect
    that as idleness for the resource and stop it.</p><p></p><pre>[process]<br/>condition
    = &#34;python*&#34;</pre><p></p><h3>Configure ECG</h3><p>You can configure either
    metrics or process watcher for your rule.</p><h4>Step 1: Install the ECG Agent</h4><p>ECG
    is supported only for Unix-like machines. To install the agent,</p><ol><li>Download
    the ECG file from the S3 link:<br/><a href="https://lightwing-downloads-temp.s3.ap-south-1.amazonaws.com/ecg/ecg_1.2.0_linux_amd64.zip"
    target="_blank">https://lightwing-downloads-temp.s3.ap-south-1.amazonaws.com/ecg/ecg_1.2.0_linux_amd64.zip</a></li><li>Unzip
    the file.<pre>unzip ecg_1.1.0_linux_amd64.zip</pre></li><li>Install the agent.<pre>sudo
    ./install.sh</pre></li></ol><p></p><h4>Step 2: Specify the Configuration Details</h4><p>To
    configure ECG for your rule, provide the following configuration details:</p><ul><li><strong>Account
    ID</strong>: Account ID for which you want to enable ECG. You can copy the account
    ID from the Harness Manager. In Harness Manager&#39;s address bar, copy the <strong>Harness
    account ID</strong> from your Harness URL. The Harness account ID comes after <code>account</code> in
    the URL.<br/><br/>For example in the following URL, the account ID is <code>1a2b3c</code>: <code>https://app.harness.io/#/account/1a2b3c</code>.</li><li><strong>Hostname
    of the AutoStopping Rule</strong>: Hostname of the AutoStopping Rule for which
    you want to configure the ECG. You can copy the hostname from the <a href="/article/ehmi6kiynl-autostopping-dashboard">AutoStopping
    dashboard</a>. To obtain the hostname, do the following:</li></ul><ol><li>In <strong>AutoStopping
    Rules</strong>, in <strong>Summary of Rules</strong>, click the rule for which
    you want to configure the ECG.</li><li>Copy the hostname.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/ux8wo1l75q/1642350164733/screenshot-2022-01-16-at-9-52-25-pm.png"
    style="max-height:80%;max-width:80%" data-hd-height="80%" data-hd-width="80%"/></figure></li></ol><h5>Example</h5><p>Assume
    your long-running job is a simple Python script:</p><p></p><pre>&gt; python trainmodel.py</pre><p></p><p>The
    following example shows how to configure <code>ecg</code> with the details:</p><p></p><pre>#
    Configuration file for the ECG agent<br/><br/>accountID = &#34;abcdSmUISimoRrJL6NL12w&#34;<br/>ruleHostName
    = &#34;fluent-katydid-c6p67ucpv2dpsb76i66g.schedules-ce-dev.lightwingtest.com&#34;<br/><br/>#
    For process based heartbeats configure the below section.<br/><br/>[process]<br/>condition
    = &#34;Python*&#34;<br/><br/># For metrics based heartbeats configure the below
    section.<br/><br/>#[metrics]<br/>#cpu = &#34;40&#34;<br/>#memory = &#34;5Gb&#34;</pre><p></p><h4>Step
    3: Restart the ECG Process</h4><p>After making the configuration changes, restart
    the ECG process.</p><p></p><pre>sudo systemctl restart ecg</pre><p></p><p></p>'
  slug: configure-ecg-for-auto-stopping-rules
  tags:
  - ECG
  - Autostopping rules
  is_live: true
