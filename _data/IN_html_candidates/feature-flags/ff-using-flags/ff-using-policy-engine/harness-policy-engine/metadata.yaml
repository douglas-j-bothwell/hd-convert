type: article
article_id: 4vx27jqwv2
user_id: vt9reb71i4
category_id: yo726tfqly
author:
  name: Clare Wilkinson
  email: clare.wilkinson@harness.io
  profile_image: https://www.gravatar.com/avatar/0ff8d5897ddf326bd94ba0e62e7d2841?d=mm&s=150
title: Policies Overview for Feature Flags
slug: harness-policy-engine
description: This topic gives an overview of how Harness Policy Engine works with
  Feature Flags and OPA.
short_version: This topic gives an overview of how Harness Policy Engine works with
  Feature Flags and OPA.
tags:
- harness policy engine
- OPA
- feature flag
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-17T15:24:23.503854Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Policies Overview for Feature Flags
  description: This topic gives an overview of how Harness Policy Engine works with
    Feature Flags and OPA.
  short_version: This topic gives an overview of how Harness Policy Engine works with
    Feature Flags and OPA.
  body: '<p></p><div class="note-callout">Currently, this feature is behind the Feature
    Flags <code>OPA_PIPELINE_GOVERNANCE</code>, <code>CUSTOM_POLICY_STEP</code>, and
    <code>OPA_FF_GOVERNANCE</code>. Contact <a href="mailto:support@harness.io" target="_blank">Harness
    Support</a> to enable the feature.</div><p>Harness Policy Engine uses <a href="https://www.openpolicyagent.org/docs/latest/"
    target="_blank">Open Policy Agency (OPA)</a> to store policies that you can then
    enforce on your Feature Flags. You can use Harness Policy Engine with the following
    <a href="/article/tygjin99y9-harness-entity-reference" target="_blank">Harness
    entities</a> on the Harness Platform:</p><ul><li>Flag</li><li>Target</li><li>Target
    group</li><li>Environment</li><li>SDK keys</li></ul><p>For example, you can use
    policies to ensure your Feature Flags: </p><ul><li>Match the naming convention
    you set.</li><li>Are created using a specific flag type, for example, only allowing
    Boolean flags to be created.</li><li>Have the correct default on and off values
    set. </li><li>Have been turned on in a test environment before being enabled in
    a production environment.</li></ul><p>This topic provides an overview of how Harness
    Policy Engine works with Feature Flags.</p><div class="note-callout">For steps
    to set up your policies on the Harness Platform, go to <a href="/article/vb6ilyz194-using-harness-policy-engine-for-feature-flags"
    target="_blank">Use Harness Policy Engine for Feature Flags.</a></div><h4>Before
    you begin</h4><p>Before using Harness Policy Engine, you should understand the
    following:</p><ul><li><a href="/article/hv2758ro4e-learn-harness-key-concepts"
    target="_blank">Harness&#39; Key Concepts</a></li><li><a href="https://www.openpolicyagent.org/docs/latest/policy-language/">How
    to Write</a> <a href="https://www.openpolicyagent.org/docs/latest/policy-language/">Rego
    for OPA </a></li></ul><p>New to Rego? Use the following resources to learn it:</p><ul><li>Free
    online course on Rego from Styra founder and OPA co-creator Tim Hendricks: <a
    href="https://academy.styra.com/courses/opa-rego">OPA Policy Authoring</a>.</li><li>See
    <a href="https://www.openpolicyagent.org/docs/latest/policy-language/">Policy
    Language</a> from OPA. The <a href="https://dboles-opa-docs.netlify.app/docs/v0.10.7/rego-cheatsheet/">Rego
    Cheat Sheet</a> is also helpful to have on hand.</li></ul><h4>How does the Harness
    Policy Engine use OPA?</h4><p>The Harness Policy Engine uses <a href="https://www.openpolicyagent.org/">OPA</a>
    as the central service to store and enforce policies for the different entities
    and processes across the Harness Platform. You can define and store policies directly
    in the Harness Platform. </p><p>In the Harness Platform, you add policies written
    in Rego to a Policy Set and select the Harness entities (for example, Feature
    Flags) for evaluation.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/4vx27jqwv2/1651152284589/opa-p-1-1.png"
    style="max-height:70%;max-width:70%;display:block;margin-left:0;margin-right:auto"
    alt="Screenshot of the Policy Editor on the Harness Platform. " data-hd-height="70%"
    data-hd-width="70%" data-hd-align="left"/></figure><p><em>Figure 1: Adding a Policy</em></p><p>Then,
    when a Feature Flag is saved, Harness reaches out to the Harness OPA server to
    evaluate the action using the Policy Set. The Feature Flag is saved successfully,
    saved with a warning, or not saved and an error is received.</p><h5>Example of
    adding a policy for a Feature Flag</h5><ol><li>Set your policy: The names of all
    Feature Flags created must match the regex you set. You set the regex as having
    to be in the format ABC, dash, and three numbers, for example, ABC-123.</li><li>Insert
    the Rego code into the Policy Engine on the Harness Platform, for example, the
    Rego code for the policy above is:</li></ol><pre>package feature_flags<br/><br/>#
    Deny flags whose names aren&#39;t a valid Jira ticket format for our projects<br/>#
    e.g. &#34;ABC-123&#34; is allowed. &#34;My cool flag&#34; is not allowed<br/><br/>deny[sprintf(&#34;feature
    flag name &#39;%s&#39; doesn&#39;t match regex&#34;, [input.flag.name])] {<br/>   not
    regex.match(&#34;[ABC]+[-][1-9][0-9]?&#34;, input.flag.name)<br/>}</pre><ol><li
    style="counter-increment:li 2" start="3">Run the policy against your Feature Flags.</li></ol><div
    class="note-callout">When you create the policy you can choose whether a Feature
    Flag receives only a warning message, or receives an error and can’t be saved
    when the policy isn’t met. For more information about how to do this, go to <a
    href="/article/vb6ilyz194-using-harness-policy-engine-for-feature-flags#step_1_creating_a_policy">Creating
    a Policy</a>.</div><ul><li><strong>Success</strong>: You create a Feature Flag
    and name it <code>ABC-567</code>, which matches the naming regex you set. When
    you save the flag, the policy rule is evaluated, returns <code>Flag created</code>,
    and the flag is saved.</li><li><strong>Warning</strong>: You create a Feature
    Flag and name it <code>Flag2</code>, which doesn’t match the naming regex you
    set. The flag is saved but you receive the following warning message:</li></ul><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/4vx27jqwv2/1651155268645/opa-p-1-2.png"
    style="max-height:60%;max-width:60%;display:block;margin-left:0;margin-right:auto"
    alt="Screenshot of the warning message &#34;Flag saved with policy warnings&#34;.
    " data-hd-height="60%" data-hd-width="60%" data-hd-align="left"/></figure><p><em>Figure
    2: A Flag with policy warnings</em></p><ul><li><strong>Failure</strong>: You create
    a Feature Flag and name it <code>Flag2</code>, which doesn’t match the naming
    regex you set. The flag doesn’t save and you receive the following error message:</li></ul><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/4vx27jqwv2/1651155323841/opa-p-1-3.png"
    style="max-height:60%;max-width:60%;display:block;margin-left:0;margin-right:auto"
    alt="Screenshot of the error message &#34;flag cannot be saved due to the policy
    evaluation failures&#34;." data-hd-height="60%" data-hd-width="60%" data-hd-align="left"/></figure><p><em>Figure
    3: A Flag with policy failures</em></p><h4>Next step</h4><p>To understand how
    to add policies for Feature Flags, go to <a href="/article/vb6ilyz194-using-harness-policy-engine-for-feature-flags"
    target="_blank">Use Harness Policy Engine for Feature Flags</a>.</p><p></p>'
  slug: harness-policy-engine
  tags:
  - harness policy engine
  - OPA
  - feature flag
  is_live: true
