type: article
article_id: da85u0cbhx
user_id: znazf3hcp9
category_id: wogg6uk871
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/77114bb5eef5503c5a09ad7655120b17?d=mm&s=150
title: Harness Chaos Engineering Quickstart (Public Preview)
slug: harness-chaos-engineering-quickstart-public-preview
description: Perform a chaos experiment on an application in a Kubernetes cluster.
short_version: Perform a chaos experiment on an application in a Kubernetes cluster.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-15T16:11:47.295698Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Harness Chaos Engineering Quickstart (Public Preview)
  description: Perform a chaos experiment on an application in a Kubernetes cluster.
  short_version: Perform a chaos experiment on an application in a Kubernetes cluster.
  body: "<p>This quickstart shows you how to perform a chaos experiment on an application
    in a Kubernetes cluster. We use a predefined Scenario template that is hosted
    on the open source Litmus ChaosHub.</p><p>You have two options for using Harness
    Chaos Engineering:</p><ul><li><strong>On-Prem:</strong> Harness Chaos Engineering
    is installed on-premise with a license from Harness. You can request a license
    from the <a href=\"https://harness.io/trial/che-on-prem\" target=\"_blank\">Harness
    Chaos Engineering sign up page</a>.</li><li><strong>SaaS:</strong> You can also
    use the free SaaS version of Harness Chaos Engineering at <a href=\"https://cloud.chaosnative.com/signin\"
    target=\"_blank\">https://cloud.chaosnative.com/signin</a>. No license is required,
    but you will need to create an access key, download it, and use it to connect
    your Kubernetes cluster or namespace to Harness Chaos Engineering Cloud.</li></ul><p>Once
    you have Harness Chaos Engineering running in your environment, this quickstart
    will take <strong>5 minutes</strong> to complete.</p><div class=\"note-callout\"><strong>Harness
    Chaos Engineering Free Version:</strong> The installation steps in this quickstart
    walk you through setting up Harness Chaos Engineering in your own environment
    (on-premise). You can also use the free SaaS version of Harness Chaos Engineering
    at <a href=\"https://cloud.chaosnative.com/signin\" target=\"_blank\">https://cloud.chaosnative.com/signin</a>.
    The free version is limited to 2 Delegates and can run up to a maximum of 60 Scenarios
    per month. If you use the free SaaS version, simply jump to <a href=\"#step_2_schedule_a_new_workflow\">Step
    2</a>.</div><h3>Objectives</h3><p>You&#39;ll learn how to:</p><ol><li>Install
    Harness Chaos Engineering in a Kubernetes cluster.<div class=\"note-callout\"><strong>Harness
    Chaos Engineering Free Version:</strong> The installation steps in this quickstart
    walk you through setting up Harness Chaos Engineering in your own environment
    (on-premise). You can also use the free SaaS version of Harness Chaos Engineering
    at <a href=\"https://cloud.chaosnative.com/signin\" target=\"_blank\">https://cloud.chaosnative.com/signin</a>.
    The free version is limited to 2 Delegates and can run up to a maximum of 60 Scenarios
    per month. If you use the free SaaS version, simply jump to <a href=\"#step_2_schedule_a_new_workflow\">Step
    2</a>.</div></li><li>Create a Harness Chaos Engineering Scenario to run a real
    world chaos experiment using the predefined <strong>podtato-head</strong> chaos
    Scenario.<br/><a href=\"https://github.com/podtato-head/podtato-head\" target=\"_blank\">Podtato-head</a>
    is a prototypical cloud-native application built to colorfully demonstrate delivery
    scenarios using many different tools and services.</li><li>Run a pod-delete fault
    experiment as part of the Scenario.</li><li>Review how Probes can be added to
    experiments to test hypotheses.</li><li>Analyze the chaos experiment results.</li></ol><h3>Before
    You Begin</h3><ul><li>Familiarize yourself with Harness Chaos Engineering concepts
    in <a href=\"/article/v64rj2maiz-harness-chaos-engineering-basics\">Harness Chaos
    Engineering Basics</a>.</li><li>Review the open source Chaos Engineering framework
    on which Harness Chaos Engineering is built, <a href=\"https://docs.litmuschaos.io/docs/introduction/what-is-litmus/\"
    target=\"_blank\">LitmusChaos</a>.</li></ul><h4>Prerequisites</h4><ul><li><strong>Kubernetes
    cluster:</strong><ul><li>A general purpose compute engine like GCP e2-standard-2
    is sufficient.</li><li>Kubernetes &gt;= 1.17.</li></ul></li><li>Helm 3 installed
    in the cluster. See <a href=\"https://helm.sh/docs/intro/install/\" target=\"_blank\">Installing
    Helm</a> from Helm.</li></ul><h3>Option: Install Harness Chaos Engineering On-Prem</h3><div
    class=\"note-callout\"><strong>Harness Chaos Engineering Free Version:</strong>
    The following steps walk you through setting up Harness Chaos Engineering in your
    own environment (on-premise). You can also use the free SaaS version of Harness
    Chaos Engineering at <a href=\"https://cloud.chaosnative.com/signin\" target=\"_blank\">https://cloud.chaosnative.com/signin</a>.
    The free version is limited to 2 Delegates and can run up to a maximum of 60 Scenarios
    per month. If you use the free SaaS version, simply jump to <a href=\"#step_2_schedule_a_new_workflow\">Step
    2</a>.</div><div class=\"warning-callout\">If you are using the SaaS version of
    Harness Chaos Engineering, you can skip this step.</div><p>You can install Harness
    Chaos Engineering using Helm or Kubernetes. Both methods are described below.</p><div
    class=\"note-callout\">The following steps are covered in the public Harness Chaos
    Engineering GitHub repo <a href=\"https://github.com/chaosnative/hce-charts\"
    target=\"_blank\">https://github.com/chaosnative/hce-charts</a>.</div><details><summary>Install
    using Helm</summary><div><p>You need to <a href=\"https://helm.sh/docs/intro/install/\">install
    Helm 3</a> before you proceed.</p><p>Add the Harness Helm repository:</p><pre
    class=\"hljs bash\">helm repo add harness https://hce.chaosnative.com</pre><p></p><p>View
    the repo:</p><pre class=\"hljs bash\">helm repo list</pre><p></p><p>Output:</p><pre
    class=\"hljs bash\">NAME     URL<br/>harness  https://hce.chaosnative.com                                                               </pre><p></p><p>Update
    the Harness Helm repo:</p><pre>helm repo update</pre><p>Output:</p><pre>Hang tight
    while we grab the latest from your chart repositories...<br/>...Successfully got
    an update from the &#34;harness&#34; chart repository<br/>Update Complete. ⎈Happy
    Helming!⎈</pre><p></p><p>Install Harness Chaos Engineering ChaosCenter:</p><pre
    class=\"hljs bash\">helm install -n litmus hce harness/hce --create-namespace</pre><p></p><p>Output:</p><pre>NAME:
    hce<br/>LAST DEPLOYED: Wed Aug  3 16:27:37 2022<br/>NAMESPACE: litmus<br/>STATUS:
    deployed<br/>REVISION: 1<br/>TEST SUITE: None<br/>NOTES:<br/>Thank you for installing
    hce \U0001F600<br/><br/>Your release is named hce and it&#39;s installed to namespace:
    litmus.<br/><br/>Visit https://harness.io to find more info.</pre></div></details><p></p><details><summary>Install
    using kubectl</summary><div><p>Install Harness Chaos Engineering with cluster-admin
    permissions in the <code>litmus</code> namespace by default.</p><pre>kubectl apply
    -f https://hce.chaosnative.com/manifests/latest/hce-cluster-scope.yaml</pre><p></p><p>Or,
    to scope to a namespace (when you do not have access to the entire cluster), replace
    <code>litmus</code> with the desired namespace:</p><pre>kubectl create ns litmus<br/>kubectl
    apply -f https://hce.chaosnative.com/manifests/latest/hce-crds.yaml<br/>kubectl
    apply -f https://hce.chaosnative.com/manifests/latest/hce-namespace.yaml -n litmus</pre><p></p></div></details><h4>Accessing
    ChaosCenter</h4><p>By default, Harness Chaos Engineering is accessed using a LoadBalancer.</p><p>View
    the LoadBalancer IP (this can take a few minutes):</p><pre class=\"hljs bash\">kubectl
    get svc -n litmus</pre><p></p><p>Example Output using a Helm install:</p><pre>NAME
    \                     TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)                         AGE<br/>hce-auth-server-service
    \  NodePort       10.24.5.26     &lt;none&gt;          9003:32156/TCP,3030:31024/TCP
    \  2m28s<br/>hce-frontend-service      LoadBalancer   10.24.15.215   34.173.193.67
    \  9091:32631/TCP                  2m28s<br/>hce-headless-mongo        ClusterIP
    \     None           &lt;none&gt;          27017/TCP                       2m28s<br/>hce-mongo
    \                ClusterIP      10.24.14.6     &lt;none&gt;          27017/TCP
    \                      2m28s<br/>hce-server-service        LoadBalancer   10.24.11.20
    \   34.67.119.129   9002:31108/TCP,8000:30292/TCP   2m28s<br/>license-service
    \          NodePort       10.24.13.205   &lt;none&gt;          80:31560/TCP                    2m28s</pre><p></p><p>The <code>EXTERNAL-IP</code> might
    say <code>pending</code> for a few minutes while the load balancer is set up.</p><p>Simply
    use your <code>EXTERNAL-IP</code> and <code>PORT</code> for the <code>hce-frontend-service</code>
    in this manner <code>&lt;EXTERNAL-IP&gt;:&lt;PORT&gt;</code> to access Harness
    Chaos Engineering: <code>http://&lt;EXTERNAL-IP&gt;:&lt;PORT&gt;</code>. For example:</p><pre
    class=\"hljs bash\">http://34.71.48.119:9091/</pre><p></p><p>This is an example
    IP and port. Yours will be different.</p><p></p><p>ChaosCenter is displayed in
    your browser:</p><p></p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650321559730/clean-shot-2022-04-18-at-15-39-04.png\"/></figure><p></p><p>Log
    in with the default credentials:</p><ul><li>Username: <code>admin</code></li><li>Password:
    <code>litmus</code></li></ul><p>Once you log in, you&#39;ll be asked to set a
    new password.</p><p>Next, upload your license file and click <strong>Activate
    License</strong>.</p><p></p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650392551689/clean-shot-2022-04-19-at-11-08-46.png\"
    style=\"max-height:50%;max-width:50%\" data-hd-height=\"50%\" data-hd-width=\"50%\"/></figure><p></p><div
    class=\"note-callout\">You can request a license from the <a href=\"https://harness.io/trial/che-on-prem\"
    target=\"_blank\">Harness Chaos Engineering sign up page</a>.</div><p>Drag and
    drop your license into <strong>Upload License File</strong> and click <strong>Activate
    License</strong>.</p><p>You&#39;re ready to go.</p><h3>Option: Set Up Harness
    Chaos Engineering SaaS</h3><p>When you first log into Harness Chaos Engineering
    at <a href=\"https://cloud.chaosnative.com/signin\" target=\"_blank\">https://cloud.chaosnative.com/signin</a>,
    you begin in <strong>Onboarding</strong>.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659380871023/clean-shot-2022-08-01-at-12-07-40.png\"/></figure><p>Click
    <strong>Create the access key</strong>.</p><p>In <strong>Your access key is successfully
    created</strong>, download your key.</p><p>Following the instructions to connect
    your cluster with Harness Chaos Engineering.</p><div class=\"note-callout\">When
    you connect to Harness Chaos Engineering Cloud, you simply enter any name for
    <code>&lt;AGENT_NAME&gt;</code> in the command.</div><p>Here&#39;s a video walkthrough
    for Setting up Harness Chaos Engineering SaaS: <a href=\"https://youtu.be/Z3-lrv8wKQI\"
    target=\"_blank\">Harness Chaos Engineering SaaS Demo</a>.</p><div class=\"note-callout\">MacOS:
    if you get a MacOS error saying chaosctl cannot be opened, click <strong>Show
    in Finder</strong>, right-click chaosctl, and select <strong>Open</strong>.</div><p>Once
    you&#39;ve run the Delegate set up, you&#39;ll see Harness Chaos Engineering connecting:</p><p></p><figure><img
    src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659117655165/clean-shot-2022-07-29-at-11-00-45.png\"/></figure><p>Next,
    you&#39;ll be ready to run experiments.</p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659117696429/clean-shot-2022-07-29-at-11-01-03.png\"/></figure><p>Click
    Chaos Scenarios in the left navigation.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659119750375/clean-shot-2022-07-29-at-11-35-41.png\"/></figure><p>Now
    we can schedule a new Scenario.</p><h3>Step 1: Schedule a New Scenario</h3><p>A
    chaos Scenario is a collection of one or more chaos experiments ordered to achieve
    a desired chaos impact on the resources in a Kubernetes Cluster.</p><p>There are
    many different ways to create and execute a Scenario.</p><p>For this quickstart,
    we&#39;ll use the predefined Scenario template hosted on the open source Litmus
    ChaosHub, named podtato-head.</p><div class=\"note-callout\">The podtato-head
    is intended for illustrating the capabilities of Harness Chaos Engineering and
    not meant to target real-life applications.</div><p>In Harness Chaos Engineering
    ChaosCenter, click <strong>Chaos</strong> <strong>Scenarios</strong>, and then
    click <strong>Schedule a Chaos Scenario</strong>.</p><p>The Scenario wizard appears.</p><h4>Choose
    a Delegate</h4><p>First you need to select a Delegate.</p><p>Delegates are used
    to connect Harness Chaos Engineering control plane with the Kubernetes clusters
    you want to target for chaos injection.</p><p>For Harness Chaos Engineering On-Prem,
    a Self-Delegate is a Delegate running on the same cluster as Harness Chaos Engineering
    and is installed with the Harness Chaos Engineering control plane.</p><div class=\"note-callout\">If
    the Self-Delegate does not appear, the related Kubernetes workload might not be
    in an active state. Wait a few minutes for it to reach steady state. If, after
    a while, it is still inactive, ensure that ingress to the <code>litmusportal-server-service</code>
    NodePort is not restricted and a firewall exception is present for that NodePort,
    if applicable.</div><p>Once you&#39;ve selected a Delegate, click <strong>Next</strong>.</p><h4>Choose
    a Scenario</h4><p>Click <strong>Create a new scenario from one of the pre-defined
    chaos scenario templates</strong>. The ChaosHubs appear.</p><p>Select <strong>Litmus</strong>
    <strong>ChaosHub</strong>.</p><p>In search, enter <strong>podtato-head</strong>.</p><p></p><figure><img
    src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659383515605/clean-shot-2022-08-01-at-12-51-46.png\"/></figure><p>Select
    <strong>podtato-head</strong> and then click <strong>Next</strong>.</p><p>In <strong>Chaos</strong>
    <strong>Scenario Settings</strong>, you can enter the Scenario name and the target
    namespace in the cluster. This predefined Scenario template runs in the <strong>litmus</strong>
    namespace.</p><p>The <strong>Description</strong> setting is populated with the
    default description of the Scenario, but you can edit the description. For example,
    if you will be editing the sequence of the Scenario, you might want to add that
    information to the description.</p><p>Click <strong>Next</strong>.</p><h3>Step
    2: Tune the Scenario</h3><p>You can see the steps of the Scenario are already
    defined. Double-click on the diagram to zoom in.</p><p>Here are the steps:</p><ol><li><strong>install-application:</strong>
    installs the podtato-head application (it is removed later by delete-application).</li><li><strong>install-chaos-experiments:</strong>
    installs the chaos experiments in the Scenario that comprise pod-delete.</li><li><strong>pod-delete:</strong>
    this experiment deletes target pods for a given interval. The recovery process
    of the deleted pods is taken care of by Kubernetes.</li><li><strong>revert-chaos:</strong>
    deletes the resources created during Scenario execution. This can include Scenario
    pods, experiment pods, chaos runner pod, etc.</li><li><strong>delete-application:</strong>
    deletes the podtato-head application.</li></ol><p>You can edit the sequence of
    an experiment by clicking the <strong>Edit Sequence</strong> button, but we will
    not be editing the sequence in this quickstart.</p><p>You can tune each experiment
    in a Scenario. This quickstart will not tune the experiment, but feel free to
    explore the tuning settings by clicking the edit button.</p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650057766469/clean-shot-2022-04-15-at-14-22-25-2-x.png\"
    style=\"max-height:50%;max-width:50%\" data-hd-height=\"50%\" data-hd-width=\"50%\"/></figure><p>You
    can then walk through the different options.</p><p></p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650057905396/clean-shot-2022-04-15-at-14-24-57-2-x.png\"
    style=\"max-height:50%;max-width:50%\" data-hd-height=\"50%\" data-hd-width=\"50%\"/></figure><div
    class=\"note-callout\">In <strong>Target Application</strong>, in <strong>appns</strong>,
    you can see the target namespace for the experiment. In this Scenario, the target
    namespace is <code>{{workflow.parameters.adminModeNamespace}}</code>. The application
    isn&#39;t installed yet, so this runtime variable will resolve to the actual namespace
    where the application is installed.</div><p>In <strong>Define the steady state
    for this application</strong>, you can see the Probe that is defined for this
    experiment. This Probe tests a steady-state hypothesis to see whether the podtato-head
    website is available during the execution of the experiment.</p><p>Click <strong>Show
    Details</strong> for a quick look at the Probe.</p><p></p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650058461609/clean-shot-2022-04-15-at-14-33-43-2-x.png\"
    style=\"max-height:50%;max-width:50%\" data-hd-height=\"50%\" data-hd-width=\"50%\"/></figure><p>In
    the details, you can see valuable information:</p><ul><li><strong>url:</strong>
    the application URL that you can use to view the application when the experiment
    is running</li><li><strong>method:</strong> this is the criteria Harness will
    evaluate continuously during the experiment (see <strong>Continuous</strong> under
    <strong>Mode</strong>). In this case, HTTP GET requests are made to the URL and
    Harness Chaos Engineering verifies if it received an HTTP 200 response.</li></ul><p>Close
    the experiment tuning settings, and then click <strong>Next</strong>.</p><h3>Step
    3: Adjust the Resiliency Score</h3><p>In <strong>Resiliency Score</strong>, you
    can see the weights for the experiments.</p><p>A Resiliency Score is the measure
    of how resilient your Scenario is considering all the chaos experiments and their
    individual result points.</p><p>The successful outcome of each test in a Scenario
    carries a certain weight. Weights are used to calculate the Resiliency Score at
    the end of the test. You can adjust the weights of the experiments in the Scenario
    by dragging the slider.</p><p></p><figure><img src=\"https://files.helpdocs.io/i5nl071jo5/articles/da85u0cbhx/1650059137626/clean-shot-2022-04-15-at-14-45-24-2-x.png\"
    style=\"max-height:50%;max-width:50%\" data-hd-height=\"50%\" data-hd-width=\"50%\"/></figure><p>For
    this quickstart, just keep the default Resiliency Score.</p><p>Click <strong>Next</strong>.</p><h3>Step
    4: Choose a Schedule</h3><p>You can schedule the Scenario to run manually or on
    a recurring schedule.</p><p>Click <strong>Schedule now</strong>, and click <strong>Next</strong>.</p><h3>Step
    5: Run the Scenario and View Results</h3><p>Chaos Center shows a summary of the
    Scenario.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659383968943/clean-shot-2022-08-01-at-12-59-18.png\"/></figure><p>You
    can edit any of the settings. For this quickstart, we&#39;ll leave the defaults.</p><p>Click
    <strong>Finish</strong>.</p><p><strong>Congratulations!</strong> You&#39;ve successfully
    scheduled your first Scenario with Harness Chaos Engineering. Now let&#39;s take
    a look at the running Scenario and results of the experiment.</p><p>Click the
    <strong>Go to Chaos Scenario</strong> link to see the Scenario in action, or click
    Scenarios in the navigation.</p><p>You&#39;ll see the Scenario running.</p><p></p><figure><img
    src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659384309634/clean-shot-2022-08-01-at-13-05-00.png\"/></figure><p></p><p>Click
    the name of the Scenario to see its details.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659384336246/clean-shot-2022-08-01-at-13-05-27.png\"/></figure><p>Click
    any step in the Scenario to see its details and logs.</p><p>In the <strong>Graph
    View</strong> or <strong>Table View</strong>, click <strong>View Logs &amp; Results</strong>
    for the <strong>pod-delete</strong> step.</p><p>For <strong>pod-delete</strong>,
    click <strong>Chaos Results</strong>.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659388946514/clean-shot-2022-08-01-at-14-22-14.png\"/></figure><p>You
    can see the success of the chaos experiment.</p><p><strong>Chaos Experiment Result:</strong></p><pre>Experiment
    Verdict: Pass<br/><br/>Phase: Completed<br/><br/>Fail Step: N/A</pre><p></p><p><strong>Chaos
    Engine Result:</strong></p><pre>Passed Runs: 1<br/><br/>Failed Runs: 0<br/><br/>Stopped
    Runs: 0</pre><p></p><p>Click <strong>Probe Result</strong> to view the success/failure
    of the steady-state hypothesis constraint (podtato-head website availability through
    pod deletion period) and the experiment verdict:</p><pre>Probe Success Percentage:
    100%<br/><br/>Probe Status: <br/>Name: check-podtato-main-access-url<br/><br/>Type:
    httpProbe<br/><br/>Continuous: &#34;Passed \U0001F44D &#34;</pre><h3>Step 6: View
    the Analytics</h3><p>Click <strong>Analytics</strong>.</p><p>Analytics tells you
    how well your chaos engineering Scenarios are working: which have succeeded, failed,
    and are running. It displays run statistics over time and totals.</p><p></p><figure><img
    src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659389922267/clean-shot-2022-08-01-at-14-38-32.png\"/></figure><p>In
    <strong>Chaos</strong> <strong>Scenario Comparison</strong>, you can compare the
    results of multiple Scenarios.</p><p>If this is the first time a Scenario has
    been run on this installation of Harness Chaos Engineering, you will only see
    one entry.</p><p>For the <strong>podtato-head-xx</strong> Scenario, click <strong>Statistics</strong>.
    You can see all of the stats for the Scenario.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659389972237/clean-shot-2022-08-01-at-14-39-23.png\"/></figure><p>You
    can also jump to the statistics by selecting <strong>Show the statistics</strong>
    from the <strong>Chaos</strong> <strong>Scenarios</strong> page, in the <strong>Chaos
    Scenario Runes</strong> tab.</p><p></p><figure><img src=\"https://files.helpdocs.io/kw8ldg1itf/articles/da85u0cbhx/1659390026197/clean-shot-2022-08-01-at-14-40-15.png\"/></figure><h3>Clean
    Up</h3><h4>Kubernetes</h4><p>Uninstall Harness Chaos Enterprise from the cluster:</p><pre>kubectl
    delete namespaces litmus</pre><p></p><div class=\"note-callout\">If you are using
    a different namespace, replace <code>litmus</code> with the namespace name.</div><p>Output:</p><pre>namespace
    &#34;litmus&#34; deleted</pre><p></p><h4>Helm</h4><p>Uninstall Harness Chaos Enterprise:</p><pre>helm
    uninstall hce --namespace=litmus</pre><p></p><div class=\"note-callout\">If you
    are using a different namespace, replace <code>litmus</code> with the namespace
    name.</div><p></p><p>Output:</p><pre>release &#34;hce&#34; uninstalled</pre><h3>Summary</h3><p>In
    this quickstart, you learned how to:</p><ol><li>Create a Harness Chaos Engineering
    Scenario to run a real-world chaos experiment.</li><li>Run a pod-delete fault
    experiment as part of the Scenario.</li><li>Analyze the chaos experiment results.</li></ol><h3>Next
    Steps</h3><p></p><p>Explore more public experiment Scenarios (formerly Workflows)
    from <a href=\"https://hub.litmuschaos.io/\" target=\"_blank\">Litmus ChaosHub</a>.</p><p>Learn
    more about <a href=\"https://litmuschaos.github.io/litmus/experiments/categories/contents/\"
    target=\"_blank\">Litmus experiments</a>.</p><p></p>"
  slug: harness-chaos-engineering-quickstart-public-preview
  tags: []
  is_live: true
