type: article
article_id: ymw96mf8wy
user_id: mfr0nxh4be
category_id: gyd73rp7np
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Use Custom Helm Binaries on Harness Delegates
slug: use-custom-helm-binaries-on-harness-delegates
description: Harness Delegate includes Helm 3 by default. You can optionally specify
  the use of a custom binary from the helm repository. This is useful when your Harness
  deployment uses a chart that is incompati…
short_version: Harness Delegate includes Helm 3 by default. You can optionally specify
  the use of a custom binary from the helm repository. This is useful when your Harness
  deployment uses a chart that is incompati…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-09-12T21:15:30.390221Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Use Custom Helm Binaries on Harness Delegates
  description: ""
  short_version: ""
  body: '<p>Harness Delegate includes Helm 3 by default. You can optionally specify
    the use of a custom binary from the <a href="https://github.com/helm/helm/releases">helm</a>
    repository. This is useful when your Harness deployment uses a chart that is incompatible
    with the default Helm version.</p><p>This document describes how to specify the
    use of a custom Helm binary based on Delegate type.</p><h3>Usage Notes</h3><p>This
    topic provides usage notes on specific Helm binary versions.</p><div class="note-callout">For
    Helm binary versions with feature flags requirements, contact <a href="mailto:support@harness.io"
    target="_blank">Harness Support</a> to enable them.</div><h4>Helm Binary v3.5
    to v3.7</h4><p>The use of Helm binaries version 3.5 or later requires the following
    feature flags to be enabled on your Harness account:</p><ul><li><code>USE_HELM_REPO_FLAGS</code></li><li><code>BYPASS_HELM_FETCH</code></li></ul><p>This
    is required because of changes to Helm CLI in Helm version 3.5. The process that
    the<code>helm repo add</code> command uses to invoke the<code>helm repo update</code>  command
    changed.</p><h4>Helm v3.8.0 Binary</h4><p>The use of Helm v3.8.0 binaries requires
    the following feature flags to be enabled on your Harness account:</p><ul><li><code>USE_HELM_REPO_FLAGS</code></li><li>
    <code>HELM_VERSION_3_8_0</code></li></ul><p>Additionally, in <strong>Remote Manifests</strong>,
    locate the <strong>Helm Version</strong> option and select <strong>V3</strong>.</p><h4>Helm
    v2 Binary for Native Helm Deployments</h4><p>If you are performing a <a href="/article/583ojfgg49-helm-deployments-overview">Native
    Helm deployment</a>, do not use <code>HELM_PATH</code> for the Helm 2 binary.
    Harness searches for the Helm 2 binary on the Delegate in its standard path, for
    example, <code>/usr/local/bin/helm</code>.</p><h3>Step 1: Create a Delegate Profile
    to Install the Custom Binary</h3><p>To download and install the custom Helm binary
    onto a Harness Delegate, you can use a Delegate Profile.</p><p>A Delegate Profile
    is simply a script that you can apply to any new or existing Delegate.</p><ol><li>In
    Harness, click <strong>Setup</strong>, and then click <strong>Harness Delegates</strong>.</li><li>Click
    <strong>Manage Delegate Profiles</strong>, and click <strong>Add Delegate Profile</strong>.</li><li>In
    <strong>Display Name</strong>, give your custom binary Profile a name.</li><li>In
    <strong>Startup Script</strong>, add the script to download and install the custom
    binary.</li></ol><p>The Delegate Profile script should do the following:</p><ol><li>Download
    your desired Helm version.</li><li>Unpack it.</li><li>Move it to its desired destination
    on the Delegate host. This is the location you will add to the Delegate config
    file later.</li></ol><p>Example Delegate Profile script:</p><pre>curl -O https://get.helm.sh/helm-v3.2.3-linux-amd64.tar.gz<br/>tar
    -xvf helm-v3.2.3-linux-amd64.tar.gz<br/>path=`echo $PATH | awk -F&#39;:&#39; &#39;{
    print $1}&#39;`<br/>echo $path<br/>mv linux-amd64/helm $path</pre><p>It will look
    something like this:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/ymw96mf8wy/1592326198494/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Next,
    you can add a Delegate Profile to a new or existing Delegate.</p><h3>Step 2: Apply
    the Profile to a New or Existing Delegate</h3><p>If you are adding a new Delegate,
    you select the profile when you download the Delegate.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/ymw96mf8wy/1592261071794/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>If
    you apply the profile to an existing Delegate, you simply select the it in the
    Delegate&#39;s <strong>Profile</strong> setting:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/ymw96mf8wy/1592261343479/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p></p><h3>Step
    3: Update the Delegate Config File and Start the Delegate</h3><p>Each type of
    Delegate uses a configuration file that specifies the path to the custom binary
    installed by your Delegate Profile.</p><p>The remainder of this topic explains,
    for each Delegate type, how to modify the configuration to use a custom Helm binary.</p><h4>Kubernetes</h4><ol><li>Open
    the Kubernetes Delegate file <strong>harness-delegate.yaml</strong>. If the Delegate
    is already running, this is the same file you used to create the Delegate on your
    cluster.</li><li>Locate the Helm path settings in the <code>StatefulSet</code>
    declaration:</li></ol><pre>...<br/>        - name: HELM3_PATH<br/>          value:
    &#34;&#34;<br/>        - name: HELM_PATH<br/>          value: &#34;&#34;<br/>...</pre><ol><li
    style="counter-increment:li 2" start="3">Specify the path in the <code>value</code>
    field as follows:<ul><li>For a Helm 3 binary, enter the path in <code>HELM3_PATH</code>.</li><li>For
    a Helm 2 binary, enter the path in <code>HELM_PATH</code>.</li></ul></li></ol><div
    class="note-callout">If you are performing a <a href="/article/583ojfgg49-helm-deployments-overview">Native
    Helm deployment</a>, do not use <code>HELM_PATH</code> for the Helm 2 binary.
    Harness searches for the Helm 2 binary on the Delegate in its standard path, for
    example,<code>/usr/local/bin/helm</code>.</div><ol><li start="4" style="counter-increment:li
    3">Apply the modified file and restart Harness Delegate:</li></ol><pre>kubectl
    apply -f harness-delegate.yaml</pre><p>You can alternately delete the Delegate
    pod; the <strong>StatefulSet</strong> object will recreate it with the updated
    settings. For example, given a Delegate pod named <code>mydelegate-vutpmk-0</code>,
    use the following instruction:</p><pre>kubectl delete pod mydelegate-vutpmk -n
    harness-delegate</pre><p>For information about the Kubernetes Delegate, see Harness
    <a href="/article/7in9z2boh6-kubernetes-quickstart#step_1_install_and_launch_the_kubernetes_delegate">Kubernetes
    Quickstart</a>.</p><h4>ECS</h4><ol><li>For a new ECS Delegate, open the ECS task
    <code>spec</code>that you downloaded from Harness: <strong>ecs-task-spec.json.</strong><br/>If
    this is an existing ECS Delegate, open the task definition in the AWS console
    and create a new revision. You can edit the JSON for the task definition in the
    new revision. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/update-task-definition.html"
    target="_blank">Updating a Task Definition</a> from AWS.</li><li>In <code>containerDefinitions</code>,
    locate the Helm path settings:</li></ol><pre>...<br/>        {<br/>          &#34;name&#34;:
    &#34;HELM3_PATH&#34;,<br/>          &#34;value&#34;: &#34;&#34;<br/>        },<br/>        {<br/>          &#34;name&#34;:
    &#34;HELM_PATH&#34;,<br/>          &#34;value&#34;: &#34;&#34;<br/>        }<br/>...</pre><ol><li
    style="counter-increment:li 2" start="3">Specify the path in the <code>value</code>
    field as follows:<ul><li>For a Helm 3 binary, enter the path in <code>HELM3_PATH</code>.</li><li>For
    a Helm 2 binary, enter the path in <code>HELM_PATH</code>.</li></ul></li><li>Register
    the task definition and create the ECS service as described in the Harness <a
    href="/article/j39azkrevm-aws-ecs-deployments#step_1_install_and_launch_the_ecs_delegate">ECS
    Quickstart</a>.<br/>If this is an existing ECS Delegate, update the ECS Delegate
    service by following the steps in <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/update-service.html"
    target="_blank">Updating a Service</a> from AWS.</li></ol><p></p><h4>Shell Script</h4><p>Use
    the following process to specify a custom Helm binary for a Shell Script Delegate.
    Do not directly edit the <strong>config-delegate.yml</strong> file. The configuration
    file is overwritten on Delegate restart.</p><ol><li>Use the <code>export</code>
    command to obtain the path of the binary as follows:<br/>For Helm 2:<br/><code>export
    HELM_PATH=&lt;helm2 path&gt;</code><br/>For Helm 3:<br/><code>export HELM3_PATH=&lt;helm3
    path&gt;</code></li><li>Run the Delegate script (<code>./start.sh</code>). This
    creates the <strong>config-delegate.yml</strong> file.</li><li>Restart the Delegate:<br/><code>./stop</code><br/><code>./start</code></li></ol><p>For
    more information about Shell Script Delegates, see the Harness AWS <a href="/category/kx4hs8bn38-getting-started">AMI
    Quickstart</a> documentation.</p><h4>Helm</h4><ol><li>Open the Helm Delegate values.yaml
    file that you downloaded from Harness, <strong>harness-delegate-values.yaml</strong>.
    If the Delegate is already running, this is the same file you used to create the
    Delegate on your cluster.</li><li>Specify the path of the binary as follows:<ul><li>For
    a Helm 3 binary, enter the path in <code>helm3Path</code>.</li><li>For a Helm
    2 binary, enter the path in <code>helmPath</code>.</li></ul></li><li>Install the
    Helm Delegate using the <strong>harness-delegate-values.yaml</strong> file:</li></ol><pre>helm
    install --name helm-delegate-doc harness/harness-delegate -f harness-delegate-values.yaml</pre><p>For
    more information about Helm Delegates, see <a href="/article/6n7fon8rit-using-the-helm-delegate">Install
    the Harness Helm Delegate</a>.</p><h4>Docker</h4><ol><li>Open the Docker Delegate
    values.yaml file that you downloaded from Harness, <strong>launch-harness-delegate.sh</strong>.
    If the Delegate is already running, this must be the same file you used to create
    the Delegate on your cluster.</li><li>Specify the path of the binary as follows:<ul><li>For
    a Helm 3 binary, enter the path before the <code>\</code> in <code>-e HELM3_PATH=
    \</code>.</li><li>For a Helm 2 binary, enter the path before the <code>\</code>
    in <code>-e HELM_PATH= \</code>.</li></ul></li><li>Restart the Docker Delegate:</li></ol><pre>./launch-harness-delegate.sh</pre><h3>See
    Also</h3><ul><li> <a href="/article/cqidzwbzaa-upgrade-native-helm-2-deployments-to-helm-3">Upgrade
    Native Helm 2 Deployments to Helm 3</a></li><li> <a href="/article/lk57k7irla-upgrade-to-helm-3-charts-in-kubernetes-services">Upgrade
    to Helm 3 Charts in Kubernetes Services</a></li></ul><p></p>'
  slug: use-custom-helm-binaries-on-harness-delegates
  tags: []
  is_live: true
