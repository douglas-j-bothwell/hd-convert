type: article
article_id: wt1gnigme7
user_id: wz6xkfcc9i
category_id: ll7h8ktlwe
author:
  name: Chakravarthy Tenneti
  profile_image: https://www.gravatar.com/avatar/790db061bb8f8fb094e4d4b19a390f3b?d=mm&s=150
title: Add Amazon Web Services (AWS) Cloud Provider
slug: add-amazon-web-services-cloud-provider
description: Connect Harness to your AWS account using the IAM roles and policies
  needed by Harness.
short_version: Connect Harness to your AWS account using the IAM roles and policies
  needed by Harness.
tags:
- AWS
- IAM Role
- IAM
- GovCloud
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-06T19:01:47.961516Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Add Amazon Web Services (AWS) Cloud Provider
  description: Connect Harness to your AWS account using the IAM roles and policies
    needed by Harness.
  short_version: Connect Harness to your AWS account using the IAM roles and policies
    needed by Harness.
  body: '<p>AWS is used as a Harness Cloud Provider for obtaining artifacts, deploying
    services, and for verifying deployments using <a href="/article/q6ti811nck-cloud-watch-verification-overview">CloudWatch
    Verification Overview</a>.</p><p>This topic explains how to set up the AWS Cloud
    Provider, and the IAM roles and policies needed by the AWS account used in the
    Cloud Provider.</p><div class="note-callout"><strong>Recommended:</strong> Install
    and run a Harness Delegate (ECS Delegate in an ECS cluster, Shell Script Delegate
    on an EC2 instance, etc) in the same VPC as the AWS resources you will use, and
    then use the Delegate for the AWS Cloud Provider credentials. This is the easiest
    method to connect to AWS. For more information, see <a href="/article/h9tkwmkrm7-delegate-installation">Delegate
    Installation and Management</a>.</div><div class="warning-callout">The <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    target="_blank">DescribeRegions</a> action is required for all AWS Cloud Providers
    regardless of what AWS service you are using for your target infrastructure.</div><p></p><p>In
    this topic:</p><ul><li><a href="#before_you_begin">Before You Begin</a></li><li><a
    href="#review_use_kubernetes_cluster_cloud_provider_for_eks">Review: Use Kubernetes
    Cluster Cloud Provider for EKS</a></li><li><a href="#review_switching_iam_policies">Review:
    Switching IAM Policies</a></li><li><a href="#step_1_add_the_cloud_provider">Step
    1: Add the Cloud Provider</a></li><li><a href="#step_2_display_name">Step 2: Display
    Name</a></li><li><a href="#step_3_credentials">Step 3: Credentials</a></li><li><a
    href="#review_aws_security_token_service_sts">Review: AWS Security Token Service
    (STS)</a></li><li><a href="#review_aws_gov_cloud_and_override_default_region">Review:
    AWS GovCloud and Override Default Region</a></li><li><a href="https://docs.harness.io/article/wt1gnigme7-add-amazon-web-services-cloud-provider#review_aws_iam_roles_and_policies">Review:
    AWS IAM Roles and Policies</a></li><li><a href="#all_aws_cloud_providers_describe_regions_required">All
    AWS Cloud Providers: DescribeRegions Required</a></li><li><a href="#policies_required_elastic_container_registry_ecr">Policies
    Required: Elastic Container Registry (ECR)</a></li><li><a href="#policies_required_amazon_s3">Policies
    Required: Amazon S3</a></li><li><a href="#policies_required_ecs_existing_cluster">Policies
    Required: ECS (Existing Cluster)</a></li><li><a href="https://docs.harness.io/article/wt1gnigme7-add-amazon-web-services-cloud-provider#policies_required_aws_ami_asg_deployments">Policies
    Required: AWS AMI/ASG Deployments</a></li><li><a href="#policies_required_aws_code_deploy">Policies
    Required: AWS CodeDeploy</a></li><li><a href="#policies_required_aws_ec2">Policies
    Required: AWS EC2</a></li><li><a href="#policies_required_amazon_lambda">Policies
    Required: Amazon Lambda</a></li><li><a href="https://docs.harness.io/article/wt1gnigme7-add-amazon-web-services-cloud-provider#artifact_support_for_download_and_copy">Artifact
    Support for Download and Copy</a></li></ul><p></p><h3>Before You Begin</h3><ul><li>See <a
    href="/article/4o7oqwih6h-harness-key-concepts">Harness Key Concepts</a>.</li></ul><p></p><h3>Review:
    Use Kubernetes Cluster Cloud Provider for EKS</h3><p>If you want to connect Harness
    to Elastic Kubernetes Service (Amazon EKS), use the platform-agnostic <a href="/article/l68rujg6mp-add-kubernetes-cluster-cloud-provider">Kubernetes
    Cluster Cloud Provider</a>.</p><h3>Review: Switching IAM Policies</h3><p>If the
    IAM role used by your AWS Cloud Provider does not have the policies required by
    the AWS service you want to access, you can modify or switch the role.</p><p>This
    entails changing the role assigned to the AWS account or Harness Delegate your
    AWS Cloud Provider is using.</p><p>When you switch or modify the IAM role used
    by the Cloud Provider, it might take up to 5 minutes to take effect.</p><h3>Step
    1: Add the Cloud Provider</h3><p>To add a cloud provider to your Harness account,
    do the following:</p><ol><li>Click <strong>Setup</strong>, and then click <strong>Cloud
    Providers</strong>.</li><li>Click <strong>Add Cloud Provider</strong> and select
    <strong>Amazon Web Services</strong>.</li></ol><p>The <strong>Add Amazon Web Services
    Cloud Provider</strong> panel appears.</p><h3>Step 2: Display Name</h3><p>Choose
    a name for this provider. This is to differentiate AWS providers in Harness. It
    is not the actual AWS account name.</p><h3>Step 3: Credentials</h3><div class="note-callout">Ensure
    that the AWS IAM roles applied to the credentials you use (the Harness Delegate
    or the access key) includes the policies needed by Harness to deploy to the target
    AWS service. See <a href="https://docs.harness.io/article/wt1gnigme7-add-amazon-web-services-cloud-provider#review_aws_permissions">Review:
    AWS Permissions</a> below.</div><div class="warning-callout">The <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    target="_blank">DescribeRegions</a> action is required for all AWS Cloud Providers
    regardless of what AWS service you are using for your target infrastructure.</div><p></p><h4>Assume
    the IAM Role on Delegate</h4><p>This is the recommended method.</p><p>If you selected
    <strong>Assume the IAM Role on Delegate</strong>, in <strong>Delegate Selector</strong>,
    enter the Selector of the Delegate that this Cloud Provider will use for all connections.
    For information about Selectors, see <a href="/article/c3fvixpgsl-select-delegates-for-specific-tasks-with-selectors">Select
    Delegates for Specific Tasks with Selectors</a>.</p><div class="note-callout">Presently,
    Harness does not support <strong>Assume the IAM Role of the Delegate</strong>
    with the Download Artifact command in a Harness Service. If you are using Download
    Artifact, use the Access and Secret Key settings in the AWS Cloud Provider.</div><h4>Enter
    AWS Access Keys manually</h4><p>If you selected <strong>Enter AWS Access Keys
    manually</strong>, enter your Access Key and your Secret Key.</p><p>For secrets
    and other sensitive settings, select or create a new <a href="/article/ygyvp998mu-use-encrypted-text-secrets">Harness
    Encrypted Text secret</a>.</p><p>For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys"
    target="_blank">Access Keys (Access Key ID and Secret Access Key)</a> from AWS.</p><div
    class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><h4>Use
    IRSA (IAM roles for service accounts)</h4><p>Select <strong>Use IRSA</strong>
    if you want to have the Harness Kubernetes Delegate in AWS EKS use a specific
    IAM role when making authenticated requests to resources.</p><p>By default, the
    Harness Kubernetes Delegate uses a ClusterRoleBinding to the <strong>default</strong>
    service account. Instead, you can use AWS IAM roles for service accounts (IRSA)
    to associate a specific IAM role with the service account used by the Harness
    Kubernetes Delegate.</p><div class="note-callout">See <a href="https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html"
    target="_blank">IAM roles for service accounts</a> from AWS.</div><p>Setting up
    this feature requires a few more steps than other methods, but it is a simple
    process.</p><div class="note-callout">The following steps are for a new Delegate
    installation and new AWS Cloud Provider. If you updating an existing Delegate
    and AWS Cloud Provider, you can simply edit the Delegate YAML for your existing
    Delegate as described below, and select the <strong>Use IRSA</strong> option in
    your AWS Cloud Provider.</div><ol><li>Create the IAM role with the policies you
    want the Delegate to use. The policies you select with depend on what AWS resources
    you are deploying via the Delegate. See the different <strong>Policies Required</strong>
    sections in this document.</li><li>In the cluster where the Delegate will be installed,
    create a service account and attach the IAM role to it.</li></ol><p>Here is an
    example of how to create a new service account in the cluster where you will install
    the Delegate and attach the IAM policy to it:</p><pre>eksctl create iamserviceaccount
    \<br/>    --name=cdp-admin \<br/>    --namespace=default \<br/>    --cluster=test-eks
    \<br/>    --attach-policy-arn=&lt;policy-arn&gt; \<br/>    --approve \<br/>    --override-existing-serviceaccounts
    —region=us-east-1</pre><p></p><ol><li style="counter-increment:li 2" start="3">In
    Harness, download the Harness Kubernetes Delegate YAML file. See <a href="/article/0hn6vdpeqz-install-kubernetes-delegate">Install
    the Harness Kubernetes Delegate</a>.</li><li>Open the Delegate YAML file in text
    editor.</li><li>Add service account with access to IAM role to Delegate YAML.</li></ol><p>There
    are two sections in the Delegate YAML that you must update.</p><p>First, update
    the <code>ClusterRoleBinding</code> by adding the subject name of the service
    account with the attached IAM role.</p><p>Old <code>ClusterRoleBinding</code>:</p><pre>---<br/>apiVersion:
    rbac.authorization.k8s.io/v1beta1<br/>kind: ClusterRoleBinding<br/>metadata:<br/>  name:
    harness-delegate-cluster-admin<br/>subjects:<br/>  - kind: ServiceAccount<br/>    name:
    default<br/>    namespace: harness-delegate<br/>roleRef:<br/>  kind: ClusterRole<br/>  name:
    cluster-admin<br/>  apiGroup: rbac.authorization.k8s.io<br/>---</pre><p></p><p>New
    <code>ClusterRoleBinding</code> (for example, using the name <code>cdp-admin</code>):</p><pre>---<br/>apiVersion:
    rbac.authorization.k8s.io/v1beta1<br/>kind: ClusterRoleBinding<br/>metadata:<br/>  name:
    harness-delegate-cluster-admin<br/>subjects:<br/>  - kind: ServiceAccount<br/>    name:
    cdp-admin<br/>    namespace: harness-delegate<br/>roleRef:<br/>  kind: ClusterRole<br/>  name:
    cluster-admin<br/>  apiGroup: rbac.authorization.k8s.io<br/>---</pre><p></p><p>Next,
    update StatefulSet spec with the new <code>serviceAccountName</code>.</p><p>Old
    StatefulSet spec <code>serviceAccountName</code>:</p><pre>...<br/>    spec:<br/>      containers:<br/>      -
    image: harness/delegate:latest<br/>        imagePullPolicy: Always<br/>        name:
    harness-delegate-instance<br/>        ports:<br/>          - containerPort: 8080<br/>...</pre><p></p><p>New
    StatefulSet spec serviceAccountName (for example, using the name <code>cdp-admin</code>):</p><pre>...<br/>    spec:<br/>      serviceAccountName:
    cdp-admin<br/>      containers:<br/>      - image: harness/delegate:latest<br/>        imagePullPolicy:
    Always<br/>        name: harness-delegate-instance<br/>        ports:<br/>          -
    containerPort: 8080<br/>...</pre><p></p><ol><li style="counter-increment:li 5"
    start="6">Save the Delegate YAML file.</li><li>Install the Delegate in your EKS
    cluster and register the Delegate with Harness. See <a href="/article/0hn6vdpeqz-install-kubernetes-delegate">Install
    the Harness Kubernetes Delegate</a>.</li></ol><div class="note-callout">When you
    install the Delegate in the cluster, the serviceAccount you added is used and
    the environment variables <code>AWS_ROLE_ARN</code> and <code>AWS_WEB_IDENTITY_TOKEN_FILE</code>
    are added automatically by EKS.</div><ol><li style="counter-increment:li 5" start="6">Create
    a new AWS Cloud Provider.</li><li>In <strong>Credentials</strong>, select <strong>Use
    IRSA</strong>.</li><li>In <strong>Delegate Selector</strong>, select the Delegate
    you used.</li><li>Click <strong>Test</strong> to verify the Delegate credentials.</li></ol><h3>Review:
    AWS Security Token Service (STS)</h3><div class="note-callout">Assume STS Role
    is supported for EC2 and ECS. It is supported for EKS if you use the IRSA option,
    described above.</div><div class="warning-callout">The <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    target="_blank">DescribeRegions</a> action is required for all AWS Cloud Providers
    regardless of what AWS service you are using for your target infrastructure.</div><p></p><p>If
    you want to use one AWS account for the connection, but you want to deploy in
    a different AWS account, use the <strong>Assume STS Role</strong> option. This
    option uses the <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html"
    target="_blank">AWS Security Token Service</a> (STS) feature.</p><p>In this scenario,
    the AWS account used for AWS access in <strong>Credentials</strong> will assume
    the IAM role you specify in <strong>Role ARN</strong> setting.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/whwnovprrb/1587759358258/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><div
    class="note-callout">The Harness Delegate(s) always runs in the account you specify
    in <strong>Credentials</strong> via <strong>Access/Secret Key</strong> or <strong>Assume
    IAM Role on Delegate</strong>.</div><p>To assume the role in <strong>Role ARN</strong>,
    the AWS account in <strong>Credentials</strong> must be trusted by the role. The
    trust relationship is defined in the <strong>Role ARN</strong> role&#39;s trust
    policy when the role is created. That trust policy states which accounts are allowed
    to give that access to users in the account.</p><div class="note-callout">You
    can use <strong>Assume STS Role</strong> to establish trust between roles in the
    same account, but cross-account trust is more common.</div><p>The assumed role
    in <strong>Role ARN</strong> must have all the IAM policies required to perform
    your Harness deployment, such as <a href="https://docs.harness.io/article/whwnovprrb-cloud-providers#amazon_s3">Amazon
    S3</a>, <a href="https://docs.harness.io/article/whwnovprrb-cloud-providers#ecs_existing_cluster">ECS
    (Existing Cluster)</a>, and <a href="https://docs.harness.io/article/whwnovprrb-cloud-providers#aws_ec2">AWS
    EC2</a> policies. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html"
    target="_blank">Assuming an IAM Role in the AWS CLI</a> from AWS.</p><p>To use
    <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html"
    target="_blank">AWS Security Token Service</a> (STS) for cross-account access,
    do the following:</p><ol><li>Select the <strong>Assume STS Role</strong> option.</li><li>In
    <strong>Role ARN</strong>, enter the Amazon Resource Name (ARN) of the role that
    you want to assume. This is an IAM role in the target deployment AWS account.</li><li>(Optional)
    In <strong>External ID</strong>, if the administrator of the account to which
    the role belongs provided you with an external ID, then enter that value. For
    more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html">How
    to Use an External ID When Granting Access to Your AWS Resources to a Third Party</a>
    from AWS.</li></ol><div class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><h3>Review:
    AWS GovCloud and Override Default Region</h3><div class="note-callout">Currently,
    this feature is behind the Feature Flag <code>AWS_OVERRIDE_REGION</code>. Contact
    <a href="mailto:support@harness.io" target="_blank">Harness Support</a> to enable
    the feature.</div><p></p><p>By default, Harness uses the <strong>us-east-1</strong>
    region to test the credentials for the Cloud Provider.</p><p>If you want to use
    an <a href="https://aws.amazon.com/govcloud-us/faqs/" target="_blank">AWS GovCloud</a>
    account for this Cloud Provider, use the <strong>Override Default Region</strong>
    option.</p><p>In <strong>Region</strong>, select the GovCloud region you want
    to use.</p><p>GovCloud is used by organizations such as government agencies at
    the federal, state, and local level, as well as contractors, educational institutions.
    It is also used for regulatory compliance with these organizations.</p><h4>Restrictions</h4><p>You
    can access AWS GovCloud with AWS GovCloud credentials (AWS GovCloud account access
    key and AWS GovCloud IAM user credentials).</p><p>You cannot access AWS GovCloud
    with standard AWS credentials. Likewise, you cannot access standard AWS regions
    using AWS GovCloud credentials.</p><h3>Review: AWS IAM Roles and Policies</h3><div
    class="warning-callout">The <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    target="_blank">DescribeRegions</a> action is required for all AWS Cloud Providers
    regardless of what AWS service you are using for your target infrastructure.</div><p></p><p>The
    AWS role policy requirements depend on what AWS services you are using for your
    artifacts and target infrastructure (ECR, S3, EC2, ECS, etc).</p><p>In this topic,
    we have called out the deployment scenario, such as Lambda and AMI deployments.</p><p>Here
    are the user and access type requirements that you need to consider.</p><p><strong>User:</strong>
    Harness requires the IAM user be able to make API requests to AWS. For more information,
    see <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html"
    target="_blank">Creating an IAM User in Your AWS Account</a> from AWS.</p><p><strong>User
    Access Type:</strong> <strong>Programmatic access</strong>. This enables an access
    key ID and secret access key for the AWS API, CLI, SDK, and other development
    tools.</p><p>As described below, <code>DescribeRegions</code> is required for
    all AWS Cloud Provider connections.</p><h3>All AWS Cloud Providers: DescribeRegions
    Required</h3><div class="warning-callout">The <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRegions.html"
    target="_blank">DescribeRegions</a> action is required for all AWS Cloud Providers
    regardless of what AWS service you are using for your target infrastructure.</div><p>Harness
    needs a policy with the <code>DescribeRegions</code> action so that it can list
    the available regions for you when you define your target architecture.</p><p>Create
    a <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#customer-managed-policies">Customer
    Managed Policy</a>, add the <code>DescribeRegions</code> action to list those
    regions, and add that to any role used by the Cloud Provider.</p><pre>{<br/>    &#34;Version&#34;:
    &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;: [<br/>        {<br/>            &#34;Sid&#34;:
    &#34;VisualEditor0&#34;,<br/>            &#34;Effect&#34;: &#34;Allow&#34;,<br/>            &#34;Action&#34;:
    &#34;ec2:DescribeRegions&#34;,<br/>            &#34;Resource&#34;: &#34;*&#34;<br/>        }<br/>    ]<br/>}</pre><h3>Policies
    Required: Elastic Container Registry (ECR<strong>)</strong></h3><p><strong>Policy
    Name</strong>:<code>AmazonEC2ContainerRegistryReadOnly</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly</code>.</p><p><strong>Description:</strong>
    Provides read-only access to Amazon EC2 Container Registry repositories.</p><p><strong>Policy
    JSON:</strong></p><pre class="hljs json">{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>      {<br/>              &#34;Effect&#34;: &#34;Allow&#34;,<br/>              &#34;Action&#34;:
    [<br/>                  &#34;ecr:GetAuthorizationToken&#34;,<br/>                  &#34;ecr:BatchCheckLayerAvailability&#34;,<br/>                  &#34;ecr:GetDownloadUrlForLayer&#34;,<br/>                  &#34;ecr:GetRepositoryPolicy&#34;,<br/>                  &#34;ecr:DescribeRepositories&#34;,<br/>                  &#34;ecr:ListImages&#34;,<br/>                  &#34;ecr:DescribeImages&#34;,<br/>                  &#34;ecr:BatchGetImage&#34;<br/>              ],<br/>              &#34;Resource&#34;:
    &#34;*&#34;<br/>      }<br/>  ]<br/>}</pre><p></p><h3>Policies Required: Amazon
    S3</h3><p>There are two policies required:</p><ul><li>The Managed Policy <strong>AmazonS3ReadOnlyAccess</strong>.</li><li>The <a
    href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#customer-managed-policies">Customer
    Managed Policy</a> you create using <code>ec2:DescribeRegions</code>.</li></ul><div
    class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><p><strong>Policy
    Name</strong>: <code>AmazonS3ReadOnlyAccess</code>.</p><p><strong>Policy ARN:</strong>
    <code>arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess</code>.</p><p><strong>Description:</strong>
    Provides read-only access to all buckets via the AWS Management Console.</p><p><strong>Policy
    JSON:</strong></p><pre class="hljs json">{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>    {<br/>      &#34;Effect&#34;: &#34;Allow&#34;,<br/>      &#34;Action&#34;:
    [<br/>        &#34;s3:Get*&#34;,<br/>        &#34;s3:List*&#34;<br/>      ],<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    }<br/>  ]<br/>}</pre><p><strong>Policy Name:</strong> <code>HarnessS3</code>.</p><p><strong>Description:</strong> Harness
    S3 policy that uses EC2 permissions. This is a customer-managed policy you must
    create. In this example we have named it <code>HarnessS3</code>.</p><p><strong>Policy
    JSON:</strong></p><pre>{<br/>    &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;:
    [<br/>        {<br/>            &#34;Sid&#34;: &#34;VisualEditor0&#34;,<br/>            &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>            &#34;Action&#34;: &#34;ec2:DescribeRegions&#34;,<br/>            &#34;Resource&#34;:
    &#34;*&#34;<br/>        }<br/>    ]<br/>}</pre><div class="note-callout">If you
    want to use an S3 bucket that is in a separate account than the account used to
    set up the AWS Cloud Provider, you can grant cross-account bucket access. For
    more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example2.html"
    target="_blank">Bucket Owner Granting Cross-Account Bucket Permissions</a> from
    AWS.</div><p></p><h3>Policies Required: ECS (Existing Cluster)</h3><div class="note-callout"><strong>Recommended:</strong>
    Install and run the Harness ECS Delegate in the ECS cluster, and then use the
    AWS Cloud Provider to connect to that cluster using the Harness ECS Delegate you
    installed. This is the easiest method to connect to a ECS cluster. For more information,
    see <a href="https://docs.harness.io/article/h9tkwmkrm7-delegate-installation#installation_example_amazon_web_services_and_ecs">Installation
    Example: Amazon Web Services and ECS</a>.</div><p>Ensure that you add the IAM
    roles and policies to your ECS cluster when you create it. You cannot add the
    IAM roles and policies to an existing ECS cluster. You can add policies to whatever
    role is already assigned to an existing ECS cluster.</p><p>In addition to the
    default ECS role, <strong>ecsInstanceRole</strong>, these policies are required:</p><ul><li>The
    Managed Policy <strong>AmazonEC2ContainerServiceforEC2Role</strong> from AWS.</li><li>The
    Managed Policy <strong>AmazonEC2ContainerServiceRole</strong> from AWS.</li><li>The
    <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html#customer-managed-policies">Customer
    Managed Policy</a> you create using <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/Welcome.html"
    target="_blank">Application Auto Scaling</a>.</li></ul><p>Attach these policies
    to the <strong>ecsInstanceRole</strong> role, and apply that to your ECS cluster
    when you create it. For information on <strong>ecsInstanceRole</strong>, see <a
    href="https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon
    ECS Instance Role</a> from AWS.</p><div class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><h4>ELB,
    ALB, and ECS</h4><p><strong>Policy Name</strong>: <code>AmazonEC2ContainerServiceforEC2Role</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/AmazonEC2ContainerServiceforEC2Role</code>.</p><p><strong>Description:</strong>
    Makes calls to the Amazon ECS API. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/instance_IAM_role.html">Amazon
    ECS Container Instance IAM Role</a> from AWS.</p><p><strong>Policy JSON:</strong></p><pre
    class="hljs json">{<br/>    &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;:
    [<br/>        {<br/>            &#34;Effect&#34;: &#34;Allow&#34;,<br/>            &#34;Action&#34;:
    [<br/>                &#34;ecs:CreateCluster&#34;,<br/>                &#34;ecs:DeregisterContainerInstance&#34;,<br/>                &#34;ecs:DiscoverPollEndpoint&#34;,<br/>                &#34;ecs:Poll&#34;,<br/>                &#34;ecs:RegisterContainerInstance&#34;,<br/>                &#34;ecs:StartTelemetrySession&#34;,<br/>                &#34;ecs:UpdateContainerInstancesState&#34;,<br/>                &#34;ecs:Submit*&#34;,<br/>                &#34;ecr:GetAuthorizationToken&#34;,<br/>                &#34;ecr:BatchCheckLayerAvailability&#34;,<br/>                &#34;ecr:GetDownloadUrlForLayer&#34;,<br/>                &#34;ecr:BatchGetImage&#34;,<br/>                &#34;logs:CreateLogStream&#34;,<br/>                &#34;logs:PutLogEvents&#34;<br/>            ],<br/>            &#34;Resource&#34;:
    &#34;*&#34;<br/>        }<br/>    ]<br/>}</pre><p><strong>Policy Name</strong>:
    <code>AmazonEC2ContainerServiceRole</code>.</p><p><strong>Policy ARN:</strong>
    <code>arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole</code>.</p><p><strong>Description:</strong>
    Default policy for Amazon ECS service role.</p><pre>{<br/>    &#34;Version&#34;:
    &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;: [<br/>        {<br/>            &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>            &#34;Action&#34;: [<br/>                &#34;ec2:AuthorizeSecurityGroupIngress&#34;,<br/>                &#34;ec2:Describe*&#34;,<br/>                &#34;elasticloadbalancing:DeregisterInstancesFromLoadBalancer&#34;,<br/>                &#34;elasticloadbalancing:DeregisterTargets&#34;,<br/>                &#34;elasticloadbalancing:Describe*&#34;,<br/>                &#34;elasticloadbalancing:RegisterInstancesWithLoadBalancer&#34;,<br/>                &#34;elasticloadbalancing:RegisterTargets&#34;<br/>            ],<br/>            &#34;Resource&#34;:
    &#34;*&#34;<br/>        }<br/>    ]<br/>}</pre><p><strong>Policy Name:</strong>
    <code>HarnessECS</code>.</p><p><strong>Description:</strong> Harness ECS policy.
    This is a customer-managed policy you must create. In this example we have named
    it <code>HarnessECS</code>.</p><p><strong>Policy JSON:</strong></p><pre>{<br/>    &#34;Version&#34;:
    &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;: [<br/>        {<br/>            &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>            &#34;Action&#34;: [<br/>                &#34;ecr:DescribeRepositories&#34;,<br/>                &#34;ecs:ListClusters&#34;,<br/>                &#34;ecs:ListServices&#34;,<br/>                &#34;ecs:DescribeServices&#34;,<br/>                &#34;ecr:ListImages&#34;,<br/>                &#34;ecs:RegisterTaskDefinition&#34;,<br/>                &#34;ecs:CreateService&#34;,<br/>                &#34;ecs:ListTasks&#34;,<br/>                &#34;ecs:DescribeTasks&#34;,<br/>                &#34;ecs:DeleteService&#34;,<br/>                &#34;ecs:UpdateService&#34;,<br/>                &#34;ecs:DescribeContainerInstances&#34;,<br/>                &#34;ecs:DescribeTaskDefinition&#34;,<br/>                &#34;application-autoscaling:DescribeScalableTargets&#34;,<br/>                &#34;iam:ListRoles&#34;,<br/>                &#34;iam:PassRole&#34;<br/>            ],<br/>            &#34;Resource&#34;:
    &#34;*&#34;<br/>        }<br/>    ]<br/>}</pre><h4>Notes</h4><ul><li>There is
    a limit on how many policies you can attach to a IAM role. If you exceed the limit,
    copy the permissions JSON under <strong>Action</strong>, create a single custom
    policy, and add them to the policy.</li><li>Due to an AWS limitation, Harness
    is unable to limit the three actions for ECS to <code>Create</code>, <code>Update</code>,
    and <code>DeleteService</code> for just a specific cluster/resource. This limitation
    is why we require <code>Resource *</code>.</li><li><strong>ECS with Public Docker
    Registry:</strong> All ECS permissions are required.</li><li><strong>ECS with
    Private Docker Registry:</strong> All ECS permissions are required. Also, the
    Docker agent on the container host should be configured to authenticate with the
    private registry. Please refer to AWS documentation <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/private-auth.html">here</a>.</li><li><strong>ECS
    with ECR:</strong> For ECS and ECR, all permissions are required.</li><li><strong>ECS
    with GCR:</strong> This is currently not supported.</li></ul><h4>Auto Scaling
    with ECS</h4><p>For Auto Scaling, the AWS Managed policy <strong>AWSApplicationAutoscalingECSServicePolicy</strong>
    should be attached to the default <strong>ecsInstanceRole</strong> role, and applied
    to your ECS cluster when you create it.</p><p>For information on <strong>AWSApplicationAutoscalingECSServicePolicy</strong>,
    see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/autoscale_IAM_role.html">Amazon
    ECS Service Auto Scaling IAM Role</a> from AWS. For information on <strong>ecsInstanceRole</strong>,
    see <a href="https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html">Amazon
    ECS Instance Role</a> from AWS.</p><p><strong>Policy Name:</strong> <code>AWSApplicationAutoscalingECSServicePolicy</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/AWSApplicationAutoscalingECSServicePolicy</code>.</p><p><strong>Description:</strong>
    Describes your CloudWatch alarms and registered services, as well as permissions
    to update your Amazon ECS service&#39;s desired count on your behalf.</p><p><strong>Policy
    JSON:</strong></p><pre>{<br/>    &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;:
    [<br/>        {<br/>            &#34;Effect&#34;: &#34;Allow&#34;,<br/>            &#34;Action&#34;:
    [<br/>                &#34;ecs:DescribeServices&#34;,<br/>                &#34;ecs:UpdateService&#34;,<br/>                &#34;cloudwatch:PutMetricAlarm&#34;,<br/>                &#34;cloudwatch:DescribeAlarms&#34;,<br/>                &#34;cloudwatch:DeleteAlarms&#34;<br/>            ],<br/>            &#34;Resource&#34;:
    [<br/>                &#34;*&#34;<br/>            ]<br/>        }<br/>    ]<br/>}</pre><p></p><h3>Policies
    Required: AWS AMI/ASG Deployments</h3><p>For details on these deployments, see
    <a href="/article/wfk9o0tsjb-aws-ami-deployments">AWS AMI Quickstart</a> and <a
    href="/category/mizega9tt6-ami-deployments">AMI How-tos</a>.</p><h4>Provisioned
    and Static Hosts</h4><p><strong>Policy Name</strong>: <code>AmazonEC2FullAccess</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/AmazonEC2FullAccess</code>.</p><p><strong>Description:</strong>
    Provides full access to Amazon EC2 via the AWS Management Console.</p><p><strong>Policy
    JSON:</strong></p><pre class="hljs json">{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>    {<br/>      &#34;Action&#34;: &#34;ec2:*&#34;,<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Resource&#34;: &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Action&#34;: &#34;elasticloadbalancing:*&#34;,<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;: &#34;Allow&#34;,<br/>      &#34;Action&#34;:
    &#34;cloudwatch:*&#34;,<br/>      &#34;Resource&#34;: &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Action&#34;: &#34;autoscaling:*&#34;,<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    }<br/>  ]<br/>}</pre><h4>Tagging</h4><p>AMI Blue/Green deployments
    require AWS tags. Please create the following custom policy and apply it to the
    IAM role used by the AWS Cloud Provider (access key or IAM role applied to the
    Harness Delegate).</p><p>This is a customer managed policy. Here we call it <code>HarnessAmiTagging</code>.</p><p><strong>Policy
    Name:</strong> <code>HarnessAmiTagging</code>.</p><p><strong>Description:</strong>
    Enables AWS tagging for Harness AMI Blue/Green deployments.</p><p><strong>Policy
    JSON:</strong></p><pre>{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>    {<br/>      &#34;Effect&#34;: &#34;Allow&#34;,<br/>      &#34;Action&#34;:
    [<br/>        &#34;autoscaling:CreateOrUpdateTags&#34;,<br/>        &#34;autoscaling:DeleteTags&#34;,<br/>        &#34;autoscaling:DescribeTags&#34;<br/>      ],<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    }<br/>  ]<br/>}</pre><h3>Policies Required: AWS CodeDeploy</h3><div
    class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><p>There
    are two policies required<strong>:</strong> <strong>AWSCodeDeployRole</strong>
    and <strong>AWSCodeDeployDeployerAccess</strong>.</p><p><strong>Policy Name:</strong>
    <code>AWSCodeDeployRole</code>.</p><p><strong>Policy ARN:</strong> <code>arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole</code>.</p><p><strong>Description:</strong>
    Provides CodeDeploy service access to expand tags and interact with Auto Scaling
    on your behalf.</p><p><strong>Policy JSON:</strong></p><pre class="hljs json">{<br/>  &#34;Version&#34;:
    &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;: [<br/>    {<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Action&#34;: [<br/>        &#34;autoscaling:CompleteLifecycleAction&#34;,<br/>        &#34;autoscaling:DeleteLifecycleHook&#34;,<br/>        &#34;autoscaling:DescribeAutoScalingGroups&#34;,<br/>        &#34;autoscaling:DescribeLifecycleHooks&#34;,<br/>        &#34;autoscaling:PutLifecycleHook&#34;,<br/>        &#34;autoscaling:RecordLifecycleActionHeartbeat&#34;,<br/>        &#34;autoscaling:CreateAutoScalingGroup&#34;,<br/>        &#34;autoscaling:UpdateAutoScalingGroup&#34;,<br/>        &#34;autoscaling:EnableMetricsCollection&#34;,<br/>        &#34;autoscaling:DescribeAutoScalingGroups&#34;,<br/>        &#34;autoscaling:DescribePolicies&#34;,<br/>        &#34;autoscaling:DescribeScheduledActions&#34;,<br/>        &#34;autoscaling:DescribeNotificationConfigurations&#34;,<br/>        &#34;autoscaling:DescribeLifecycleHooks&#34;,<br/>        &#34;autoscaling:SuspendProcesses&#34;,<br/>        &#34;autoscaling:ResumeProcesses&#34;,<br/>        &#34;autoscaling:AttachLoadBalancers&#34;,<br/>        &#34;autoscaling:PutScalingPolicy&#34;,<br/>        &#34;autoscaling:PutScheduledUpdateGroupAction&#34;,<br/>        &#34;autoscaling:PutNotificationConfiguration&#34;,<br/>        &#34;autoscaling:PutLifecycleHook&#34;,<br/>        &#34;autoscaling:DescribeScalingActivities&#34;,<br/>        &#34;autoscaling:DeleteAutoScalingGroup&#34;,<br/>        &#34;ec2:DescribeInstances&#34;,<br/>        &#34;ec2:DescribeInstanceStatus&#34;,<br/>        &#34;ec2:TerminateInstances&#34;,<br/>        &#34;tag:GetTags&#34;,<br/>        &#34;tag:GetResources&#34;,<br/>        &#34;sns:Publish&#34;,<br/>        &#34;cloudwatch:DescribeAlarms&#34;,<br/>        &#34;elasticloadbalancing:DescribeLoadBalancers&#34;,<br/>        &#34;elasticloadbalancing:DescribeInstanceHealth&#34;,<br/>        &#34;elasticloadbalancing:RegisterInstancesWithLoadBalancer&#34;,<br/>        &#34;elasticloadbalancing:DeregisterInstancesFromLoadBalancer&#34;,<br/>        &#34;elasticloadbalancing:DescribeTargetGroups&#34;,<br/>        &#34;elasticloadbalancing:DescribeTargetHealth&#34;,<br/>        &#34;elasticloadbalancing:RegisterTargets&#34;,<br/>        &#34;elasticloadbalancing:DeregisterTargets&#34;<br/>      ],<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    }<br/>  ]<br/>}<br/></pre><p><strong>Policy Name:</strong>
    <code>AWSCodeDeployDeployerAccess</code>.</p><p><strong>Policy ARN:</strong> <code>arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess</code>.</p><p><strong>Description:</strong>
    Provides access to register and deploy a revision.</p><p><strong>Policy JSON:</strong></p><pre
    class="hljs json">{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>    {<br/>      &#34;Action&#34;: [<br/>        &#34;codedeploy:Batch*&#34;,<br/>        &#34;codedeploy:CreateDeployment&#34;,<br/>        &#34;codedeploy:Get*&#34;,<br/>        &#34;codedeploy:List*&#34;,<br/>        &#34;codedeploy:RegisterApplicationRevision&#34;<br/>      ],<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Resource&#34;: &#34;*&#34;<br/>    }<br/>  ]<br/>}<br/></pre><p></p><h3>Policies
    Required: AWS EC2</h3><div class="note-callout">The AWS <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">IAM
    Policy Simulator</a> is a useful tool for evaluating policies and access.</div><h4>Provisioned
    and Static Hosts</h4><p><strong>Policy Name</strong>: <code>AmazonEC2FullAccess</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/AmazonEC2FullAccess</code>.</p><p><strong>Description:</strong>
    Provides full access to Amazon EC2 via the AWS Management Console.</p><p><strong>Policy
    JSON:</strong></p><pre class="hljs json">{<br/>  &#34;Version&#34;: &#34;2012-10-17&#34;,<br/>  &#34;Statement&#34;:
    [<br/>    {<br/>      &#34;Action&#34;: &#34;ec2:*&#34;,<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Resource&#34;: &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Action&#34;: &#34;elasticloadbalancing:*&#34;,<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;: &#34;Allow&#34;,<br/>      &#34;Action&#34;:
    &#34;cloudwatch:*&#34;,<br/>      &#34;Resource&#34;: &#34;*&#34;<br/>    },<br/>    {<br/>      &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>      &#34;Action&#34;: &#34;autoscaling:*&#34;,<br/>      &#34;Resource&#34;:
    &#34;*&#34;<br/>    }<br/>  ]<br/>}<br/></pre><h5><strong>Trusted entities</strong></h5><p>Newly
    created roles under Amazon EC2 have trusted entities listed as <strong>ec2.amazonaws.com</strong>.
    For ECS, this needs to be updated with <strong>ecs.amazonaws.com</strong>. See
    the AWS documentation at <a href="http://docs.aws.amazon.com/AmazonECS/latest/developerguide/service_IAM_role.html">Amazon
    ECS Service Scheduler IAM Role</a>.</p><p></p><h3>Policies Required: Amazon Lambda</h3><p>The
    IAM role attached to your Delegate host (either an EC2 instance or ECS Task) must
    have the AWSLambdaRole policy attached. The policy contains the <code>lambda:InvokeFunction</code>
    needed for Lambda deployments.</p><div class="note-callout">For details on connecting
    Lambda with S3 across AWS accounts, see <a href="https://aws.amazon.com/premiumsupport/knowledge-center/lambda-execution-role-s3-bucket/"
    target="_blank">How do I allow my Lambda execution role to access my Amazon S3
    bucket?</a> from AWS.</div><p><strong>Policy Name</strong>: <code>AWSLambdaRole</code>.</p><p><strong>Policy
    ARN:</strong> <code>arn:aws:iam::aws:policy/service-role/AWSLambdaRole</code>.</p><p><strong>Description:</strong>
    Default policy for AWS Lambda service role.</p><p><strong>Policy JSON:</strong></p><pre>{<br/>    &#34;Version&#34;:
    &#34;2012-10-17&#34;,<br/>    &#34;Statement&#34;: [<br/>        {<br/>            &#34;Effect&#34;:
    &#34;Allow&#34;,<br/>            &#34;Action&#34;: [<br/>                &#34;lambda:InvokeFunction&#34;<br/>            ],<br/>            &#34;Resource&#34;:
    [<br/>                &#34;*&#34;<br/>            ]<br/>        }<br/>    ]<br/>}</pre><p>For
    more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html">Identity-based
    IAM Policies for AWS Lambda</a> from AWS.</p><div class="note-callout">Ensure
    that the IAM role assigned to the Delegate has the <strong>IAMReadOnlyAccess</strong>
    (arn:aws:iam::aws:policy/IAMReadOnlyAccess) policy attached. This enables Harness
    to ensure that AWSLambdaRole policy is attached.</div><p></p><h3>Artifact Support
    for Download and Copy</h3><p>See <a href="/article/qluiky79j8-service-types-and-artifact-sources">Service
    Types and Artifact Sources</a>.</p>'
  slug: add-amazon-web-services-cloud-provider
  tags:
  - AWS
  - IAM Role
  - IAM
  - GovCloud
  is_live: true
