type: article
article_id: 4zd81qhhiu
user_id: mfr0nxh4be
category_id: fmttl9hxzc
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Send Slack Messages from Workflows
slug: slack-notifications
description: Send a Slack message at any point in a Workflow.
short_version: Send a Slack message at any point in a Workflow.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-06T19:12:23.768217Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Send Slack Messages from Workflows
  description: Send a Slack message at any point in a Workflow.
  short_version: Send a Slack message at any point in a Workflow.
  body: '<p>You can send a Slack message at any point in a Workflow using a Slack
    webhook and a Harness Shell Script step.</p><p>This simple integration allows
    you to notify team members at any point in a deployment.</p><p>For more advanced
    integrations, see <a href="/article/kf828e347t-notification-groups">Manage User
    Notifications</a>, <a href="/article/rt7zvmzlgx-manage-alert-notifications">Manage
    Alert Notifications</a>, and <a href="/article/0ajz35u2hy-approvals">Approvals</a>.</p><div
    class="note-callout">For steps on sending all User Group notifications to a Slack
    channel, see <a href="/article/4blpfqwfdc-send-notification-using-slack">Send
    Notifications Using Slack</a>.</div><p>In this topic:</p><ul><li> <a href="#before_you_begin">Before
    You Begin</a></li><li> <a href="#step_1_create_a_slack_app_and_webhook_for_your_channel">Step
    1: Create a Slack App and Webhook for your Channel</a></li><li> <a href="#step_2_add_shell_script_step_using_your_webhook">Step
    2: Add a Shell Script Step using your Webhook</a></li><li> <a href="#option_improve_your_message">Option:
    Improve Your Message</a></li><li> <a href="#next_steps">Next Steps</a></li></ul><h3>Before
    You Begin</h3><ul><li> <a href="https://api.slack.com/messaging/webhooks" target="_blank">Sending
    messages using Incoming Webhooks</a> from Slack.</li><li> <a href="/article/1fjrjbau7x-capture-shell-script-step-output">Using
    the Shell Script Step</a></li><li> <a href="/article/m220i1tnia-workflow-configuration">Workflows</a></li></ul><p></p><h3>Step
    1: Create a Slack App and Webhook for your Channel</h3><p>Follow the steps in
    Slack documentation for creating a Slack app, selecting your channel, and creating
    a webhook: <a href="https://api.slack.com/messaging/webhooks" target="_blank">Sending
    messages using Incoming Webhooks</a>.</p><p>When you are done, you&#39;ll have
    a webhook that looks something like this:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/4zd81qhhiu/1589479083422/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Step
    2: Add a Shell Script Step using your Webhook</h3><p>At any place in your Harness
    Workflow, add a <a href="/article/1fjrjbau7x-capture-shell-script-step-output">Shell
    Script step</a>.</p><p>In <strong>Script</strong>, enter the Slack message using
    your webhook.</p><p>Here is a simple example using the cURL command Slack provides
    in its Incoming Webhooks page.</p><pre>curl -X POST -H &#39;Content-type: application/json&#39;
    --data &#39;{&#34;text&#34;:&#34;simple cURL command example!&#34;}&#39; https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX</pre><p>When
    you deploy the Workflow, the message will look something like this:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/4zd81qhhiu/1589477832229/image.png"/></figure><p>Here
    is a more advanced example using bash and Harness <a href="/article/9dvxcegm90-variables">built-in
    variable expressions</a>:</p><pre>url=https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX<br/>  <br/>payload=&#39;<br/>{<br/>  &#34;text&#34;:
    &#34;Deployed to *${infra.name}*&#34;,<br/>  &#34;attachments&#34;: [<br/>    {<br/>      &#34;author_name&#34;:
    &#34;${deploymentTriggeredBy}&#34;,<br/>      &#34;text&#34;: &#34;Deployment
    text&#34;,<br/>      &#34;color&#34;: &#34;#00a3e0&#34;<br/>    }<br/>  ]<br/>}&#39;<br/>  <br/>curl
    -s -X POST -H &#34;Content-type: application/json&#34; --data &#34;$payload&#34;
    $url</pre><p>When you deploy the Workflow, the message will look something like
    this:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/4zd81qhhiu/1589478107071/image.png"/></figure><p></p><p>You
    can use different variable expressions in your messages. See the following:</p><ul><li><a
    href="/article/revc37vl0f-passing-variable-into-workflows">Passing Variables into
    Workflows and Pipelines from Triggers</a></li><li><a href="/article/766iheu1bk-add-workflow-variables-new-template">Set
    Workflow Variables</a></li><li><a href="/article/q78p7rpx9u-add-service-level-config-variables">Add
    Service Config Variables</a></li><li><a href="/article/4m2kst307m-override-service-files-and-variables-in-environments">Override
    a Service Configuration in an Environment</a></li></ul><p></p><h3>Option: Improve
    Your Message</h3><p>Slack messages have many formatting and interactive features.
    You can improve the Slack messages you send from your Workflow using these features.</p><p>See
    the following Slack docs:</p><ul><li> <a href="https://api.slack.com/messaging/composing/layouts"
    target="_blank">Creating rich message layouts</a></li><li> <a href="https://api.slack.com/messaging/interactivity"
    target="_blank">Creating interactive messages</a></li></ul><h3>Next Steps</h3><ul><li>
    <a href="/article/kf828e347t-notification-groups">Manage User Notifications</a></li><li>
    <a href="/article/rt7zvmzlgx-manage-alert-notifications">Manage Alert Notifications</a></li><li>
    <a href="/article/0ajz35u2hy-approvals">Approvals</a></li></ul><p></p>'
  slug: slack-notifications
  tags: []
  is_live: true
