type: article
article_id: d7rnemtfuz
user_id: mfr0nxh4be
category_id: yp3yaavhla
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: ECS Rollbacks
slug: ecs-rollback
description: This topic describes how Harness ECS deployments perform rollback in
  the case of deployment failures. For information ECS deployments, see AWS ECS Quickstart
  and AWS ECS Deployments Overview. In this…
short_version: This topic describes how Harness ECS deployments perform rollback in
  the case of deployment failures. For information ECS deployments, see AWS ECS Quickstart
  and AWS ECS Deployments Overview. In this…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:01.862372Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: ECS Rollbacks
  description: ""
  short_version: ""
  body: <p>This topic describes how Harness ECS deployments perform rollback in the
    case of deployment failures.</p><div class="note-callout">For information ECS
    deployments, see <a href="/article/j39azkrevm-aws-ecs-deployments">AWS ECS Quickstart</a>
    and <a href="/article/5z2kw34d7x-aws-ecs-deployments-overview">AWS ECS Deployments
    Overview</a>.</div><p>In this topic:</p><p></p><ul><li> <a href="#rollback_summary">Rollback
    Summary</a><ul><li> <a href="#rollback_all_phases_at_once">Rollback All Phases
    at Once</a></li></ul></li><li> <a href="#rollbacks_with_auto_scaling">Rollbacks
    with Auto Scaling</a><ul><li> <a href="#multi_phase_task_upscale_is_incremental">Multi-Phase
    Task Upscale is Incremental</a></li><li> <a href="#rollback">Rollback</a></li><li>
    <a href="#don_t_want_a_previous_asg_downsized">Don&#39;t Want a Previous ASG Downsized?</a></li></ul></li><li>
    <a href="#post_production_rollback">Post-Production Rollback</a></li><li> <a href="#rollback_order_in_multi_phase_workflow">Rollback
    Order in Multi-Phase Workflow</a></li><li> <a href="#upgrade_containers_and_rollback_containers_steps_are_dependent">Upgrade
    Containers and Rollback Containers Steps are Dependent</a></li><li> <a href="#rollback_when_auto_scaling_is_enabled">Rollback
    when Auto Scaling is Enabled</a></li></ul><h3>Rollback Summary</h3><p>When an
    ECS deployment fails, the service tasks it was deploying are scaled down to 0.</p><p>The
    old, working service is upscaled to its pre-setup number of tasks.</p><p>If <a
    href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html"
    target="_blank">ECS Service Auto Scaling</a> is configured, it is attached to
    the last production service at the end of the rollback. </p><div class="note-callout">ECS
    Auto Scaling deployment is performed by the last <strong>Upgrade Containers</strong>
    step in the Workflow. If you delete <strong>Upgrade Containers</strong>, no Auto
    Scaling is applied. Also, the <strong>Upgrade Containers</strong> step is dependent
    on the <strong>Rollback Containers</strong> step in the same Phase to ensure Auto
    Scaling is applied to the last, successful service in the case of rollback. See
    <a href="#upgrade_containers_and_rollback_containers_steps_are_dependent">Upgrade
    Containers and Rollback Containers Steps are Dependent</a>.</div><p>For multi-phase
    deployments (Canary), not all Workflow Phases are rolled back at once.</p><p>Phases
    are rolled back in the standard, reverse order. For example, in a 2 Phase deployment
    with 2 Rollback Phases, the order is P1 → P2 → R2 → R1.</p><p>Phases are rolled
    back in this order regardless of whether ECS Service Auto Scaling is used.</p><h4>Rollback
    All Phases at Once</h4><p>By default, not all Workflow Phases are rolled back
    at once.</p><p>You must select the <strong>Rollback All Phases at Once</strong>
    option in the <strong>Rollback Containers</strong> step to enable this method.</p><h3>Auto
    Scaling</h3><p>Harness identifies the ECS services it deployed using the service&#39;s
    name when it was deployed.</p><p>Harness upscales and downsizes in two states,
    setup and deploy.</p><ul><li><strong>Setup</strong> — The setup state is when
    your new service is created.</li><li><strong>Deploy</strong> — The deploy phase(s)
    is when your new service is attached to the new tasks (often called instances)
    and upscaled to the number of new tasks you requested. This is either a fixed
    setting (Min, Max, Desired) or the same number as the previous service version.</li></ul><p>During
    setup state:</p><ul><li>The previous service is kept with non-zero task count.
    It is identified by its name and the highest revision number prefix, such as <strong>_7</strong>.
    Any older services are downsized to 0.</li><li>New service is created with 0 count.</li><li>For
    old services that have 0 instances, Harness keeps the 3 last old services and
    deletes the rest.</li></ul><p>During deploy phases:</p><ul><li>New service is
    upscaled to the number of new tasks you requested.</li><li>Previous service is
    gradually downsized. In the case of a Canary deployment, the old service is downsized
    in the inverse proportion to the new service&#39;s upscale. If the new service
    is upscaled 25% in phase 1, the previous service is downsized 25%.</li></ul><p>At
    the end of deployment:</p><ul><li>New service has the number of new tasks you
    requested. In Canary, this is always 100%.</li><li>Previous service is downsized
    to 0.</li></ul><h4>Multi-Phase Task Upscale is Incremental</h4><p>When you set
    up a multi-phase Workflow you specify the count or percentage of tasks for each
    phase.</p><p>The count/percentage must be incremental. If you make a mistake and
    specify a lower number in a subsequent task, Harness ignores it.</p><p>For example,
    if you specify 25% in Phase 1 and 10% in Phase 2, Harness will deploy 25%.</p><h4>Rollback</h4><p>If
    rollback occurs, the previous service is upscaled to its pre-setup number of instances
    using new instances.</p><p>See the following rollback scenarios below:</p><ul><li>
    <a href="https://docs.harness.io/article/d7rnemtfuz-ecs-rollback#undefined">Post-Production
    Rollback</a></li><li> <a href="https://docs.harness.io/article/d7rnemtfuz-ecs-rollback#rollback_order_in_multi_phase_workflow">Rollback
    Order in Multi-Phase Workflow</a></li><li> <a href="https://docs.harness.io/article/d7rnemtfuz-ecs-rollback#rollback_when_auto_scaling_is_enabled">Rollback
    when Auto Scaling is Enabled</a></li></ul><h4>Don&#39;t Want a Previous ASG Downsized?</h4><p>As
    stated earlier, Harness identifies the services it deploys using the Harness Infrastructure
    Definition used to deploy it. During deployments, Harness tags the new services
    with an Infrastructure Definition ID.</p><p>It uses that ID to identify the previous
    services version(s), and downsize them as described above.</p><p>If you do not
    want a previously deployed service to be downsized, then you must use a <u>new</u> Infrastructure
    Definition for future service deployments. A new service name is not enough.</p><h3>Post-Production
    Rollback</h3><p>Harness also supports post-production rollback for cases where
    you want to recover from a deployment that succeeded on technical criteria, but
    that you want to undo for other reasons.</p><p>See <a href="https://docs.harness.io/article/2f36rsbrve-post-deployment-rollback">Rollback
    Production Deployments</a>.</p><h3>Rollback Order in Multi-Phase Workflow</h3><p>If
    you have a Workflow with two Phases, Phase 1 and Phase 1, rollback is performed
    in reverse order:</p><ol><li>Phase 2 is rollback first.</li><li>Phase 1 is rolled
    back second.</li></ol><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/d7rnemtfuz/1607031353779/image.png"/></figure><p></p><p>This
    is the standard rollback order for all Harness multi-phase deployments.</p><h3>Upgrade
    Containers and Rollback Containers Steps are Dependent</h3><p>In order for rollback
    to add ECS Auto Scaling to the previous, successful service, you must have both
    the <strong>Upgrade Containers</strong> and <strong>Rollback Containers</strong>
    steps in the same Phase.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/28ehkmqy3v/1610478708602/image.png"/></figure><p>Since
    ECS Auto Scaling is added by the <strong>Upgrade Containers</strong> step, if
    you delete <strong>Upgrade Containers</strong>, then <strong>Rollback Containers</strong>
    has no ECS Auto Scaling to roll back to.</p><div class="note-callout">If you want
    to remove ECS Auto Scaling from a Phase, delete <u>both</u> the <strong>Upgrade
    Containers</strong> and <strong>Rollback Containers</strong> steps. The Phase
    will no longer perform ECS Auto Scaling during deployment or rollback.</div><h3>Rollback
    when Auto Scaling is Enabled</h3><p>In Harness, you configure <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html"
    target="_blank">ECS Service Auto Scaling</a> in the <strong>ECS Service Setup</strong>
    step of a Workflow, and it is applied in the last <strong>Upgrade Containers</strong>
    step in the Workflow.</p><p>Here is the <strong>ECS Service Setup</strong> step
    where to define ECS Auto Scaling:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/d7rnemtfuz/1607033537628/image.png"/></figure><ol><li>In
    a Workflow with the <strong>ECS Service Setup</strong> step, open the <strong>ECS
    Service Setup</strong> step.</li><li>In <strong>Auto Scaler Configurations</strong>,
    the Auto Scaling property fields appear.</li></ol><p>When Harness deploys your
    ECS service, it will register the service with ECS Service Auto Scaling to apply
    the scaling policy, scaling out (and in) using CloudWatch target tracking.</p><div
    class="note-callout">In the event of deployment failure, ECS Auto Scaling is applied
    to the last successful service. This is performed by the Phase with both <strong>Upgrade
    Containers</strong> and <strong>Rollback Containers</strong> steps. <u>Both steps
    must be present in the same Phase.</u></div><p>In the event of deployment failure,
    Harness performs the following:</p><ul><li>By default, not all Workflow Phases
    are rolled back at once. You must select the <strong>Rollback All Phases at Once</strong>
    option in the <strong>Rollback Containers</strong> step to enable this.<br/>Phases
    are rolled back in the standard, reverse order. For example, in a 2 Phase deployment
    with 2 Rollback Phases, the order is P1 → P2 → R2 → R1.</li><li>Auto scaling is
    attached to the old, working ECS service at the <u>end of rollback</u>. For example,
    in a 2 Phase deployment with 2 Rollback Phases (P1 → P2 → R2 → R1), auto scaling
    is attached to the old service after the last Rollback Phase, R1.</li><li>The
    desired count of the old, working ECS service is always used regardless of the
    current, failed service count set in the failed deployment.</li></ul><p></p>
  slug: ecs-rollback
  tags: []
  is_live: true
