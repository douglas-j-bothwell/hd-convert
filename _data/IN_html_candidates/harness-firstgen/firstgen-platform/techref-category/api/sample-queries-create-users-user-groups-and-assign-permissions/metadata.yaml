type: article
article_id: p9ssx4cv5t
user_id: slcpusem6b
category_id: l2p3i03l4a
author:
  name: Archana Singh
  profile_image: https://www.gravatar.com/avatar/e323facc5a711ac44c46e58dcb52aa3e?d=mm&s=150
title: Use Users and Groups API
slug: sample-queries-create-users-user-groups-and-assign-permissions
description: Provides examples of how to create Harness users and user groups, and
  how to assign permissions to the users and User Groups, using API calls.
short_version: Provides examples of how to create Harness users and user groups, and
  how to assign permissions to the users and User Groups, using API calls.
tags:
- API
- GraphQL API
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:33.121155Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Use Users and Groups API
  description: Provides examples of how to create Harness users and user groups, and
    how to assign permissions to the users and User Groups, using API calls.
  short_version: Provides examples of how to create Harness users and user groups,
    and how to assign permissions to the users and User Groups, using API calls.
  body: '<p>This topic provides examples of how to create Harness users and user groups,
    and how to assign permissions to the users and User Groups, using API calls.</p><p>In
    this topic:</p><ul><li><a href="https://docs.harness.io/article/p9ssx4cv5t-sample-queries-create-users-user-groups-and-assign-permissions#undefined">Before
    You Begin</a></li><li><a href="https://docs.harness.io/article/p9ssx4cv5t-sample-queries-create-users-user-groups-and-assign-permissions#create_a_user">Create
    a User</a></li><li><a href="#delete_a_user">Delete a User</a></li><li><a href="https://docs.harness.io/article/p9ssx4cv5t-sample-queries-create-users-user-groups-and-assign-permissions#create_a_user_group">Create
    a User Group</a></li><li><a href="https://docs.harness.io/article/p9ssx4cv5t-sample-queries-create-users-user-groups-and-assign-permissions#assign_permissions">Assign
    Permissions</a></li><li><a href="#querying_users">Querying Users</a></li></ul><h3
    id="undefined">Before You Begin</h3><ul><li><a href="/article/tm0w6rruqv-harness-api">​Introduction
    to Harness GraphQL API</a></li><li><a href="/article/2rmd5i0e0h-harness-api-explorer">Harness
    API Explorer</a></li><li><a href="/article/kn8wsu80n4-api-schema-and-structure">API
    Schema and Structure</a></li></ul><h3>Create a User</h3><p>This sample shows how
    to create a user in your Harness account, and assigns the user to up to five Harness
    User Groups.</p><p>See <a href="/article/tm0w6rruqv-harness-api#use_client_mutation_id_optional">clientMutationId</a>
    and <a href="/article/iuswbbvwnm-use-api-to-retrieve-i-ds-by-name#fetch_user_group_id_by_name">userGroupId</a>.<br/></p><p></p><p></p><pre
    class="hljs apache">mutation createUser($user: CreateUserInput!) {<br/>  createUser(input:
    $user) {<br/>    user {<br/>      id<br/>      email<br/>      name<br/>      userGroups(limit:
    5) {<br/>        nodes {<br/>          id<br/>          name<br/>        }<br/>      }<br/>    }<br/>    clientMutationId<br/>  }<br/>}</pre><h4
    id="sample_query_variables_for_create_application">Sample Query Variables for
    Create User</h4><p>Values are required for the <code>email</code>, <code>name</code>,
    and <code>userGroupIds</code> variables.</p><pre>{<br/>  &#34;user&#34;: {<br/>    &#34;name&#34;:
    &#34;Joyce Silva&#34;,<br/>    &#34;email&#34;: &#34;jsilva@example.com&#34;,<br/>    &#34;clientMutationId&#34;:
    &#34;ssdsdsecved&#34;,<br/>    &#34;userGroupIds&#34;: [&#34;7mejLPDtRvOCF8K3roIEVg&#34;]<br/>  }<br/>}</pre><h3>Delete
    a User</h3><p>Update:</p><pre>mutation ($input: DeleteUserInput!) {<br/>  deleteUser(input:
    $input) {<br/>    clientMutationId<br/>  }<br/>}</pre><p>Variables, where you
    supply a user ID, such as <code>Gh4P71mhQkCydNbKtUIiJg</code>:</p><pre>query variables:<br/>{<br/>  &#34;input&#34;:
    {<br/>    &#34;id&#34;: &#34;&lt;user_ID&gt;&#34;<br/>  }<br/>}</pre><h3>Create
    a User Group</h3><p>This sample shows how to create a User Group in your Harness
    account, and (optionally) assign users to the new group.</p><pre class="hljs apache">mutation($userGroup:
    CreateUserGroupInput!){<br/>  createUserGroup (input:$userGroup) {<br/>    userGroup
    {<br/>      id<br/>      name<br/>      description<br/>      isSSOLinked<br/>      importedByScim<br/>      users(limit:
    190, offset: 0) {<br/>        pageInfo {<br/>          total<br/>        }<br/>        nodes
    {<br/>          name<br/>          email<br/>        }<br/>      }<br/>      notificationSettings
    {<br/>        sendNotificationToMembers<br/>        sendMailToNewMembers<br/>        slackNotificationSetting
    {<br/>          slackChannelName<br/>          slackWebhookURL<br/>        }<br/>        groupEmailAddresses<br/>      }<br/>    }<br/>  }<br/>}</pre><p></p><h4
    id="sample_query_variables_for_create_application">Sample Query Variables for
    Create Group</h4><p>The <code>name</code> variable requires a value, which must
    be unique in your Harness account.</p><pre class="hljs json">{<br/>  &#34;userGroup&#34;:
    {<br/>    &#34;name&#34; : &#34;Notification&#34;,<br/>    &#34;userIds&#34;:
    [&#34;SArz5MsSS8y2PNbwhc8INw&#34;,&#34;W_zq_nwvTCm50wX3cI6Nhw&#34;,&#34;Pbx8egtqTMCClUGNg00PTw&#34;]<br/>  }<br/>}</pre><h3>Assign
    Permissions</h3><p>This sample shows how to assign permissions to Harness User
    Groups.</p><pre class="hljs apache">mutation($userGroup: UpdateUserGroupPermissionsInput!){<br/>  updateUserGroupPermissions
    (input:$userGroup) {<br/>      permissions {<br/>        accountPermissions{<br/>          accountPermissionTypes<br/>        }<br/>        appPermissions
    {<br/>          permissionType<br/>          applications {<br/>            filterType<br/>            appIds<br/>          }<br/>          services
    {<br/>            filterType<br/>            serviceIds<br/>          }<br/>          environments
    {<br/>            filterTypes<br/>            envIds<br/>          }<br/>          workflows
    {<br/>            filterTypes<br/>            envIds<br/>          }<br/>          deployments
    {<br/>            filterTypes<br/>            envIds<br/>          }<br/>          pipelines
    {<br/>            filterTypes<br/>            envIds<br/>          }<br/>          provisioners
    {<br/>            filterType<br/>            provisionerIds<br/>          }<br/>          actions<br/>        }<br/>      }<br/>    }<br/>  }</pre><h4>Sample
    Query Variables for Assign Permissions</h4><p>A value is required for the <code>userGroupId</code>
    variable.    </p><pre>{<br/>  &#34;userGroup&#34;: {<br/>    &#34;userGroupId&#34;:
    &#34;KYppi5LjSdCYH8DLT34exA&#34;,<br/>    &#34;permissions&#34;: {<br/>      &#34;accountPermissions&#34;:
    {<br/>       &#34;accountPermissionTypes&#34;:  [&#34;READ_USERS_AND_GROUPS&#34;,&#34;MANAGE_USERS_AND_GROUPS&#34;,&#34;MANAGE_TAGS&#34;,&#34;ADMINISTER_OTHER_ACCOUNT_FUNCTIONS&#34;,&#34;MANAGE_TEMPLATE_LIBRARY&#34;,&#34;VIEW_AUDITS&#34;]<br/>      },<br/>      &#34;appPermissions&#34;:
    [<br/>        {<br/>          &#34;permissionType&#34;: &#34;ALL&#34;,<br/>          &#34;applications&#34;:
    {<br/>            &#34;appIds&#34;: [&#34;A0M4nZJJTQekFfp4lX71Zw&#34;,&#34;g7sJZKmMRd-oHWdjsjF0ZQ&#34;]<br/>          },<br/>          &#34;actions&#34;:
    [&#34;CREATE&#34;,&#34;DELETE&#34;,&#34;READ&#34;,&#34;UPDATE&#34;]<br/>        },<br/>        {<br/>          &#34;permissionType&#34;:
    &#34;SERVICE&#34;,<br/>          &#34;applications&#34;: {<br/>            &#34;filterType&#34;:
    &#34;ALL&#34;<br/>          },<br/>          &#34;services&#34;: {<br/>            &#34;filterType&#34;:
    &#34;ALL&#34;<br/>          },<br/>          &#34;actions&#34;: [&#34;CREATE&#34;,&#34;DELETE&#34;,&#34;READ&#34;,&#34;UPDATE&#34;]<br/>        },<br/>        {<br/>          &#34;permissionType&#34;:
    &#34;ENV&#34;,<br/>          &#34;applications&#34;: {<br/>            &#34;appIds&#34;:
    [&#34;A0M4nZJJTQekFfp4lX71Zw&#34;,&#34;g7sJZKmMRd-oHWdjsjF0ZQ&#34;]<br/>          },<br/>          &#34;environments&#34;:
    {<br/>            &#34;envIds&#34;:  [&#34;hRCUcsHmSPaHA7LXKzosAw&#34;,&#34;m7d7Kg2TQlKrrlbcnPUY5A&#34;]<br/>          },<br/>          &#34;actions&#34;:
    [&#34;READ&#34;,&#34;UPDATE&#34;]<br/>        }<br/>      ]<br/>    }<br/>  }<br/>}</pre><p></p><p>The
    JSON in the above example sets three sets of permissions:</p><ul><li>Enables the
    User Group&#39;s members to perform all four CRUD operations on two Applications,
    specified by <code>appId</code>s:</li></ul><pre class="hljs json">{<br/>  &#34;permissionType&#34;:
    &#34;ALL&#34;,<br/>  &#34;applications&#34;: {<br/>    &#34;appIds&#34;: [<br/>      &#34;A0M4nZJJTQekFfp4lX71Zw&#34;,<br/>      &#34;g7sJZKmMRd-oHWdjsjF0ZQ&#34;<br/>    ]<br/>  },<br/>  &#34;actions&#34;:
    [&#34;CREATE&#34;, &#34;DELETE&#34;, &#34;READ&#34;, &#34;UPDATE&#34;]<br/>}</pre><p></p><ul><li>Grants
    permission to perform all CRUD operations on all Services, across all Applications:</li></ul><pre
    class="hljs json"> {<br/>  &#34;permissionType&#34;: &#34;SERVICE&#34;,<br/>  &#34;applications&#34;:
    {<br/>    &#34;filterType&#34;: &#34;ALL&#34;<br/>  },<br/>  &#34;services&#34;:
    {<br/>    &#34;filterType&#34;: &#34;ALL&#34;<br/>  },<br/>  &#34;actions&#34;:
    [&#34;CREATE&#34;, &#34;DELETE&#34;, &#34;READ&#34;, &#34;UPDATE&#34;]<br/>}</pre><p></p><ul><li>Grants
    permission to perform the specified operations on the specified Environments:</li></ul><pre
    class="hljs json">{<br/>  &#34;permissionType&#34;: &#34;ENV&#34;,<br/>  &#34;applications&#34;:
    {<br/>    &#34;appIds&#34;: [<br/>      &#34;A0M4nZJJTQekFfp4lX71Zw&#34;,<br/>      &#34;g7sJZKmMRd-oHWdjsjF0ZQ&#34;<br/>    ]<br/>  },<br/>  &#34;environments&#34;:
    {<br/>    &#34;envIds&#34;: [<br/>      &#34;hRCUcsHmSPaHA7LXKzosAw&#34;,<br/>      &#34;m7d7Kg2TQlKrrlbcnPUY5A&#34;<br/>    ]<br/>  },<br/>  &#34;actions&#34;:
    [&#34;READ&#34;,&#34;UPDATE&#34;]<br/>}</pre><h4>Notes on updateUserGroupPermissions</h4><p>Beyond
    the <code>userGroupId</code> requirement, note these usage details for the <code>updateUserGroupPermissions</code>
    operation:</p><ol><li>This API completely overwrites any permissions previously
    set for the specified User Groups.</li><li>To scope the Harness Applications on
    which you are granting permission, you should either supply specific <code>appId</code>s,
    or supply a <code>filterType</code>.</li><li>You cannot set the <code>MANAGE_USERS_AND_GROUPS</code>
    permission without first setting <code>READ_USERS_AND_GROUPS</code>.</li></ol><p>For
    information on deprecated API features with their replacements, see <a href="/article/22e87m2sjt-deprecated-apis">Deprecated
    API Features</a>.</p><h3>Querying Users</h3><p>Here is a simple way to query for
    users:</p><pre>{<br/>  users(limit: 10) {<br/>    nodes {<br/>      email<br/>      id<br/>      isEmailVerified<br/>      isImportedFromIdentityProvider<br/>      isPasswordExpired<br/>      isTwoFactorAuthenticationEnabled<br/>      isUserLocked<br/>      name<br/>      userGroups(limit:
    10) {<br/>        nodes {<br/>          id<br/>          name<br/>        }<br/>      }<br/>    }<br/>  }<br/>}</pre><p>Here
    is a simply query that shows user names and demonstrates pagination:</p><pre>{<br/>  users(limit:
    20, offset: 0) {<br/>    pageInfo {<br/>      total<br/>      limit<br/>      hasMore<br/>      offset<br/>    }<br/>    nodes
    {<br/>      name<br/>    }<br/>  }<br/>}</pre><p></p>'
  slug: sample-queries-create-users-user-groups-and-assign-permissions
  tags:
  - API
  - GraphQL API
  is_live: true
