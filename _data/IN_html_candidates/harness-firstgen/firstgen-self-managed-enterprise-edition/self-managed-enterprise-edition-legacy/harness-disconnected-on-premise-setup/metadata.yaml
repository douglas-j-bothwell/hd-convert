type: article
article_id: oycugk29oy
user_id: mfr0nxh4be
category_id: gul20j54zg
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Harness Disconnected On-Prem Setup
slug: harness-disconnected-on-premise-setup
description: Set up the demonstration version of Harness Disconnected On-Prem.
short_version: Set up the demonstration version of Harness Disconnected On-Prem.
tags:
- on-premise
- setup
- install
- load balancer
- Docker
show_toc: true
is_private: false
is_published: false
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-04-25T20:42:46.382495Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Harness Disconnected On-Prem Setup
  description: Set up the demonstration version of Harness Disconnected On-Prem.
  short_version: Set up the demonstration version of Harness Disconnected On-Prem.
  body: '<div class="note-callout">This document describes the process for setting
    up the <strong>trial version</strong> of Harness Disconnected On-Prem. For more
    information, contact Harness at <a href="https://harness.io/contact-sales" target="_blank">https://harness.io/contact-sales</a>.
    Note that Harness on-prem installations do not currently support the Harness <a
    href="/article/6n7fon8rit-using-the-helm-delegate">Helm Delegate</a>.</div><p>Harness
    Disconnected On-Prem is run entirely within your enterprise network (on-premises),
    as opposed to Harness SaaS, which is the Harness cloud offering, and Harness Connected
    On-Prem, which runs in your cloud environment.  </p><p>In this topic:</p><ul><li><a
    href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#installation_overview">Installation
    Overview</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#before_you_begin">Before
    You Begin</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#set_up_harness_disconnected_on_prem">Set
    Up Harness Disconnected On-Prem</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#upgrade_harness_disconnected_on_prem">Upgrade
    Harness Disconnected On-Prem</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#adding_a_new_license">Adding
    a New License</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#enabling_a_feature_flag">Enabling
    a Feature Flag</a></li><li><a href="#prerequisite_checks">Prerequisite Checks</a></li><li><a
    href="#trusted_certificate_requirement_for_harness_on_prem">Trusted Certificate
    Requirement for Harness On-Prem</a></li><li><a href="https://docs.harness.io/article/oycugk29oy-harness-disconnected-on-premise-setup#troubleshooting">Troubleshooting</a></li></ul><h3>Installation
    Overview</h3><p>The Harness platform is made up of 7 microservices:</p><ul><li>Harness
    Manager</li><li>Machine Learning Engine</li><li>Verification Service</li><li>MongoDB</li><li>TimescaleDB</li><li>Nginx
    Proxy</li><li>User Interface</li></ul><p>Each microservice is containerized, and
    is deployed on the physical machine where you install Harness.</p><h3>Before You
    Begin</h3><p>Setting up Harness Disconnected On-Prem requires the following:</p><ul><li>Recommended
    server specification for Harness: 16 cores, 32GB Memory, 250GB Disk.</li><li>Packages:
    Docker, cURL, sed.</li><li>Default settings on the Linux machine(s) where you
    run the installer. (For example: 0022 unmask.)</li><li>Ports 7143-7153 open on
    the VM where the installer is running.</li></ul><div class="note-callout">Harness
    Disconnected On-Prem supports Security-Enhanced Linux (SELinux).</div><h3>Set
    Up Harness Disconnected On-Prem</h3><p>The following procedure sets up Harness
    on one physical server.</p><p>To set up Harness Disconnected On-Prem, do the following:</p><ol><li>Start
    Docker. The Docker daemon must be running before you begin Harness installation.</li><li>Obtain
    the <strong>Set Up Harness Disconnected On-Prem</strong> tar file from Harness.
    It is named <strong>harness_installer_</strong><strong><em>version</em></strong><strong>.tar.gz</strong>.
    Contact Harness via the Web at <a href="https://harness.io/contact">harness.io/contact</a>.<br/>The
    tar file contains the following:<ul><li>The <strong>harness_installer</strong>
    folder.</li><li>Harness Disconnected On-Prem.</li><li>The <strong>install_harness.sh</strong>
    and <strong>stop_harness.sh</strong> scripts.</li><li>MongoDB.</li></ul></li><li>Extract
    the Set Up Harness Disconnected On-Prem tar file (<strong>tar -xvf harness_installer_version.tar.gz</strong>).
    The <strong>harness_installer</strong> folder appears.</li><li>Open a terminal
    and navigate to the <strong>harness_installer</strong> folder.</li></ol><div class="note-callout">If
    you want to run prerequisite checks, see <a href="#prerequisite_checks">Prerequisite
    Checks</a> below.</div><ol><li style="counter-increment:li 4" start="5">Open <strong>inframapping.properties</strong>
    in a text editor, and edit the <strong>HOST1_IP_ADDRESS</strong> property. Enter
    the external, public IP address of the host that will run Harness.</li><li>In
    a terminal, run <strong>setup_mongo_directories.sh</strong>. (You can pass in
    the runtime directory as an argument to set where the MongoDB directories are
    installed. Without the argument, the script defaults to the <code>$HOME</code>
    directory, and installs the new directories within <code>$HOME/harness_runtime</code>.)</li><li>In
    a terminal, navigate to the <strong>harness_installer</strong> folder and run
    <strong>install_harness.sh</strong>. (You can pass in the runtime directory as
    an argument to set where Harness is installed. Without the argument, the script
    defaults to the <code>$HOME</code> directory and Harness is installed in <code>$HOME/harness_runtime</code>.)</li><li>Upon
    successful completion, the <strong>install_harness.sh</strong> script will have
    populated the server with Harness and MongoDB. The script will output a URL, using
    the public IP address you provided in <strong>inframapping.properties</strong>.<br/><br/>Navigate
    to the displayed URL. This is the Harness Manager login URL.</li><li>Log into
    Harness using the <code>onprem-signup</code> URL. For example: <code>http://&lt;IP_address&gt;:7143/#/onprem-signup</code>.</li><li>Create
    a new account.<br/><br/>Use the form fields to set your Admin Account email address
    and password. You can use this form only once. Subsequent users must be added
    using an email invite—see <a href="/article/ven0bvulsj-users-and-permissions">Managing
    Users and Groups (RBAC)</a>.</li><li>Start setting up Harness by downloading and
    installing a Harness Delegate, as described in <a href="/article/h9tkwmkrm7-delegate-installation">Delegate Installation</a>.</li></ol><h3>Upgrade
    Harness Disconnected On-Prem</h3><div class="note-callout">Do not delete the existing
    runtime directory of Harness before upgrading. The runtime directory is used to
    upgrade.</div><p>To upgrade your Harness Disconnected On-Prem installation, do
    the following:</p><ol><li>When you receive an upgrade to Harness Disconnected
    On-Prem, extract the <strong>harness_installer_version.tar.gz</strong> file.</li><li>Open
    the <strong>harness_installer</strong> folder in a terminal.</li><li>Run the <strong>install_harness.sh</strong>
    script as sudo.<br/><br/>If you specified a runtime directory when you first installed
    Harness, ensure you use the same runtime directory as an argument when running
    <strong>install_harness.sh</strong>.<br/><br/>If no argument was provided during
    the first time installation, there is no need to pass an argument while upgrading.
    The installer will use the default runtime directory location of <code>$HOME/harness_runtime</code>
    where it was first installed.</li><li>Navigate to the URL displayed by the <strong>install_harness.sh</strong>
    script. This is the Harness Manager login.</li><li>Log in to Harness.</li></ol><div
    class="tip-callout">You do not need to download and install a new Delegate. Any
    existing Delegates will automatically upgrade.</div><h3>Adding a New License</h3><p>To
    add a new license to your Harness Disconnected On-Prem, do the following:</p><ol><li>Request
    a new license key from your Harness Sales Engineer or Customer Success contact.</li><li>In
    your Harness installation directory, open <strong>config.properties</strong>.</li><li>Replace
    the <code>licenseInfo</code> with the new license key.</li><li>Run the following:
    <code>install_harness.sh &lt;YOUR RUNTIME DIRECTORY&gt;</code></li></ol><div class="tip-callout">You
    can omit <code>&lt;YOUR RUNTIME DIRECTORY&gt;</code> if you have the runtime directory
    as <code>$HOME/harness_runtime</code>.</div><p>The command will restart Harness
    with the new license key.</p><h3>Enabling a Feature Flag</h3><p>In some cases,
    Harness will have a new feature that may only be enabled via a feature flag.</p><p>To
    turn on the feature flag for a feature, do the following:</p><ol><li>Navigate
    to the <code>$INSTALLER_DIRECTORY/config_template/manager/manager.properties</code>
    file.</li><li>Add <code>&lt;Feature_Name&gt;</code> to <code>FEATURES</code>.
    Separate multiple values using commas.</li><li>Run the Harness install again with
    the runtime directory if needed.</li></ol><h3>Prerequisite Checks</h3><p>Under
    the <strong>harness_installer</strong> folder on the On-Prem machine, find and
    run the <strong>pre_requisite_commands.sh</strong> file.</p><p>The following errors
    might appear.</p><ul><li><code>touch command execution failed please grant user
    permission to create files</code><ul><li>Resolution: The user running the script
    does not have the appropriate permissions in that directory. Give the user permission
    to access the folder.</li></ul></li><li><code>Command curl/sed not found, this
    is required for installation</code><ul><li>For Ubuntu: <code>sudo apt-get install
    curl</code></li><li>For Centos: <code>yum install curl/sed</code></li></ul></li><li><code>OS
    is NOT supported, please contact Harness support team</code><ul><li>Resolution:
    Harness only supports: RHEL, Centos, Ubuntu, Debian. Please check your OS.</li></ul></li><li><code>Docker
    daemon is not running, please start docker daemon</code><ul><li>Resolution: Run
    <code>Docker ps</code> and check the output. If not installed, <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/"
    target="_blank">install it</a>.</li><li>The user running ambassador doesn&#39;t
    has permissions to run docker commands. - Give the https://docs.docker.com/install/linux/linux-postinstall/</li></ul></li><li><code>Port
    P is being used, please make it available for installation</code><ul><li>Check
    which process is using the port P using the command: <code>netstat -tln --numeric-ports
    | grep &#34;P</code> and then make that port available.</li></ul></li><li><code>chmod
    command failed please grant user permission to execute chmod command</code><ul><li>The
    user running the script does not have permission to do <code>chmod</code>. Please
    run the script as <code>sudo</code> or give write permissions to the user running
    the script.</li></ul></li><li><code>mkdir command failed please grant user permission
    to create directory</code><ul><li>The user running the script does not have permission
    to do <code>chmod</code>. Please run the script as <code>sudo</code> or give write
    permissions to the user running the script.</li></ul></li><li><code>echo failure
    at &#34;$host&#34;:&#34;$port&#34;</code><ul><li>The VM is not able to connect
    to Harness. Please check if the proxy is configured correctly.</li></ul></li></ul><h3>Trusted
    Certificate Requirement for Harness On-Prem</h3><p>All connections to the Harness
    Manager can be secure or unencrypted according to the URL scheme you use (<code>https://</code>
    or <code>http://</code>).</p><p>For secure connections from any integration into
    the Harness Manager (Github Webhooks, etc), including the <strong>Harness Delegate</strong>,
    you must use a <u>publicly trusted certificate</u>.</p><p>Harness does not support
    self-signed certificates for connections to the Harness Manager.</p><p>For connections
    from the Harness Manager outbound to an integration, you can use a self-signed
    certificate. In this case, you must import the self-signed certificate into Harness
    Delegate&#39;s JRE keystore manually or using a Harness <a href="https://docs.harness.io/article/yd4bs0pltf-run-scripts-on-the-delegate-using-profiles">Delegate
    Profile</a>.</p><p>See <a href="/article/8bj3v5jqzk-add-self-signed-certificates-for-delegate-connections">Add
    Self-Signed Certificates for Delegate Connections</a>.</p><h3>Troubleshooting</h3><p>The
    following troubleshooting steps will help you diagnose and fix problems you might
    encounter.</p><h4>Port Errors</h4><p>The default port for Harness Disconnected
    On-Prem is 7143. Some deployment environments, such as AWS EC2, might require
    you to open inbound port 7143 manually, or even a TCP port range such as 7143
    through 7153, to enable traffic to Harness Disconnected On-Prem.</p><h4>Run Harness
    Disconnected On-Prem on Different Port</h4><p>The default port for Harness Disconnected
    On-Prem is 7143. If you would like to run Harness Disconnected On-Prem on a different
    port, do the following:</p><ol><li>Extract the <strong>harness_installer_version.tar.gz</strong>
    file (<strong>tar -xvf harness_installer_version.tar.gz</strong>).</li><li>Navigate
    to the file <strong>config_template/proxy/proxyconfig.properties</strong>.</li><li>Change
    the <strong>proxy_port=7143</strong> to the new port.</li><li>Rerun the installation.</li></ol><div
    class="note-callout">To keep using the new port after each upgrade, the steps
    above must be performed each time you upgrade.</div><h4>Docker Is Not Running
    on the Server</h4><p>The Docker daemon must be running on the server for the installation
    and running of Harness Disconnected On-Prem. For information on running the Docker
    daemon, see <a href="https://docs.docker.com/config/daemon/" target="_blank">Configure
    and troubleshoot the Docker daemon</a> from Docker.</p><h4>Add Custom Load Balancer
    in Front Proxy</h4><p>If you want to use a custom load balancer in front of the
    proxy server, do the following:</p><ol><li>Open the <strong>install_harness.sh</strong>
    script in a text editor.</li><li>Locate the string, <strong>LOAD_BALANCER_URL=http://$host1:$proxyPort</strong>.
    It is around line 200 in the <strong>setupManager()</strong> function.</li><li>Change
    the <strong>LOAD_BALANCER_URL</strong> value to the load balancer URL.</li><li>Ensure
    that the load balancer is routing requests to port <strong>7143</strong> on the
    installation machine.</li><li>Clean up the Harness runtime directory. The runtime
    directory is set in the config.properties file.</li><li>Rerun the installation.</li></ol><h4>Docker
    CE Cannot be Installed on RedHat 7.x</h4><p>If you wish to run Harness Disconnected
    On-Prem on RedHat (RHEL) 7.x, see the article <a href="https://nickjanetakis.com/blog/docker-tip-39-installing-docker-ce-on-redhat-rhel-7x"
    target="_blank">Docker Tip #39: Installing Docker CE on RedHat (RHEL) 7.x</a>.</p>'
  slug: harness-disconnected-on-premise-setup
  tags:
  - on-premise
  - setup
  - install
  - load balancer
  - Docker
  is_live: true
