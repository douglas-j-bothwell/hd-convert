type: article
article_id: 1zmz2vtdo2
user_id: mfr0nxh4be
category_id: noj782z9is
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Remove Provisioned Infra with Terragrunt Destroy
slug: remove-provisioned-infra-with-terragrunt-destroy
description: You can add a Terragrunt Destroy Workflow step to remove any provisioned
  infrastructure, just like running the terragrunt run-all destroy command.
short_version: You can add a Terragrunt Destroy Workflow step to remove any provisioned
  infrastructure, just like running the terragrunt run-all destroy command.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-11-18T19:46:36.739698Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Remove Provisioned Infra with Terragrunt Destroy
  description: You can add a Terragrunt Destroy Workflow step to remove any provisioned
    infrastructure, just like running the terragrunt run-all destroy command.
  short_version: You can add a Terragrunt Destroy Workflow step to remove any provisioned
    infrastructure, just like running the terragrunt run-all destroy command.
  body: '<p>You can add a <strong>Terragrunt</strong> <strong>Destroy</strong> Workflow
    step to remove any provisioned infrastructure, just like running the <code>terragrunt
    run-all destroy</code> command. See <a href="https://terragrunt.gruntwork.io/docs/features/execute-terraform-commands-on-multiple-modules-at-once/#the-run-all-command"
    target="_blank">destroy</a> from Terragrunt.</p><p>The Terragrunt <strong>Destroy</strong>
    step is independent of any other Terragrunt provisioning step in a Workflow. It
    is not restricted to removing the infrastructure deployed in its Workflow. It
    can remove any infrastructure you have provisioned using a Terragrunt Infrastructure
    Provisioner.</p><p>In this topic:</p><ul><li><a href="#before_you_begin">Before
    You Begin</a></li><li><a href="#review_what_gets_destroyed">Review: What Gets
    Destroyed?</a><ul><li><a href="#inherit_configurations_from_previous_terragrunt_provision_step">Inherit
    configurations from previous Terragrunt Provision step</a></li><li><a href="#specify_backend_configuration_remote_state">Specify
    Backend Configuration (Remote State)</a></li></ul></li><li><a href="#step_1_add_terragrunt_destroy_step">Step
    1: Add Terragrunt Destroy Step</a></li><li><a href="#step_2_select_provisioner_and_workspace">Step
    2: Select Provisioner and Workspace</a></li><li><a href="#option_select_delegate">Option:
    Select Delegate</a></li><li><a href="#option_inherit_configurations_from_previous_terragrunt_provision_step">Option:
    Inherit configurations from previous Terragrunt Provision Step</a></li><li><a
    href="#option_set_as_terragrunt_destroy_plan_and_export">Option: Set as Terragrunt
    Destroy Plan and Export</a><ul><li><a href="#terragrunt_plan_size_limit">Terragrunt
    Plan Size Limit</a></li><li><a href="#terragrunt_destroy_plan_output_variable">Terragrunt
    Destroy Plan Output Variable</a></li></ul></li><li><a href="#option_inherit_following_configurations_from_terragrunt_destroy_plan">Option:
    Inherit following configurations from Terragrunt Destroy Plan</a></li><li><a href="#step_3_input_values">Step
    3: Input Values</a></li><li><a href="#step_4_backend_configuration">Step 4: Backend
    Configuration</a></li><li><a href="#option_terragrunt_environment_variables">Option:
    Terragrunt Environment Variables</a></li></ul><h3>Before You Begin</h3><p>This
    topic assumes you have read the following:</p><ul><li><a href="/article/a6onutvbem-terragrunt-provisioning-with-harness">Terragrunt
    Provisioning with Harness</a></li><li><a href="/article/ulhl7sjxva-set-up-your-harness-account-for-terragrunt">Set
    Up Your Harness Account for Terragrunt</a></li><li><a href="/article/mkjxbkglih-add-terragrunt-configuration-files">Add
    Terragrunt Configuration Files</a></li><li><a href="/article/tphb27opry-map-terragrunt-infrastructure">Map
    Dynamically Provisioned Infrastructure using Terragrunt</a></li><li><a href="/article/jbzxpljhlo-provision-using-the-terragrunt-provision-step">Provision
    using the Terragrunt Provision Step</a></li><li><a href="/article/rbw96hdr1c-perform-a-terragrunt-dry-run">Perform
    a Terragrunt Dry Run</a></li></ul><h3>Review: What Gets Destroyed?</h3><p>The
    <code>terragrunt run-all destroy</code> command removes all the Terraform modules
    you specify.</p><p>When you create a Harness Terragrunt Infrastructure Provisioner
    you specify the Terragrunt config file (.hcl). That file references Terraform
    modules that Harness will use for provisioning.</p><p>When you destroy the provisioned
    infrastructure, you specify the Terragrunt Infrastructure Provisioner for Harness
    to use to locate the Terragrunt file and Terraform module.</p><p>There are two
    ways to use the Terragrunt Destroy:</p><ul><li>Destroy the infrastructure provisioned
    by the last successful use of a specific Terragrunt Infrastructure Provisioner,
    via a <strong>Terragrunt</strong> <strong>Provision</strong> step. Harness will
    use the same input values and backend configuration (Remote state) set up in the
    Terragrunt Infrastructure Provisioner.</li><li>Destroy the infrastructure by entering
    new input values and backend configuration (Remote state) for a specific Terragrunt
    Infrastructure Provisioner.</li></ul><p>Which method you use is determined by
    the <strong>Inherit configurations from previous Terragrunt Provision step</strong>
    option in the Terragrunt Destroy step.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1zmz2vtdo2/1619474760483/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>When
    the Terragrunt Provision step is executed, Harness saved the <strong>Inline Values</strong>
    and <strong>Backend Configuration</strong> values using a combination of the following:</p><ul><li><strong>Infrastructure
    Provisioner</strong> used.</li><li><strong>Environment</strong> used for the Workflow.</li><li><strong>Workspace</strong>
    used (or <code>default</code> if no workspace was specified).</li></ul><p>You
    can decide to use these by selecting the <strong>Inherit configurations from previous
    Terragrunt Provision step</strong> option or provide your own <strong>Inline Values</strong>
    and <strong>Backend Configuration</strong> values by not selecting this option.</p><h4>Inherit
    configurations from previous Terragrunt Provision step</h4><p>When you use the
    Terragrunt Destroy step, you specify the Provisioner and Workspace to use, and
    Harness gets the the <strong>Inline Values</strong> and <strong>Backend Configuration</strong>
    values from the last <strong>successful</strong> execution of that Provisioner.</p><p>When
    Terragrunt Destroy is run, it uses the same combination to identify which <strong>Inline
    Values</strong> and <strong>Backend Configuration</strong> values to use. You
    simply need to provide the Provisioner and Workspace.</p><h4>Specify Backend Configuration
    (Remote State)</h4><p>You can specify a Backend Configuration (Remote State) to
    use to identify the infrastructure to destroy.</p><p>You simply need to specify
    a Terragrunt Infrastructure Provisioner so that Harness knows where to look for
    the files.</p><p>In Terragrunt Destroy, you <em>disable</em> the <strong>Inherit
    configurations from previous Terragrunt Provision step</strong> option and then
    provide the input value and remote state settings to use.</p><h3>Step 1: Add Terragrunt
    Destroy Step</h3><p>In the <strong>Post-deployment Steps</strong> of the Workflow,
    click <strong>Add Step</strong>, and then select <strong>Terragrunt</strong> <strong>Destroy</strong>.</p><p>The
    Terragrunt Destroy settings appear.</p><h3>Step 2: Select Provisioner and Workspace</h3><p>Select
    the Terragrunt Infrastructure Provisioner and Workspace that was used to provision
    the infrastructure you want to destroy.</p><p>Typically, this is the Terragrunt
    Provisioner and Workspace used in the <strong>Pre-deployment Steps</strong>.</p><h3>Option:
    Select Delegate</h3><p>In <strong>Delegate Selector</strong>, enter the Delegate
    Selector for the Delegate that you want to execute this step. Typically, this
    is the same Selector used to select a Delegate in the <strong>Terragrunt</strong>
    <strong>Provision</strong> step.</p><p>See <a href="/article/c3fvixpgsl-select-delegates-for-specific-tasks-with-selectors">Select
    Delegates with Selectors</a>.</p><h3>Option: Inherit configurations from previous
    Terragrunt Provision Step</h3><p>As described in <a href="#review_what_gets_destroyed">Review:
    What Gets Destroyed?</a>, select this option to destroy the infrastructure provisioned
    by the last successful <strong>Terragrunt</strong> <strong>Provision</strong>
    step in the Workflow.</p><p>If you select this option, then the <strong>Input
    Values</strong> and <strong>Backend Configuration</strong> settings are disabled.</p><h3>Option:
    Set as Terragrunt Destroy Plan and Export</h3><p>Select this option to make this
    Terragrunt Destroy step a Terragrunt plan. This is useful when you want to use
    an Approval step to approve Terragrunt Destroy steps.</p><p>This is the same as
    running <code>terragrunt run-all destroy</code> in Terragrunt.</p><p>If you select
    this option, Harness generates a plan to destroy all the known resources.</p><p>Later,
    when you want to actually destroy the resources, you add another Terragrunt Destroy
    step and select the option <strong>Inherit following configurations from Terragrunt
    Destroy Plan</strong>.</p><p>The <strong>Inherit following configurations from
    Terragrunt Destroy Plan</strong> option only appears if the <strong>Set as Terragrunt
    Destroy Plan and Export</strong> option was set in the preceding Terragrunt Destroy
    step.</p><p>The Terragrunt Plan is stored in a Secrets Manager as an encrypted
    text.</p><p>See <a href="/article/uuer539u3l-add-a-secrets-manager">Add a Secrets
    Manager</a>.</p><h4>Terragrunt Plan Size Limit</h4><p>The Terragrunt Plan is stored
    in the default Harness Secrets Manager as encrypted text. This is because plans
    often contain variables that store secrets.</p><p>The Terragrunt plan size must
    not exceed the secret size limit for secrets in your default Secret Manager. AWS
    Secrets Manager has a limitation of 64KB. Other supported Secrets Managers support
    larger file size.</p><p>See <a href="/article/uuer539u3l-add-a-secrets-manager">Add
    a Secrets Manager</a>.</p><h4>Terragrunt Destroy Plan Output Variable</h4><p>If
    you select the <strong>Set as Terragrunt Destroy Plan and Export</strong> option,
    you can display the output of the plan using the variable expression <code>${terraformDestroy.tfplan}</code>.</p><p>For
    example, you can display the plan output in a <a href="/article/1fjrjbau7x-capture-shell-script-step-output">Shell
    Script</a> step.</p><p>The plan is associated with the Terraform script source
    of the Terragrunt config file in the Terragrunt Infrastructure Provisioner.</p><h3>Option:
    Inherit following configurations from Terragrunt Destroy Plan</h3><p>Select this
    option to apply the previous Terragrunt Destroy step if that step has the <strong>Set
    as Terragrunt Destroy Plan and Export</strong> option enabled.</p><p>As noted
    above in <a href="#option_set_as_terragrunt_destroy_plan_and_export">Option: Set
    as Terragrunt Destroy Plan and Export</a>, the <strong>Inherit following configurations
    from Terragrunt Destroy Plan</strong> option only appears if the <strong>Set as
    Terragrunt Destroy Plan and Export</strong> option was set in the preceding Terragrunt
    Destroy step.</p><h3>Step 3: Input Values</h3><p>Enter the input values to use
    when destroying the infrastructure.</p><p>The Terragrunt Infrastructure Provisioner
    you are using (the Terragrunt Infrastructure Provisioner you selected in the <strong>Provisioner</strong>
    setting earlier), identifies the Terraform script where the inputs are located.</p><p>See
    <strong>Input Values</strong> in <a href="/article/jbzxpljhlo-provision-using-the-terragrunt-provision-step">Provision
    using the Terragrunt Provision Step</a>.</p><h3>Step 4: Backend Configuration</h3><p>In
    <strong>Backend Configuration (Remote state)</strong>, enter values for each backend
    config (remote state variable) in the Terragrunt config.tf file or Terraform script.</p><p>See
    <strong>Backend Configuration (Remote state)</strong> in <a href="/article/jbzxpljhlo-provision-using-the-terragrunt-provision-step">Provision
    using the Terragrunt Provision Step</a>.</p><h3>Option: Terragrunt Environment
    Variables</h3><p>You can remove any Terragrunt environment variables you created
    using the Terragrunt Provision steps.</p><p>You cannot add new environment variables
    in the Terragrunt Destroy step.</p><p>If you select the <strong>Inherit configurations
    from previous Terragrunt Provision Step</strong> option, then the environment
    variables are also inherited from the environment variables set in any pervious
    Terragrunt provisioning step in the Workflow.</p><p></p><p></p>'
  slug: remove-provisioned-infra-with-terragrunt-destroy
  tags: []
  is_live: true
