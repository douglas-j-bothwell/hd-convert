type: article
article_id: rd6ghl00va
user_id: x5amubrz4l
category_id: mizega9tt6
author:
  name: Michael Katz
  profile_image: https://www.gravatar.com/avatar/17fb3fc86ca54443de0da47ef350d8f0?d=mm&s=150
title: AMI Basic Deployment
slug: ami-deployment
description: Explains how to use existing Amazon Machine Images (AMIs) and AWS Auto
  Scaling Groups (ASGs) to deploy new instances to Amazon Elastic Compute Cloud (EC2)
  via Harness.
short_version: Explains how to use existing AMIs and ASGs to deploy new instances
  and ASGs to EC2.
tags:
- AMI
- ASG
- Auto Scaling Group
- Amazon Machine Image
- ECS Delegate
- AWS
- Delegate tags
- User Data
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-01-03T18:36:29.967269Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: AMI Basic Deployment
  description: Explains how to use existing Amazon Machine Images (AMIs) and AWS Auto
    Scaling Groups (ASGs) to deploy new instances to Amazon Elastic Compute Cloud
    (EC2) via Harness.
  short_version: Explains how to use existing AMIs and ASGs to deploy new instances
    and ASGs to EC2.
  body: |-
    <p>This guide explains how to use existing Amazon Machine Images (AMIs) and AWS Auto Scaling Groups (ASGs) to deploy new ASGs and instances to Amazon Elastic Compute Cloud (EC2) via Harness. It includes the following sections:</p><ul><li><a href="#overview">Deployment Overview</a></li><li><a href="#prerequisites">Before You Begin</a></li><li><a href="#limitations">Limitations</a></li><li><a href="#delegate">Install and Run the Harness Delegate</a></li><li><a href="#cloud_provider">AWS Cloud Provider Setup</a></li><li><a href="#application">Harness Application Setup</a></li><li><a href="#service">AMI Service Setup</a></li><li><a href="#environment">Environment and Infrastructure Definition</a></li><li><a href="#basic_deploy">Basic Workflow and Deployment</a></li><li><a href="#rollback_steps">Rollback Steps</a></li><li><a href="#support_for_scheduled_scaling">Support for Scheduled Scaling</a></li><li><a href="#troubleshooting">Troubleshooting</a></li><li><a href="#next_steps">Next Steps</a></li></ul><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;overview&#34;&gt;&lt;/span&gt;"><p><span id="overview"></span></p>
    </div><h3>Deployment Overview</h3><p>For a general overview of how Harness works, see <a href="/article/4o7oqwih6h-harness-key-concepts">Harness Key Concepts</a>.</p><p>This guide will cover the following major steps:</p><ol><li>Install and run a Harness (Shell Script or ECS) Delegate.</li><li>Add an AWS Cloud Provider.</li><li>Create a Harness Application.</li><li>Create a Harness Service using the <strong>Amazon Machine Image</strong> artifact type.</li><li>Create an Environment and Infrastructure Definition.</li><li>Create a Harness Workflow for a basic deployment.</li><li>Deploy the Workflow.</li></ol><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;prerequisites&#34;&gt;&lt;/span&gt;"><p><span id="prerequisites"></span></p>
    </div><h3>Before You Begin</h3><p>For a Basic deployment, you&#39;ll need:</p><ul><li>A working AMI that Harness will use to create your instances.</li><li>A working Auto Scaling Group (ASG), as a template for the Auto Scaling Group that Harness will create.</li><li>An AWS Instance in which to install a Harness Delegate (covered in the next section).</li><li>IAM Role for the Harness Cloud Provider connection to AWS. The required policy is <strong>AmazonEC2FullAccess</strong> and it is listed in <a href="/article/whwnovprrb-infrastructure-providers#aws_ec2">AWS EC2</a>.</li></ul><div class="note-callout">If the User Data you define in Harness or your launch configurations is going to perform actions that require permissions beyond those covered by <strong>AmazonEC2FullAccess</strong>, ensure that the IAM role assigned to the Harness Delegate(s) has the required roles and policies.</div><p>We will walk you through setting up a Harness Delegate, connections to your AWS account (using the Harness AWS Cloud Provider), Harness Services, Infrastructure Definition, and Workflows.</p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;delegate&#34;&gt;&lt;/span&gt;"><p><span id="delegate"></span></p>
    </div><h3>Limitations</h3><ul><li>If your base Auto Scaling Group is configured in AWS with <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html#as-scaling-types">scaling policies</a>, Harness will apply those policies in your Workflow&#39;s <em>final</em> <strong>Upgrade AutoScaling Group</strong> step.<ul><li>Harness does <u>not</u> support copying ASG scaling policies with <strong>Metric Type</strong> value <strong>Application Load Balancer request count per target</strong>.</li></ul></li><li>Harness specifically supports AWS <u><em>target</em></u> tracking scaling policies. For details, see AWS&#39; <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html#as-scaling-types">Dynamic Scaling for Amazon EC2 Auto Scaling</a> topic.</li></ul><h3>Install and Run the Harness Delegate</h3><p>In your AWS instance, install and run either a Harness Shell Script Delegate (the simplest option) or a Harness ECS Delegate. For basic installation steps, see <a href="/article/h9tkwmkrm7-delegate-installation#ecs_delegate">Delegate Installation and Management</a>. For simplicity, Harness further recommends:</p><ul><li>Run the Delegate in the same subnet as your Auto Scaling Group, using the same security group and the same key pair.</li><li>Once the Delegate shows up in Harness Manager&#39;s <strong>Delegates</strong> page, assign it a <a href="/article/h9tkwmkrm7-delegate-installation#delegate_tags">Selector</a> (for example, <strong>AMI-Delegate</strong>). You will use this Delegate Selector when you set up the AWS Cloud Provider to assume the IAM role used by the Delegate.</li></ul><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;cloud_provider&#34;&gt;&lt;/span&gt;"><p><span id="cloud_provider"></span></p>
    </div><h3>AWS Cloud Provider Setup</h3><p>Add an AWS Cloud Provider as follows:</p><ol><li>In Harness Manager, click <strong>Setup</strong>.</li><li>Click <strong>Cloud Providers</strong>. The <strong>Cloud Providers</strong> page appears.</li><li>Click <strong>Add Cloud Provider</strong>. The <strong>Cloud Provider</strong> dialog appears. (You will override some default entries shown below.)<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559861922514/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>In <strong>Type</strong>, select <strong>Amazon Web Services</strong>.</li><li>In <strong>Display Name</strong>, enter a name for the Cloud Provider, such as <strong>aws-ami-example</strong>.</li><li>Enable the <strong>Assume IAM Role on Delegate</strong> option.</li><li>In <strong>Delegate Selector</strong>, enter the Selector that you gave your Delegate in Harness Manager&#39;s <strong>Delegates</strong> page.</li><li>Click <strong>TEST</strong> to ensure that your credentials work.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559263382874/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Click <strong>SUBMIT</strong>. The Cloud Provider is added, with a Selector matching your Delegate.</li></ol><div class="hd--md" data-hd-markdown="&lt;span id=&#34;application&#34;&gt;&lt;/span&gt;"><p><span id="application"></span></p>
    </div><h3>Harness Application Setup</h3><p>The following procedure creates a Harness Application for your AMI deployments.</p><p>An Application in Harness represents a logical group of one or more entities, including Services, Environments, Workflows, Pipelines, Triggers, and Infrastructure Provisioners. Applications organize all of the entities and configurations in Harness CI/CD. For more about Applications, see <a href="/article/4o7oqwih6h-harness-key-concepts">Harness Key Concepts</a>.</p><p>To create a new Application:</p><ol><li>In Harness Manager, click <strong>Setup</strong>.</li><li>In the <strong>Applications</strong> section, click <strong>Add Application</strong>. The <strong>Application</strong> dialog appears.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559865338522/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Give your Application a name, such as <strong>AMI Application</strong>.</li><li>Optionally, add a <strong>Description</strong> of this Application&#39;s purpose.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559865261200/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Click <strong>SUBMIT</strong>. The new Application is added to the <strong>Applications</strong> list.</li><li>Click your new Application&#39;s name. The Application&#39;s list of entities appears, initially empty.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/vw71c7rxhp/1561598837801/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li></ol><p>In the following sections, we will define this Application&#39;s Service, Environment, and Infrastructure Definition. We&#39;ll then define and execute deployment Workflows.</p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;service&#34;&gt;&lt;/span&gt;"><p><span id="service"></span></p>
    </div><h3>AMI Service Setup</h3><p>Different types of Harness Services are available for different deployment platforms. The AMI type includes AMI-specific settings. To add an AMI Service:</p><ol><li>In your new Application, click <strong>Services</strong>. The <strong>Services</strong> page appears.</li><li>In the <strong>Services</strong> page, click <strong>Add Service</strong>. The <strong>Add</strong> <strong>Service</strong> dialog appears—initially empty.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559865485627/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>In <strong>Name</strong>, enter a name for your Service, such as <strong>AMI Deployment Service</strong>.</li><li>In <strong>Description</strong>, (optionally) enter a description for your service.</li><li>In <strong>Deployment Type</strong>, select <strong>Amazon Machine Image</strong>. Your dialog will now look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559865418838/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Click <strong>SUBMIT</strong>. The new Service is displayed.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559884849716/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li></ol><p>Next, we will set up the Artifact Source, User Data, and Configuration options.</p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;add_artifact_sources&#34;&gt;&lt;/span&gt;"><p><span id="add_artifact_sources"></span></p>
    </div><h4>Add Artifact Sources</h4><p>A Service&#39;s Artifact Source is the AMI you want to use to create instances. In this guide, we specify our Artifact Source for deployment by AWS Region and (optionally) Tags and AmiResource Filters. To add an Artifact Source to this Service:</p><ol><li>From the <strong>Service Overview</strong> section, click <strong>Add Artifact Source</strong>, then click <strong>Amazon AMI</strong>.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885047843/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li></ol><p></p><ol><li style="counter-increment:li 1" start="2">In the resulting Artifact Source dialog, select the <strong>Cloud Provider</strong> you set up earlier under <a href="#cloud_provider">AWS Cloud Provider Setup</a>.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885131874/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Select the AWS <strong>Region</strong> where your AMI is located.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885193701/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Add any <strong>AWS Tags</strong> that you are using to identify your AMI. (For details on these key/value pairs, see Amazon&#39;s <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html">Tagging Your Amazon EC2 Resources</a> topic.)</li><li>Optionally, in the <strong>AmiResource Filters</strong> field, add AMI filters to locate the AMI resource. These are key/value pairs that identify the AMI ID.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1588828781021/image.png"/></figure></li><li>Click <strong>SUBMIT</strong> to add the Artifact Source.</li></ol><p>You can see the results of your Artifact Source settings clicking <strong>Artifact History</strong>.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559198955005/image.png"/></figure><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;user_data&#34;&gt;&lt;/span&gt;"><p><span id="user_data"></span></p>
    </div><h4>Deployment Specification (User Data)</h4><p>In the Service&#39;s <strong>Deployment Specification</strong> section, you can select the <strong>User Data</strong> link to enter configuration scripts and directives that your AWS instance will run upon launch.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559265408569/image.png"/></figure><p></p><p>The resulting <strong>User Data</strong> container corresponds to the AWS Launch Instance wizard&#39;s <strong>Advanced Details</strong> &gt; <strong>User data</strong> container.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559281150871/image.png"/></figure><h5>What Can I Add in User Data?</h5><p>You can enter the same shell scripts and cloud-init directives that AWS will accept through its own UI. For details about scripting requirements, formatting, and options, see Amazon&#39;s EC2 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html#user-data-shell-scripts">User Data and Shell Scripts</a> documentation. When Harness creates a new instance, it will apply your defined User Data.</p><h5>Permissions for Your User Data</h5><p>If your User Data is going to perform actions that require permissions beyond those covered by <strong>AmazonEC2FullAccess</strong>, ensure that the IAM role assigned to the Harness Delegate(s) has the required roles and policies.</p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;config&#34;&gt;&lt;/span&gt;"><p><span id="config"></span></p>
    </div><h4>Configuration Variables</h4><div class="note-callout"><strong>Config Variables</strong> is supported for the AMI Service, but <strong>Config Files</strong> <u>is not</u> supported.</div><p>In the Service&#39;s <strong>Configuration</strong> section, you can add Service-level variables and files. For details about the options here, see Harness&#39; <a href="https://docs.harness.io/article/eb3kfl8uls-service-configuration#configuration_variables_and_files">Configuration Variables and Files</a> topic.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559265672528/image.png"/></figure><h4>Referencing Config Variables in User Data</h4><p>You can define variables in the Service&#39;s <strong>Config Variables</strong> section and reference them in <a href="#user_data">User Data</a> scripts. Type the prefix: <code>${serviceVariable.</code> to prompt Harness to automatically display existing variables. Here is an example:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559244188226/image.png" style="max-height:35%;max-width:35%" data-hd-height="35%" data-hd-width="35%"/></figure><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;environment&#34;&gt;&lt;/span&gt;"><p><span id="environment"></span></p>
    </div><h3>Environment and Infrastructure Definition</h3><p>Once you&#39;ve defined your Application&#39;s Service, you define Environments where your Service can be deployed. In an Environment&#39;s Infrastructure Definition settings, you specify:</p><ul><li>A Harness Service—for AMI, a Service with an AMI artifact you configured.</li><li>A deployment type, such as Basic or Blue/Green.</li><li>An AWS Cloud Provider, such as the <strong>aws-ami-example</strong> provider that you added in <a href="#cloud_provider">AWS Cloud Provider Setup</a>.</li></ul><p>An Environment represents one of your deployment infrastructures—such as Dev, QA, or Production. You can deploy one or many Services to each Environment.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;create_environment&#34;&gt;&lt;/span&gt;"><p><span id="create_environment"></span></p>
    </div><h4>Create a New Harness Environment</h4><p>The following procedure creates an Environment for the AMI Service you&#39;ve configured.</p><ol><li>In your Harness Application, click <strong>Environments</strong>. The <strong>Environments</strong> page appears.</li><li>Click <strong>Add Environment</strong>. The <strong>Environment</strong> dialog appears.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885566755/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>In <strong>Name</strong>, enter a name that describes the deployment Environment—for example, <strong>AMI-Env</strong>.</li><li>Optionally, enter a <strong>Description</strong>.</li><li>In <strong>Environment Type</strong>, select <strong>Non-Production</strong>.</li><li>Click <strong>SUBMIT</strong>. In the resulting Environment Details page, you&#39;ll define your new Environment&#39;s contents.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885636324/image.png"/></figure></li></ol><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;infra_def&#34;&gt;&lt;/span&gt;"><p><span id="infra_def"></span></p>
    </div><h4>Add an Infrastructure Definition</h4><p>An <a href="/article/n39w05njjv-environment-configuration#add_an_infrastructure_definition">Infrastructure Definition</a> specifies a target infrastructure for deployments. When you create a Harness Workflow, you will pick the Infrastructure Definition you want to use as the target deployment environment.</p><p>For AMI deployments, you build your Infrastructure Definition using an AWS Auto Scaling Group. To add the Infrastructure Definition:</p><ol><li>In your Environment&#39;s <strong>Infrastructure Definition</strong> section, click <strong>Add Infrastructure Definition</strong>. The <strong>Infrastructure Definition</strong> dialog appears.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/other/1568421062421/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li><li>In <strong>Name</strong>, enter the name that will identify this Infrastructure Definition when you <a href="#basic_workflow_and_deployment">add it to a Workflow</a>.</li><li>In <strong>Cloud Provider Type</strong>, select <strong>Amazon Web Services</strong>.</li><li>In <strong>Deployment Type</strong>, select <strong>Amazon Machine Image</strong>. This expands the <strong>Infrastructure Definition</strong> dialog to look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/b7ixwux6u3/1576469880997/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li><li>For this example, accept the default <strong>Use Already Provisioned Infrastructure</strong> option.</li></ol><p></p><p></p><div class="tip-callout">(If you have configured an <a href="/article/o22jx8amxb-add-an-infra-provisioner">Infrastructure Provisioner</a> in Harness, you can use that configuration by instead selecting the <strong>Map</strong> <strong>Dynamically Provisioned Infrastructure</strong> option. For details, see our AMI <a href="/article/vw71c7rxhp-ami-blue-green#infrastructure_provisioners">CloudFormation</a> and <a href="/article/9pvvgcdbjh-terrform-provisioner#ami_and_auto_scaling_group_2">Terraform</a> examples.)</div><p></p><ol><li style="counter-increment:li 5" start="6">In <strong>Cloud Provider</strong>, select the Cloud Provider you added earlier in <a href="#cloud_provider">AWS Cloud Provider Setup</a>.</li><li>Select the <strong>Region</strong> where your Auto Scaling Group (ASG) is located.</li></ol><div class="note-callout">After you select your <strong>Cloud Provider</strong> and <strong>Region</strong>, the dialog&#39;s remaining drop-down lists take a few seconds to populate.</div><ol><li style="counter-increment:li 7" start="8">In the <strong>Auto Scaling Groups</strong> drop-down, select an existing ASG in your EC2 setup that Harness will clone as it creates a new ASG to use for the deployment.<br/>We typically call the ASG you select the <em>base ASG</em>. It is not used in the deployment. It is simply cloned in order for Harness to create a new ASG. Harness will use the existing ASG as a template, but it will not resize it all.<br/>The newly created ASG will have unique name, Min and Max instances, and Desired Capacity.</li><li><strong>Reset ASG revision numbers each time a new base ASG is selected:</strong> If you want to create a new ASG numbering series when you select a new base ASG in <strong>Auto Scaling Groups</strong>, select <strong>Reset ASG revision numbers each time a new base ASG is selected</strong>. For details on this option, see <a href="#reset_asg_rev">Reset ASG Revision Numbers</a>.</li><li>If you want to use Application Load Balancers, use <strong>Target Groups (for ALB)</strong> to select one or more <a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html" target="_blank">Target Groups</a> that will route requests to the ASG you will deploy.</li><li>If you want to use Classic Load Balancers, use <strong>Classic Load Balancers</strong> to select one or more <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/attach-load-balancer-asg.html" target="_blank">Classic Load Balancers</a> for the ASG you will deploy.</li><li>Enable <strong>Scope to Specific Services</strong>, and use the adjacent drop-down to select the Harness Service you created in <a href="#service">AMI Service Setup</a>.<br/><br/>(This scoping will make this Infrastructure Definition available whenever a Workflow, or Phase, is set up for this Service. You can also select additional Services in this field—and you can do that later, by editing the Infrastructure Definition to match newly added Services.)<br/><br/>When you are done, the dialog&#39;s <strong>Configuration</strong> section will look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/b7ixwux6u3/1576469924511/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li><li>Click <strong>Submit</strong>. The new Infrastructure Definition is added to your Harness Environment.</li></ol><div class="note-callout">Harness will register the ASGs it creates with whatever Target Groups and Classic Load Balancers you enter. If you delete the ASG that you&#39;ve specified here, Workflows using this Infrastructure Definition will fail to deploy.</div><p>This is the last required step to set up the deployment Environment in Harness. With both the Service and Environment set up, you can now proceed to <a href="#basic_deploy">creating a deployment Workflow</a>.</p><div class="note-callout">Harness specifically supports AWS <em>target</em> tracking scaling policies. For details, see AWS&#39; <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scale-based-on-demand.html#as-scaling-types">Dynamic Scaling for Amazon EC2 Auto Scaling</a> topic.</div><div class="hd--md" data-hd-markdown="&lt;span id=&#34;reset_asg_rev&#34;&gt;&lt;/span&gt;"><p><span id="reset_asg_rev"></span></p>
    </div><h4>Reset ASG Revision Numbers</h4><p>Harness enables you to use ASGs to uniquely identify and track independent releases. Each ASG might represent: </p><ul><li>A separate brand.</li><li>A separate franchisee. </li><li>A separate level of your SaaS product offering, each with its own configuration, permissions, and pricing.</li></ul><p>You achieve this independence without having to create duplicate Services or Infrastructure Definitions, by instead selecting different base ASGs when a Workflow is executed.</p><p>For example, let&#39;s say you have a Freemium and Pro version of a microservice, and you want each deployed using a separate base ASG, because each base ASG manages resources in a way targeted to each microservice.</p><p>To support this scenario, you have a single Harness Service for the microservice, a single Infrastructure Definition, and two Workflows, one for Freemium and one for Pro.</p><p>When the Freemium Workflow deploys, you want it to select the base ASG that manages resources for the Freemium microservice. Likewise for the Pro Workflow.</p><p>To accomplish this, each Workflow uses an Infrastructure Provisioner to supply the right base ASG name to the Infrastructure Definition:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1576798052486/image.png"/></figure><p></p><div class="tip-callout">For Infrastructure Provisioner details, see our AMI <a href="/article/vw71c7rxhp-ami-blue-green#infrastructure_provisioners">CloudFormation</a> and <a href="/article/9pvvgcdbjh-terrform-provisioner#ami_and_auto_scaling_group_2">Terraform</a> examples.</div><p>Since you are using the same Infrastructure Definition with multiple base ASGs, you will likely want to reset the revision numbers applied to the new ASGs that are created each time a new base ASG is used. Otherwise, the revision numbers will be applied to all new ASGs, in sequence.</p><p>You direct Harness to start a new ASG numbering series each time you select a new base ASG by enabling <strong>Reset ASG revision numbers each time a new base ASG is selected</strong>.</p><p>Deploying the new ASG with a new numbering series prevents existing, unrelated ASGs from being downscaled. Within Harness, each combination of a Service with a new base ASG creates a new <a href="/article/v3l3wqovbe-infrastructure-definitions#service_infrastructure_mapping">Service Infrastructure Mapping</a>.</p><p>If you select the <strong>Map Dynamically Provisioned Infrastructure</strong> option along with the <strong>Reset ASG revision numbers...</strong> option, Harness will automatically create a new numbering series based on the new value for the base ASG that your <a href="/article/vw71c7rxhp-ami-blue-green#infrastructure_provisioners">Infrastructure Provisioner</a> outputs in a variable expression. This is the most common option.</p><div class="note-callout">Once you <strong>Submit</strong> an Infrastructure Definition, the check box is locked. You will not be able to enable or disable this option later within the same Infrastructure Definition.</div><p>In addition, the new ASGs you create from different base ASGs should have unique names. You can achieve this by using the Infrastructure Provisioner output expression in the <strong>AWS Auto Scaling Group Setup</strong> Workflow step:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1576800971595/image.png"/></figure><p>If you select the <strong>Use Already Provisioned Infrastructure</strong> option along with the <strong>Reset ASG revision numbers...</strong> option, Harness will start a new ASG numbering series each time you manually select a new base ASG in the <strong>Auto Scaling Group</strong> drop-down.</p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;launch_config_vs_template&#34;&gt;&lt;/span&gt;"><p><span id="launch_config_vs_template"></span></p>
    </div><h4>Launch Configuration and Launch Template Support</h4><p>In Harness AMI deployments, the base ASG you select in your Infrastructure Definition (<strong>Auto Scaling Groups</strong> drop-down) is used to create the new ASG Harness deploys for the AMI&#39;s EC2 instances.</p><div class="note-callout">AWS ASGs use either a <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html" target="_blank">launch configuration</a> or a <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html" target="_blank">launch template</a> as a configuration template for its EC2 instances. Both contain information such as instance type, key pair, security groups, and block device mapping for your instances. The difference is that launch templates support versioning. AWS recommends that you use launch templates instead of launch configurations to ensure that you can use the latest features of Amazon EC2.</div><p>Here&#39;s how Harness uses the base ASG launch configuration or launch template when it creates the new ASG:</p><ul><li><strong>Launch configurations:</strong> If your base ASG uses a launch configuration, Harness uses that launch configuration when creating the new ASG. </li></ul><p></p><ul><li><strong>Launch templates:</strong> If your base ASG uses a launch template (default, latest, or specific version), Harness uses that launch template when creating the new ASG.<br/><br/>Harness creates a new Launch Template <em>version</em> when it creates the new ASG. This applies to existing base ASGs and base ASGs provisioned via Terraform or CloudFormation.</li></ul><p>For more information on launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html" target="_blank">Creating a Launch Template for an Auto Scaling Group</a> from AWS.</p><h4>Override Service Settings</h4><p>Optionally, your Environment can override Config Variables and Config Files set in <a href="#service">Services</a> that use the Environment. This enables you to maintain each Service&#39;s stored settings, but change them when using the Service with this Environment.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559330336613/image.png"/></figure><p>As an example, you might use a single Service across separate Environments for QA versus Production, and vary Service path variables depending on the Environment. For details, see <a href="/article/n39w05njjv-environment-configuration#override_a_service_configuration">Override a Service Configuration</a>.</p><div class="tip-callout">You can also overwrite Service variables at the Phase level of a multiple-Phase Workflow, such as Canary.</div><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;basic_deploy&#34;&gt;&lt;/span&gt;"><p><span id="basic_deploy"></span></p>
    </div><h3>Basic Workflow and Deployment</h3><p>This section walks you through creating an AMI Basic Workflow in Harness. By default, Harness AMI Basic Workflows have four deployment steps:</p><ol><li><a href="#basic_setup_asg">Setup AutoScaling Group</a>: Specify how many instances to launch, their resizing order, and their steady state timeout.</li><li><a href="#upgrade_asg">Deploy Service</a>: Specify the number or percentage of instances to deploy, within the ASG you&#39;ve set up.</li><li>Verify Service: Optionally, specify Verification Providers or Collaboration Providers.</li><li>Wrap Up: Optionally, specify post-deployment commands, notifications, or integrations.</li></ol><p>Harness preconfigures only the first two steps. Below, we outline those steps&#39; defaults and options, with examples of the deployment logs&#39; contents at each step.</p><p>The remaining two steps are placeholders, to which you can add integrations and commands. For details on adding <strong>Verify Service</strong> integrations, see <a href="/article/myw4h9u05l-verification-providers-list">Continuous Verification</a>.</p><div class="tip-callout">Your Workflows can use Harness&#39; built-in <code>${artifact.metadata.tag}</code> variable to refer to tagged AMIs. For example, if an AMI has an AWS tag named <code>harness</code>, you can refer to that AMI within Harness as <code>${artifact.metadata.harness}</code>. For details about this convention, see <a href="/article/9dvxcegm90-variables#variables_list">Variables and Expressions in Harness</a>. This can be useful in <a href="/article/xerirloz9a-add-a-trigger-2#add_a_trigger">triggering Workflows and Pipelines</a>.</div><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;create_a_basic_workflow&#34;&gt;&lt;/span&gt;"><p><span id="create_a_basic_workflow"></span></p>
    </div><h4>Create a Basic Workflow</h4><p>To create a Basic Workflow for AMI deployment, do the following:</p><ol><li>In your Application, click <strong>Workflows</strong>.</li><li>Click <strong>Add Workflow</strong>. The <strong>Workflow</strong> dialog appears.<br/><br/>If you are using Infrastructure Definitions, the <strong>Workflow</strong> dialog will look like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/other/1568939997260/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>In <strong>Name</strong>, enter a name for your Workflow, such as <strong>AMI Basic Workflow</strong>.</li><li>Optionally, add a <strong>Description</strong> of this Workflow&#39;s purpose.</li><li>In <strong>Workflow Type</strong>, select <strong>Basic Deployment</strong>.</li><li>Select the <strong>Environment</strong> you created for your AMI Basic deployment.</li><li>Select the <strong>Service</strong> you created for your AMI Basic deployment.</li><li>Select the Infrastructure Definition you created for your AMI Basic deployment.<br/><br/>The dialog will now look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/other/1568615565019/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Click <strong>Submit</strong>. The new Basic Workflow for AMI is preconfigured.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559885993161/image.png"/></figure></li></ol><p>Next, we will examine options for configuring the Basic deployment&#39;s first two steps.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;basic_setup_asg&#34;&gt;&lt;/span&gt;"><p><span id="basic_setup_asg"></span></p>
    </div><h4>Step 1: Setup AutoScaling Group</h4><p>In Step 1, select <strong>AWS AutoScaling Group Setup</strong> to open a dialog where you can fine-tune the Auto Scaling Group (ASG) that Harness creates for the AMI Service you are deploying.</p><p></p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1580161566610/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p></p><p>Many of the ASG&#39;s settings are mirrored from the ASG selected in the Workflow&#39;s Infrastructure Definition. (This ASG is also called the <em>base Auto Scaling Group.</em>) However, this setup dialog enables you to provide the remaining settings, using the following options:</p><p></p><table><tbody><tr><td style="width:25%"><p><strong>Field</strong></p></td><td><p><strong>Description</strong></p></td></tr><tr><td><p><strong>Auto Scaling Group Name</strong></p></td><td><p>Either enter a name for the ASG that Harness will create (e.g., <code>MyApp_MyAmiService_MyEnv.</code>), or accept the name that Harness automatically generates. Entering a custom name will make your ASG easier to identify when you add it to an Infrastructure Definition.</p></td></tr><tr><td><p><strong>Instances</strong></p></td><td><p>Select <strong>Fixed</strong> to enforce a Max, Min, and Desired number of instances.</p><p>Select <strong>Same as already running Max Instances</strong> to use scaling settings on the last ASG deployed by this Harness Workflow.</p><div class="note-callout">If this is the first deployment and you select <strong>Same as already running Max Instances</strong>, Harness uses a default of Min 0, Desired 6, and Max 10. Harness does <u>not</u> use the Min, Max, and Desired settings of the base ASG.</div></td></tr><tr><td><p><strong>Max Instances</strong></p></td><td><p>This field is displayed only if you have selected <strong>Fixed</strong> Instances above—in which case, an entry is required. Enter the maximum number of instances that the ASG collection should have at any time. This number corresponds to the AWS ASG&#39;s <strong>Max</strong> setting, and also constrains the <strong>Desired Capacity</strong>.</p></td></tr><tr><td><p><strong>Min Instances</strong></p></td><td><p>Optionally, enter the minimum number of instances that the ASG should have at any time. This number corresponds to the AWS ASG&#39;s <strong>Min</strong> setting, and can be <code>0</code>. (Field is displayed only if you have selected <strong>Fixed</strong> Instances above.)</p></td></tr><tr><td><p><strong>Desired Instances</strong></p></td><td><p>Optionally, set the target number of instances for the ASG to maintain. This number corresponds to the AWS ASG&#39;s <strong>Desired Capacity</strong> setting. (Field is displayed only if you have selected <strong>Fixed</strong> Instances above.)</p></td></tr><tr><td><p><strong>Resize Strategy</strong></p></td><td><p>Select whether to resize new ASGs upward first, or to resize old ASGs downward first. The typical production selection is <strong>Resize New First</strong>, to maintain the highest availability. The <strong>Downsize Old First</strong> option constrains usage and costs, especially during testing.</p></td></tr><tr><td><p><strong>Auto Scaling Steady State Timeout (mins)</strong></p></td><td><p>Enter how long Harness should wait for ASGs to register and reach steady state. This setting (which is internal to Harness) also defines the interval that Harness will wait before downsizing old ASGs and deregistering them from the Target Group(s).</p></td></tr></tbody></table><div class="note-callout">The <strong>Instances</strong> settings support <a href="/article/9dvxcegm90-variables">Harness variable expressions</a>, such as <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow variable expressions</a>.</div><p>Certain settings in this dialog correspond to AWS Console options, as shown here:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1580162715783/image.png"/></figure><p></p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;asg_setup_step&#34;&gt;&lt;/span&gt;"><p><span id="asg_setup_step"></span></p>
    </div><h5>Setup AutoScaling Group in Deployment</h5><p>Let&#39;s look at an example where the AWS AutoScaling Group Setup—configured as shown above—is deployed. Here is the step in the Harness Deployments page:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559882022134/image.png"/></figure><p></p><p>Here&#39;s the output, showing a successful setup:</p><pre class="hljs nohighlight">INFO   2019-06-04T19:03:16.561+0000   Starting AWS AMI Setup<br/>INFO   2019-06-04T19:03:18.121+0000   Starting AWS AMI Setup<br/>Getting base auto scaling group<br/>Getting base launch configuration<br/>Getting all Harness managed autoscaling groups<br/>Getting last deployed autoscaling group with non zero capacity<br/>Creating new launch configuration [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799]<br/>INFO   2019-06-04T19:03:19.926+0000   Creating new AutoScalingGroup [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799]<br/>Sending request to delete old auto scaling groups to executor<br/>Completed AWS AMI Setup with new autoScalingGroupName [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799]<br/>AutoScalingGroup [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__795] activity [Terminating EC2 instance: i-0d4ad1a03aee7f6dc] progress [100 percent] , statuscode [Successful]  details [{&#34;Subnet ID&#34;:&#34;subnet-3669906a&#34;,&#34;Availability Zone&#34;:&#34;us-east-1a&#34;}]<br/>AutoScalingGroup [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__795] activity [Launching a new EC2 instance: i-0d4ad1a03aee7f6dc] progress [100 percent] , statuscode [Successful]  details [{&#34;Subnet ID&#34;:&#34;subnet-3669906a&#34;,&#34;Availability Zone&#34;:&#34;us-east-1a&#34;}]</pre><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;upgrade_asg&#34;&gt;&lt;/span&gt;"><p><span id="upgrade_asg"></span></p>
    </div><h4>Step 2: Deploy Service</h4><p>In Step 2, select <strong>Upgrade AutoScaling Group</strong> to define how many instances to deploy in the Auto Scaling Group, as either a count or a percentage.</p><div class="note-callout">Every new AMI/ASG deployment creates a new ASG. The instances in ASGs used by previous deployments are downsized to a max count of 3. Additional instances are detached.</div><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1580161646708/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>This dialog provides the following options:</p><p></p><table><tbody><tr><td><p><strong>Field</strong></p></td><td><p><strong>Description</strong></p></td></tr><tr><td><p><strong>Desired Instances (cumulative)</strong></p></td><td><p>Set the number of Amazon EC2 instances that the Auto Scaling Group will attempt to deploy and maintain. This field corresponds to the ASG&#39;s <strong>Desired Capacity</strong> setting, and interacts with the adjacent <strong>Instance Unit Type</strong> field:</p><ul><li>Where <strong>Instance Unit Type</strong> is set to <strong>Count</strong>, enter the actual number of instances.</li><li>Where <strong>Instance Unit Type</strong> is set to <strong>Percent</strong>, enter a percentage of the available capacity.</li></ul><p>Either way, your setting here cannot exceed your <strong>Max Instance</strong> capacity setting—which is a count—in the Workflow&#39;s preceding <a href="#asg_setup_step">Setup AutoScaling Group</a> step.</p></td></tr><tr><td><p><strong>Instance Unit Type (Count/Percent)</strong></p></td><td><p>Set the unit of measure, as either <strong>Count</strong> or <strong>Percent</strong>.</p></td></tr></tbody></table><p></p><p>This diagram illustrates the relationship among Upgrade settings:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1580163079715/image.png"/></figure><h5>Deploy Service Step in Deployment</h5><p>Using the <strong>Upgrade AutoScaling Group</strong> configuration shown above—requesting a modest <strong>Desired Instances</strong> count of <strong>1</strong>—here is the <strong>Deploy Service</strong> step in the Harness Deployments page:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559883018585/image.png"/></figure><p>Here is partial output, showing a successful resizing and deployment:</p><pre class="hljs nohighlight">INFO   2019-06-04T19:03:23.916+0000   Starting AWS AMI Deploy<br/>Getting existing instance Ids<br/>Resizing Asgs<br/>Resizing AutoScaling Group: [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799] to [1]<br/>Set AutoScaling Group: [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799] desired capacity to [1]<br/>Successfully set desired capacity<br/>INFO   2019-06-04T19:03:55.916+0000   AutoScalingGroup [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799] activity [Launching a new EC2 instance: i-0dca2187fac9b6e0f] progress [30 percent] , statuscode [PreInService]  details [{&#34;Subnet ID&#34;:&#34;subnet-3669906a&#34;,&#34;Availability Zone&#34;:&#34;us-east-1a&#34;}]<br/>Waiting for instances to be in running state. pending=1<br/>INFO   2019-06-04T19:04:10.530+0000   AutoScalingGroup [Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799] activity [Launching a new EC2 instance: i-0dca2187fac9b6e0f] progress [30 percent] , statuscode [PreInService]  details [{&#34;Subnet ID&#34;:&#34;subnet-3669906a&#34;,&#34;Availability Zone&#34;:&#34;us-east-1a&#34;}]<br/>AutoScaling group reached steady state<br/>Setting min capacity of Asg[Harness__Verification_AMI__Service__test__Quality__Assurance__Setup_Virginia__799] to [1]<br/>[...]<br/>AutoScaling group reached steady state<br/>INFO   2019-06-04T19:06:13.937+0000   AutoScaling Group resize operation completed with status:[SUCCESS]</pre><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;deployment_basic&#34;&gt;&lt;/span&gt;"><p><span id="deployment_basic"></span></p>
    </div><h4>Basic Workflow Deployment</h4><p>Now that the setup is complete, you can click <strong>Deploy</strong> in the Workflow to deploy the artifact to your Auto Scaling Group.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/other/1551916036419/image.png" style="max-height:25%;max-width:25%" data-hd-height="25%" data-hd-width="25%"/></figure><p>Next, select the AMI you want to deploy. (Harness populates this list from the Artifact Source settings in the AMI Service you created.) Then click <strong>SUBMIT</strong>.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559767202044/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure><p>The Workflow deploys. Note that the Deployments page displays details about the deployed instances.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/vw71c7rxhp/1562562097974/image.png"/></figure><p></p><p>To verify the completed deployment, log into your AWS Console and locate the newly deployed instance(s).</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1559771184448/image.png"/></figure><div class="hd--md" data-hd-markdown="&lt;span id=&#34;rollback_steps&#34;&gt;&lt;/span&gt;"><p><span id="rollback_steps"></span></p>
    </div><h3>Rollback Steps</h3><p>When you create an AMI Workflow, its <strong>Rollback Steps</strong> section automatically includes a <strong>Rollback Service</strong> step. This step will execute when Harness needs to roll back your deployment and restore the previous working version.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/vw71c7rxhp/1562655713315/image.png" style="max-height:35%;max-width:35%" data-hd-height="35%" data-hd-width="35%"/></figure><p>The configuration options available here depend on the deployment type. For general information about Rollback options, see <a href="/article/m220i1tnia-workflow-configuration#rollback_steps">Workflows</a>.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;rollback_multi_phases&#34;&gt;&lt;/span&gt;"><p><span id="rollback_multi_phases"></span></p>
    </div><h4>Multi-Service Rollback</h4><p>In an AMI Multi-Service Workflow&#39;s <strong>Rollback Service</strong> step, click <strong>Rollback AutoScaling Group</strong> to open the dialog shown below:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/rd6ghl00va/1580163171152/image.png" style="max-height:80%;max-width:80%" data-hd-height="80%" data-hd-width="80%"/></figure><p>Enable the single option here, <strong>Rollback all phases at once</strong>, if you want to simultaneously roll back all of the AMI Workflow&#39;s Phases, up to the Phase where deployment failed.</p><p>For example, if a Workflow&#39;s Phase 2 fails to deploy, both Phase 2 and Phase 1 will be rolled back simultaneously. (Harness will ignore any Phase 1 rollback strategy settings.)</p><p>If this check box is not enabled, Harness will roll back Phase 2 and then Phase 1, according to each phase&#39;s rollback strategy.</p><h4>Rollbacks and Downsizing Old ASGs</h4><p>For details on how previous ASGs are downsized and what happens during rollback, see <a href="/article/aedsdsw9cm-aws-ami-deployments-overview#how_does_harness_downsize_old_as_gs">How Does Harness Downsize Old ASGs?</a></p><h3>Support for Scheduled Scaling</h3><div class="note-callout">Currently, this feature is behind the Feature Flag <code>AMI_ASG_CONFIG_COPY</code>.</div><p>The Base ASG you provide to Harness for creating the new ASG can use <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/schedule_time.html" target="_blank">AWS Scheduled Scaling</a> (scheduled scaling with scheduled actions).</p><p>There are a few important considerations:</p><ul><li>When configuring the base ASG, the <code>ScheduledActions</code> process must be suspended so that it won’t scale the base ASG. Once Harness creates the new ASG from the base, Harness will enable the <code>ScheduledActions</code> process in the new ASG (if the base ASG had it). See <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html" target="_blank">Suspending and resuming a process for an Auto Scaling group</a> from AWS.</li><li>Harness currently supports only the UTC timezone format in scheduled actions. Time values in scheduled actions in the base ASG need to be configured in UTC.</li></ul><div class="hd--md" data-hd-markdown="&lt;span id=&#34;troubleshooting&#34;&gt;&lt;/span&gt;"><p><span id="troubleshooting"></span></p>
    </div><h3>Troubleshooting</h3><p>The following errors might occur when setting up and deploying AMIs in Harness.</p><h4>Auto Scaling Group Not Showing Up</h4><p>When you <a href="#add_a_service_infrastructure">configure</a> an <strong>Infrastructure Definition</strong>, the <strong>Infrastructure Definition</strong> dialog&#39;s <strong>Auto Scale Group</strong> drop-down will initially be empty. This is expected behavior. Simply allow a few seconds for the drop-down to populate.</p><h4>Couldn&#39;t Find Reference AutoScalingGroup</h4><p>If a Workflow&#39;s <a href="#asg_setup_step">Setup AutoScaling Group</a> step fails with a message of the following form, this indicates that at least one <strong>Infrastructure Definition</strong> in the Workflow&#39;s Environment is configured with an ASG that is not currently available on AWS:</p><p><code><small>Couldn&#39;t find reference AutoScalingGroup: [ECS__QA__Application_AMI_QA__245] in region: [us‑east-1]</small></code></p><p>To correct this:</p><ol><li>In Harness Manager, navigate to your Application&#39;s <strong>Environments</strong> details page.</li><li>Open each Infrastructure Definition used by the Workflow that failed, and navigate to the dialog&#39;s lower configuration section. Ensure that the <strong>Auto Scaling Groups</strong> field points to an ASG to which you currently have access in the AWS Console.</li><li>If this does not allow your deployment to proceed, you might also need to toggle the <strong>Host Name Convention</strong> field&#39;s entry between the <code>publicDnsName</code> and <code>privateDnsName</code> primitives. (This depends on whether the Launch Configuration that created your ASG template was configured to create a public DNS name.) For details, see AWS&#39; <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-in-vpc.html#as-vpc-ipaddress">IP Addressing in a VPC</a> topic.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/vw71c7rxhp/1562827869045/image.png" style="max-height:90%;max-width:90%" data-hd-height="90%" data-hd-width="90%"/></figure></li></ol><div class="tip-callout">Harness Manager will prevent you from simply removing a misconfigured Infrastructure Definition, if it&#39;s referenced by any of your Application&#39;s Workflows. So in some cases, you might find it easiest to create a new Infrastructure Definition, reconfigure your Workflow to use that new infrastructure, and then delete the broken Infrastructure Definition(s).</div><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;next_steps&#34;&gt;&lt;/span&gt;"><p><span id="next_steps"></span></p>
    </div><h3>Next Steps</h3><ul><li>See <a href="/article/myw4h9u05l-verification-providers-list">Continuous Verification</a> and <a href="/article/dajt54pyxd-24-7-service-guard-overview">24/7 Service Guard Overview</a> to add Verification Providers to your AMI deployment and running services.</li><li><a href="/article/vw71c7rxhp-ami-blue-green">AMI Blue/Green Deployment</a>.</li><li><a href="/article/agv5t7d156-ami-canary">AMI Canary Deployment</a>.</li></ul><p></p>
  slug: ami-deployment
  tags:
  - AMI
  - ASG
  - Auto Scaling Group
  - Amazon Machine Image
  - ECS Delegate
  - AWS
  - Delegate tags
  - User Data
  is_live: true
