type: article
article_id: jr8rhn5bk5
user_id: mfr0nxh4be
category_id: df9vj316ec
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Run an ECS Task
slug: run-an-ecs-task
description: In addition to deploying tasks as part of your standard ECS deployment
  , you can use the ECS Run Task step to run individual tasks separately as a step
  in your ECS Workflow. The ECS Run Task step is…
short_version: In addition to deploying tasks as part of your standard ECS deployment
  , you can use the ECS Run Task step to run individual tasks separately as a step
  in your ECS Workflow. The ECS Run Task step is…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:06.04064Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Run an ECS Task
  description: ""
  short_version: ""
  body: '<p>In addition to deploying tasks as part of your <a href="/article/j39azkrevm-aws-ecs-deployments">standard
    ECS deployment</a>, you can use the ECS Run Task step to run individual tasks
    separately as a step in your ECS Workflow.</p><p>The ECS Run Task step is available
    in all ECS Workflow types.</p><div class="note-callout">For more information,
    see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_run_task.html"
    target="_blank">Running tasks</a> from AWS.</div><p>An example of when you run
    a task separately is a one-time or periodic batch job that does not need to keep
    running or restart when it finishes.</p><p>In this topic:</p><ul><li> <a href="#before_you_begin">Before
    You Begin</a></li><li> <a href="#undefined">Supported Platforms and Technologies</a></li><li>
    <a href="#limitations">Limitations</a></li><li> <a href="#review_running_ecs_tasks">Review:
    Running ECS Tasks</a></li><li> <a href="#step_1_add_ecs_run_task_to_workflow">Step
    1: Add ECS Run Task to Workflow</a></li><li> <a href="#step_2_ecs_task_family_name">Step
    2: ECS Task Family Name</a></li><li> <a href="#option_1_add_inline_task_definition">Option
    1: Add Inline Task Definition</a></li><li> <a href="#option_2_add_remote_task_definition">Option
    2: Add Remote Task Definition</a></li><li> <a href="#option_3_skip_steady_state_check">Option
    3: Skip Steady State Check</a></li><li> <a href="#step_3_set_timeout">Step 3:
    Set Timeout</a></li><li> <a href="#step_4_deploy_workflow">Step 4: Deploy Workflow</a></li><li>
    <a href="#review_rollbacks">Review: Rollbacks</a></li><li><a href="#review_tags_support">Review:
    Tags Support</a></li><li> <a href="#configure_as_code">Configure As Code</a></li></ul><h3>Before
    You Begin</h3><ul><li> <a href="/article/j39azkrevm-aws-ecs-deployments">AWS ECS
    Quickstart</a></li><li> <a href="/category/df9vj316ec-ecs-deployment">ECS How-tos</a></li><li>
    <a href="/article/2eyw6epug0-deploy-multiple-containers-in-a-single-ecs-workflow">Deploy
    Multiple ECS Sidecar Containers</a></li></ul><h3 id="undefined">Supported Platforms
    and Technologies</h3><p>See <a href="/article/220d0ojx5y-supported-platforms">Supported
    Platforms and Technologies</a>.</p><h3>Limitations</h3><p>In the ECS Run Task
    Workflow step&#39;s <strong>Inline</strong> text area, you cannot enter multiple
    task definitions. You can enter multiple task definitions using the <strong>Remote</strong>
    option, described in this topic.</p><h3>Review: Running ECS Tasks</h3><p>The ECS
    Run Task step is independent of the Harness Service or Infrastructure Definition
    in the Workflow. It is the same as use the <a href="https://docs.aws.amazon.com/cli/latest/reference/ecs/run-task.html"
    target="_blank">run-task command</a> in the AWS ECS CLI.</p><p>The ECS Run Task
    step has two stages:</p><ol><li>Harness registers the task you define in the Workflow,
    and verifies the registration.</li><li>Harness triggers the task, and determines
    if it was triggered successfully.</li></ol><p>The output in the Workflow deployment
    looks something like this:</p><pre>Creating a task to fetch files from git.<br/>SuccessFully
    Downloaded files from Git!<br/>1 tasks were found in task family nginx, 1 are
    stopped and 0 are running<br/>Registering task definition with family =&gt; nginx<br/>Task
    with family name nginx is registered =&gt; arn:aws:ecs:us-east-1:1234567891011:task-definition/nginx:12<br/>Triggering
    ECS run task arn:aws:ecs:us-east-1:1234567891011:task-definition/nginx:12 in cluster
    Q-FUNCTIONAL-TESTS-DO-NOT-DELETE<br/>1 Tasks were triggered sucessfully and 0
    failures were recieved.<br/>Task =&gt; arn:aws:ecs:us-east-1:1234567891011:task/Q-FUNCTIONAL-TESTS-DO-NOT-DELETE/e04a7c7428414a69abf5bf2f801a12ce
    succeeded<br/>Skipping the steady state check as expected.</pre><p>if you are
    new to ECS task scheduling and running tasks manually, review the following topics
    from AWS:</p><ul><li> <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/scheduling_tasks.html"
    target="_blank">Scheduling Amazon ECS tasks</a></li><li> <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs_run_task.html"
    target="_blank">Running tasks</a></li><li> <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html"
    target="_blank">RunTask API</a></li></ul><h3>Step 1: Add ECS Run Task to Workflow</h3><p>This
    step assumes you have an existing Harness ECS Workflow. If you have not created
    one, see <a href="/article/j39azkrevm-aws-ecs-deployments">AWS ECS Quickstart</a>
    and <a href="/category/df9vj316ec-ecs-deployment">AWS ECS Deployments </a>how-tos.</p><ol><li>In
    your ECS Workflow, in the <strong>Set up Container</strong> section, click <strong>Add
    Step</strong>.</li><li>Select <strong>ECS Run Task</strong>.</li><li>In the ECS
    Run Task settings, enter a name.</li></ol><h3>Step 2: ECS Task Family Name</h3><ol><li>Enter
    a family name.</li></ol><p>When Harness registers the task definition, it will
    use this family name.</p><p>The first task definition that is registered into
    a particular family is given a revision of 1, and any task definitions registered
    after that are given a sequential revision number.</p><div class="note-callout">If
    the task definition you enter later uses the <code>family</code> parameter, the
    value provided in that parameter will override the family name you enter in the
    <strong>ECS Run Task</strong> step.</div><h3>Option 1: Add Inline Task Definition</h3><div
    class="note-callout">The Task Definition must follow the syntax described by AWS
    in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html"
    target="_blank">RegisterTaskDefinition</a>.</div><ol><li>In <strong>Add Task Definition</strong>,
    click <strong>Inline</strong>.</li><li>Enter the task definition.</li></ol><p>For
    example, here is a task definition from the <a href="https://github.com/aws-samples/aws-containers-task-definitions/blob/master/nginx/nginx_ec2.json"
    target="_blank">AWS sample repo</a>:</p><pre>{<br/>  &#34;requiresCompatibilities&#34;:
    [<br/>    &#34;EC2&#34;<br/>  ],<br/>  &#34;containerDefinitions&#34;: [<br/>    {<br/>      &#34;name&#34;:
    &#34;nginx&#34;,<br/>      &#34;image&#34;: &#34;nginx:latest&#34;,<br/>      &#34;memory&#34;:
    256,<br/>      &#34;cpu&#34;: 256,<br/>      &#34;essential&#34;: true,<br/>      &#34;portMappings&#34;:
    [<br/>        {<br/>          &#34;containerPort&#34;: 80,<br/>          &#34;protocol&#34;:
    &#34;tcp&#34;<br/>        }<br/>      ],<br/>      &#34;logConfiguration&#34;:
    {<br/>          &#34;logDriver&#34;: &#34;awslogs&#34;,<br/>          &#34;options&#34;:
    {<br/>              &#34;awslogs-group&#34;: &#34;awslogs-nginx-ecs&#34;,<br/>              &#34;awslogs-region&#34;:
    &#34;us-east-1&#34;,<br/>              &#34;awslogs-stream-prefix&#34;: &#34;nginx&#34;<br/>          }<br/>      }<br/>    }<br/>  ],<br/>  &#34;volumes&#34;:
    [],<br/>  &#34;networkMode&#34;: &#34;bridge&#34;,<br/>  &#34;placementConstraints&#34;:
    [],<br/>  &#34;family&#34;: &#34;nginx&#34;<br/>}</pre><p>If you have an existing
    Task Definition, you can paste it into the JSON. You can obtain the Task Definition
    from the ECS console:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/jr8rhn5bk5/1620840065870/uctu-qnn-fen-k-2-awt-dndk-3-bse-8-y-rc-35-uw-zc-0-c-nvwbhxamwyin-wre-5-fke-kd-yiw-vb-ijh-pcnx-8-vkb-za-2-aj-ip-i-7-pkmj-6-c-h-2-ian-yt-m-98-ysh-tum-7-j-ktyiv-of-6-n-tw-y-7-t-vj-ce-qnlps-pee-8-y"/></figure><p>You
    can also obtain the Task Definition using the AWS CLI ( <a href="https://docs.aws.amazon.com/cli/latest/reference/ecs/describe-task-definition.html"
    target="_blank">describe-task-definition</a>):</p><p><code>aws ecs describe-task-definition
    --task-definition ecsTaskDefinitionName</code></p><div class="note-callout">The
    task definitions support Harness <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a> and any other <a href="/article/9dvxcegm90-variables">Harness variables</a>
    available at the point when the ECS Task Run step is executed.</div><p></p><h3>Option
    2: Add Remote Task Definition</h3><div class="note-callout">The Task Definition
    must follow the syntax described by AWS in <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html"
    target="_blank">RegisterTaskDefinition</a>.</div><p></p><ol><li>In <strong>Add
    Task Definition</strong>, click <strong>Remote</strong>.</li><li>In <strong>Source
    Repository</strong>, select the Harness Source Repo Provider you added. See <a
    href="/article/ay9hlwbgwa-add-source-repo-providers">Add Source Repo Providers</a>.</li><li>In <strong>Commit
    ID</strong> , select <strong>Latest from Branch</strong> or <strong>Specific Commit
    ID</strong>.</li><li>In <strong>Branch/Commit ID</strong> (required), enter the
    branch or commit ID for the remote repo.</li><li>In <strong>File Path</strong>,
    enter the repo path to the task definition file.<br/>For example, if the repo
    you set up in your Source Repo Provider is <strong>https://github.com/aws-samples/aws-containers-task-definitions</strong>,
    and the file containing your task definition is at the path <strong>aws-samples/</strong><strong>aws-containers-task-definitions/nginx/nginx_ec2.json</strong>,
    you would enter <strong>nginx/nginx_ec2.json</strong>.</li></ol><p>When you deploy
    the Workflow, the output of the ECS Run Task step shows the git fetch:</p><pre>Fetching
    manifest files from git for Service<br/>Git connector Url: https://github.com/wings-software/quality-archive.git<br/>Branch:
    master<br/><br/>Fetching following Files :<br/>- ECS/Task_Definitions/Nginx_EC2/nginx_ec2.json<br/><br/>Successfully
    fetched following files:<br/>- ECS/Task_Definitions/Nginx_EC2/nginx_ec2.json<br/><br/>Done.</pre><div
    class="note-callout">The task definitions support Harness <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a> and any other <a href="/article/9dvxcegm90-variables">Harness variables</a>
    available at the point when the ECS Task Run step is executed.</div><h4>Multiple
    Task Definitions</h4><p>In <strong>File Path</strong>, you can enter multiple
    task definitions, separated by commas:</p><pre>ECS/Task_Definitions/Task_Definitions_EC2/nginx_ec2.json,ECS/Task_Definitions/Task_Definitions_EC2/wildfly_ec2.json</pre><h3>Option
    3: Skip Steady State Check</h3><p>If you do not select this option, Harness will
    not check to see if the task was triggered.</p><p>If you do select this option,
    Harness will poll the ECS task to see if it triggered successfully.</p><h3>Step
    3: Set Timeout</h3><p>Enter a timeout for the step. Keep in mind the nature of
    your ECS task and whether it will take a long time to run.</p><p>If you did not
    select Skip Steady State Check, and you have a brief timeout, Harness might check
    for steady state before your task is completed. This will result in a failure.</p><p>You
    cannot use Harness variable expressions in this setting. They are supported in
    Basic and Canary Workflow ECS Service Setup steps when using Replica Scheduling.</p><h3>Step
    4: Deploy Workflow</h3><p>When you deploy the Workflow, the ECS Task Run steps
    shows a successful deployment:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/jr8rhn5bk5/1602195558383/image.png"/></figure><p>Here
    is an example of the output from a deployed ECS Run Task step:</p><pre>Creating
    a task to fetch files from git.<br/>SuccessFully Downloaded files from Git!<br/>1
    tasks were found in task family nginx, 1 are stopped and 0 are running<br/>Registering
    task definition with family =&gt; nginx<br/>Task with family name nginx is registered
    =&gt; arn:aws:ecs:us-east-1:12345678910:task-definition/nginx:12<br/>Triggering
    ECS run task arn:aws:ecs:us-east-1:12345678910:task-definition/nginx:12 in cluster
    Q-FUNCTIONAL-TESTS-DO-NOT-DELETE<br/>1 Tasks were triggered sucessfully and 0
    failures were recieved.<br/>Task =&gt; arn:aws:ecs:us-east-1:12345678910:task/Q-FUNCTIONAL-TESTS-DO-NOT-DELETE/e04a7c7428414a69abf5bf2f801a12ce
    succeeded<br/>Skipping the steady state check as expected.</pre><p></p><h3>Review:
    Rollbacks</h3><p>ECS returns <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_Container.html#ECS-Type-Container-exitCode"
    target="_blank">exit codes</a> from the container. These are standard <a href="https://docs.docker.com/engine/reference/run/#exit-status"
    target="_blank">Docker exit status codes</a>. The exit code 0 means success. A
    non-zero exit code indicates failure.</p><p>Harness checks these codes as part
    of deployment to determine success of failure.</p><p>If the ECS Run Task step
    fails, Harness rolls back the Workflow according to its <a href="/article/vfp0ksdzg3-define-workflow-failure-strategy-new-template">Failure
    Strategy</a>.</p><p>Once a rollback occurs, the resources created by the ECS Run
    Task step still need to be explicitly cleaned up.</p><p>You can delete the resources
    created by adding a <a href="/article/1fjrjbau7x-capture-shell-script-step-output">Shell
    Script step</a> in <strong>Rollback Steps</strong>. For example, using the AWS
    ECS CLI <a href="https://docs.aws.amazon.com/cli/latest/reference/ecs/delete-service.html"
    target="_blank">delete-service</a> command.</p><p>If you want to execute AWS CLI
    commands, ensure that the Delegate host has the AWS CLI installed via a Delegate
    Profile. See <a href="/article/nxhlbmbgkj-common-delegate-profile-scripts">Common
    Delegate Profile Scripts</a>.</p><p>The <strong>Rollback Containers</strong> step
    in <strong>Rollback Steps</strong> only applies to the core service deployed by
    the Workflow. If a Workflow containing only an ECS Task Run step fails, the <strong>Rollback
    Containers</strong> step is skipped.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/jr8rhn5bk5/1602273175668/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Review:
    Tags Support</h3><div class="note-callout">Currently, this feature is behind a
    Feature Flag. Contact <a href="mailto:support@harness.io" target="_blank">Harness
    Support</a> to enable the feature. Harness will remove Feature Flags for Harness
    Professional and Essentials editions. Once the feature is released to a general
    audience, it&#39;s available for Trial and Community Editions.</div><p>You can
    add ECS tags to your task definition just as you would in the AWS console or CLI.</p><p>You
    can use Harness <a href="https://docs.harness.io/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a> in both keys and values.</p><p>For example:</p><pre class="hljs
    bash">...<br/>  <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;cpu&#34;</span> : <span class="hljs-string"
    style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;128&#34;</span>,<br/>  <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;memory&#34;</span> : <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;256&#34;</span>,<br/>  <span class="hljs-string"
    style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;tags&#34;</span>
    : [  {<br/>    <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;key&#34;</span>: <span class="hljs-string"
    style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;4713abcd&#34;</span>,<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;value&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;þþÿÿ&#34;</span><br/>  },<br/>  {<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;key&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;6422abcd&#34;</span>,<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;value&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;þþÿÿ&#34;</span><br/>  },<br/>  {<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;key&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;7592abcd&#34;</span>,<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;value&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;þþÿÿ&#34;</span><br/>  },<br/>  {<br/>    <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;key&#34;</span>: <span class="hljs-string" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;<span class="hljs-variable" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">${</span></span>workflow.variables<span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)"><span class="hljs-variable" style="box-sizing:inherit;color:rgb(223, 80,
    0)" data-hd-color="rgb(223, 80, 0)">.foo}</span>&#34;</span>,<br/>    <span class="hljs-string"
    style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223, 80, 0)">&#34;value&#34;</span>:
    <span class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;<span class="hljs-variable" style="box-sizing:inherit;color:rgb(223,
    80, 0)" data-hd-color="rgb(223, 80, 0)">${</span></span>workflow.variables.<span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)"><span class="hljs-variable" style="box-sizing:inherit;color:rgb(223, 80,
    0)" data-hd-color="rgb(223, 80, 0)">bar}</span>&#34;</span><br/>  }<br/>],<br/>  <span
    class="hljs-string" style="box-sizing:inherit;color:rgb(223, 80, 0)" data-hd-color="rgb(223,
    80, 0)">&#34;inferenceAccelerators&#34;</span> : [ ]<br/>}<br/>...</pre><p></p><p>When
    the ECS task definition is registered, you will see the tags in AWS.</p><p>Tags
    must meet the ECS requirements. See <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RegisterTaskDefinition.html#API_RegisterTaskDefinition_RequestSyntax">tags</a> in
    RegisterTaskDefinition from AWS.</p><h3>Configure As Code</h3><p>To see how to
    configure the settings in this topic using YAML, configure the settings in the
    UI first, and then click the YAML editor button (<span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span>).</p>'
  slug: run-an-ecs-task
  tags: []
  is_live: true
