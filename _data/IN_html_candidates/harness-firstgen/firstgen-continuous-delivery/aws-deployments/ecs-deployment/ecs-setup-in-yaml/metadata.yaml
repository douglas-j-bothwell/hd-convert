type: article
article_id: 5229btw1mq
user_id: mfr0nxh4be
category_id: df9vj316ec
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: 7 - ECS Setup in YAML
slug: ecs-setup-in-yaml
description: Learn how to set up and manage Harness ECS deployments using YAML.
short_version: Learn how to set up and manage Harness ECS deployments using YAML.
tags:
- ECS YAML
- ECS
- ECS setup
- YAML
show_toc: false
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-02-24T18:06:10.75595Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: 7 - ECS Setup in YAML
  description: Learn how to set up and manage Harness ECS deployments using YAML.
  short_version: Learn how to set up and manage Harness ECS deployments using YAML.
  body: '<p>All of the Harness configuration steps in this guide can be performed
    using code instead of the Harness user interface. You can view or edit the YAML
    for any Harness configuration by clicking the <span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span> button
    on any page.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/zmrvylwqds/1539298950463/image.png"/></figure><p>When
    you click the button, the Harness code editor appears.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/az9h2n0usr/1546990219012/image.png"/></figure><p>For
    example, here is the YAML for the Daemon Scheduler, Basic Workflow we set up in
    this guide.</p><pre class="hljs ruby">harnessApiVersion: &#39;1.0&#39;<br/>type:
    BASIC<br/>envName: stage-ecs<br/>failureStrategies:<br/>- executionScope: WORKFLOW<br/>  failureTypes:<br/>  -
    APPLICATION_ERROR<br/>  repairActionCode: ROLLBACK_WORKFLOW<br/>  retryCount:
    0<br/>notificationRules:<br/>- conditions:<br/>  - FAILED<br/>  executionScope:
    WORKFLOW<br/>  notificationGroupAsExpression: false<br/>  notificationGroups:<br/>  -
    Account Administrator<br/>phases:<br/>- type: ECS<br/>  computeProviderName: aws-ecs<br/>  daemonSet:
    false<br/>  infraMappingName: example -AWS_ECS--Amazon Web Services- aws-ecs-
    us-west-1<br/>  name: Phase 1<br/>  phaseSteps:<br/>  - type: CONTAINER_SETUP<br/>    name:
    Setup Container<br/>    steps:<br/>    - type: ECS_DAEMON_SERVICE_SETUP<br/>      name:
    ECS Daemon Service Setup<br/>    stepsInParallel: false<br/>  - type: VERIFY_SERVICE<br/>    name:
    Verify Service<br/>    stepsInParallel: false<br/>  - type: WRAP_UP<br/>    name:
    Wrap Up<br/>    stepsInParallel: false<br/>  provisionNodes: false<br/>  serviceName:
    Default_Daemon<br/>  statefulSet: false<br/>rollbackPhases:<br/>- type: ECS<br/>  computeProviderName:
    aws-ecs<br/>  daemonSet: false<br/>  infraMappingName: example -AWS_ECS--Amazon
    Web Services- aws-ecs- us-west-1<br/>  name: Rollback Phase 1<br/>  phaseNameForRollback:
    Phase 1<br/>  phaseSteps:<br/>  - type: CONTAINER_SETUP<br/>    name: Setup Container<br/>    phaseStepNameForRollback:
    Setup Container<br/>    statusForRollback: SUCCESS<br/>    steps:<br/>    - type:
    ECS_SERVICE_SETUP_ROLLBACK<br/>      name: Rollback Containers<br/>    stepsInParallel:
    false<br/>  - type: VERIFY_SERVICE<br/>    name: Verify Service<br/>    phaseStepNameForRollback:
    Deploy Containers<br/>    statusForRollback: SUCCESS<br/>    stepsInParallel:
    false<br/>  - type: WRAP_UP<br/>    name: Wrap Up<br/>    stepsInParallel: false<br/>  provisionNodes:
    false<br/>  serviceName: Default_Daemon<br/>  statefulSet: false<br/>templatized:
    false<br/></pre><p>For more information, see <a href="/article/htvzryeqjw-configuration-as-code">Configuration
    as Code</a> and <a href="/article/khbt0yhctx-harness-git-ops">Harness GitOps</a>.</p><div
    class="note-callout">The above example is a simple one. If you are using more
    steps, like a <a href="/article/uxwih21ps1-terraform-provisioner-step">Terraform
    Infrastructure Provisioner</a> step, there will be additional labels and values.</div><h3>Review:
    Do Not Use Multiple ECS Setup Steps</h3><p>The ECS Service Setup is added to a
    Harness ECS Workflow automatically when you create the Workflow.</p><p>Your Basic
    Workflow or Canary Workflow Phase should only use one ECS Setup step. If you use
    multiple ECS Setup steps, the last step overrides all previous steps, rendering
    them useless.</p>'
  slug: ecs-setup-in-yaml
  tags:
  - ECS YAML
  - ECS
  - ECS setup
  - YAML
  is_live: true
