type: article
article_id: 3ekpbmpr4e
user_id: wz6xkfcc9i
category_id: emle05cclq
author:
  name: Chakravarthy Tenneti
  profile_image: https://www.gravatar.com/avatar/790db061bb8f8fb094e4d4b19a390f3b?d=mm&s=150
title: Adding and Editing Inline Tanzu Manifest Files
slug: adding-and-editing-inline-pcf-manifest-files
description: When you create the PCF Service, the Manifests section is created and
  the default manifest.yml and vars.yml files are added.
short_version: When you create the PCF Service, the Manifests section is created and
  the default manifest.yml and vars.yml files are added.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-11-12T18:35:05.3231Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Adding and Editing Inline Tanzu Manifest Files
  description: When you create the PCF Service, the Manifests section is created and
    the default manifest.yml and vars.yml files are added.
  short_version: When you create the PCF Service, the Manifests section is created
    and the default manifest.yml and vars.yml files are added.
  body: '<div class="note-callout">Manifests provide consistency and reproducibility,
    and help automate in deploying apps. For more information about manifest files,
    see <a href="https://docs.pivotal.io/pivotalcf/2-4/devguide/deploy-apps/manifest.html"
    target="_blank">Deploying with Application Manifest</a> from Tanzu.</div><p>When
    you create the Tanzu Application Service (TAS, formerly PCF) Service in Harness,
    the <strong>Manifests</strong> section is created and the default manifest.yml
    and vars.yml files are added.</p><div class="note-callout">The use of PCF in the
    default manifest.yml and vars.yml file is because TAS was formerly PCF.</div><p>In
    this topic:</p><ul><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#before_you_begin">Before
    You Begin</a></li><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#visual_summary">Visual
    Summary</a></li><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#step_1_edit_vars_yaml_file">Step
    1: Edit vars.yaml file</a><ul><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#change_the_tas_app_name">Change
    the TAS App Name</a></li></ul></li><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#step_2_edit_manifest_yml_file">Step
    2: Edit manifest.yml file</a></li><li><a href="https://docs.harness.io/article/3ekpbmpr4e-adding-and-editing-inline-pcf-manifest-files#next_steps">Next
    Steps</a></li></ul><h3>Before You Begin</h3><ul><li>See <a href="/article/nh4afrhvkl">Connect
    to Your Target Tanzu Account</a>.</li><li>See <a href="/article/jxsna1a0mi">Add
    Container Images for Tanzu Deployments</a>.</li><li>For details on how Harness
    manages Tanzu app names, see <a href="/article/hzyz7oc5k9-tanzu-app-naming-with-harness">Tanzu
    App Naming</a>.</li></ul><p></p><h3>Visual Summary</h3><p>Here is an example showing
    how the variables in <strong>manifest.yml</strong> are given values in <strong>vars.yml</strong>:</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/other/1572044493122/image.png"/></figure><div
    class="note-callout">You can also use variables for partial values. For example,
    you can specify <code>host</code> in your vars.yml file and <code>- route: ((host)).env.com</code>
    in your manifest.yml file.</div><p>TAS Manifest deployments are a common TAS strategy.
    You can learn more about it in <a href="https://docs.pivotal.io/platform/application-service/2-7/devguide/deploy-apps/manifest.html"
    target="_blank">Deploying with App Manifests</a> from TAS.</p><p>Harness supports
    all of the typical features of TAS manifests, as described in <a href="https://docs.pivotal.io/platform/application-service/2-7/devguide/deploy-apps/manifest.html"
    target="_blank">Deploying with App Manifests</a> from TAS, but to deploy multiple
    apps, you will need to use multiple Harness Services.</p><h3>Step 1: Edit vars.yaml
    file</h3><p>This file contains the following default variables and values:</p><ul><li><code>PCF_APP_NAME:
    ${app.name}__${service.name}__${env.name}</code></li><li><code>PCF_APP_MEMORY:
    750M</code></li><li><code>INSTANCES: 1</code></li></ul><p>These are referenced
    in the manifest.yaml file.</p><h4>Change the TAS App Name</h4><p>You can change
    the TAS app name here if you do not want Harness to generate one using a concatenation
    of the Harness Application, Service, and Environment names (<code>${app.name}__${service.name}__${env.name}</code>).</p><p>You
    can add more variables in vars.yaml and override them as described in <a href="/article/mutc1hz25o-using-harness-config-variables-in-pcf-manifests">Using
    Harness Config Variables in Tanzu Manifests</a>.</p><p>For details on how Harness
    manages Tanzu app names, see <a href="/article/hzyz7oc5k9-tanzu-app-naming-with-harness">Tanzu
    App Naming</a>.</p><h3>Step 2: Edit manifest.yml file</h3><p>Define the default
    name, memory limit, and number of instances.</p><p>You can override variable values
    such as <code>((PCF_APP_NAME))</code>, <code>((APP_MEMORY))</code>, and <code>((INSTANCES))</code>
    in the <strong>vars.yml</strong> file.</p><p></p><h3>Next Steps</h3><ul><li><a
    href="/article/i5jxqsbkt7-upload-local-and-remote-pcf-resource-files">Upload Local
    and Remote Tanzu Resource Files</a></li><li><a href="/article/mutc1hz25o-using-harness-config-variables-in-pcf-manifests">Using
    Harness Config Variables in Tanzu Manifests</a></li></ul><p></p>'
  slug: adding-and-editing-inline-pcf-manifest-files
  tags: []
  is_live: true
