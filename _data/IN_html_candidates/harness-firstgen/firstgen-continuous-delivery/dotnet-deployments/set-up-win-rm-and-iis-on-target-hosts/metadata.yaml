type: article
article_id: nmgpqoa1m0
user_id: mfr0nxh4be
category_id: 3lkbch7kgn
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Set Up WinRM and IIS on Target Hosts
slug: set-up-win-rm-and-iis-on-target-hosts
description: Harness IIS (.NET) deployments require that IIS and WinRM are installed
  on your target hosts. The Harness Delegate acts like a WinRM client to the target
  Windows hosts and performs deployment operati…
short_version: Harness IIS (.NET) deployments require that IIS and WinRM are installed
  on your target hosts. The Harness Delegate acts like a WinRM client to the target
  Windows hosts and performs deployment operati…
tags: []
show_toc: true
is_private: true
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:06.160913Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Set Up WinRM and IIS on Target Hosts
  description: ""
  short_version: ""
  body: |-
    <p>Harness IIS (.NET) deployments require that IIS and WinRM are installed on your target hosts.</p>
    <p>The Harness Delegate acts like a WinRM client to the target Windows hosts and performs deployment operations.</p>
    <p>WinRM communicates over HTTP (5985)/HTTPS (5986), and is included in all recent Windows operating systems.</p>
    <p>This topic describes how to set up WinRM and IIS on your target hosts, to ensure that deployment is successful.</p>
    <div class="note-callout">For steps on connecting Harness to your target platform, see
      <a href="/article/65lg4hcsnc-connect-to-your-target-iis-platform-account">Connect to Your Target IIS (.NET) Platform Account</a>.</div>
    <p>In this topic:</p>
    <ul>
      <li>
        <a href="#before_you_begin">Before You Begin</a>
      </li>
      <li>
        <a href="#visual_summary">Visual Summary</a>
      </li>
      <li>
        <a href="#undefined">Supported Platforms and Technologies</a>
      </li>
      <li>
        <a href="#step_1_setup_win_rm_requirements_for_instances_and_network">Step 1: Setup WinRM Requirements for Instances and Network</a>
      </li>
      <li>
        <a href="#option_1_set_up_win_rm_in_azure">Option 1: Set Up WinRM in Azure</a>
      </li>
      <li>
        <a href="#option_2_set_up_win_rm_in_aws">Option 2: Set Up WinRM in AWS</a>
      </li>
      <li>
        <a href="#step_2_install_iis_and_web_server_role">Step 2: Install IIS and Web Server Role</a>
      </li>
      <li>
        <a href="#related_topics">Related Topics</a>
      </li>
      <li>
        <a href="#configure_as_code">Configure As Code</a>
      </li>
    </ul>
    <p></p>
    <h3>Before You Begin</h3>
    <ul>
      <li>
        <a href="/article/2oo63r9rwb-iis-net-quickstart">IIS (.NET) Quickstart</a>
      </li>
      <li>
        <a href="/article/4o7oqwih6h-harness-key-concepts">Harness Key Concepts</a>
      </li>
      <li>
        <a href="/article/bq9938fbk8-iis-net-deployments-overview">IIS (.NET) Deployments Overview</a>
      </li>
      <li>
        <a href="/article/65lg4hcsnc-connect-to-your-target-iis-platform-account">Connect to Your Target IIS (.NET) Platform Account</a>
      </li>
    </ul>
    <h3>Visual Summary</h3>
    <p>[embedded video, diagram, or animated gif]</p>
    <h3 id="undefined">Supported Platforms and Technologies</h3>
    <p>See 
      <a href="/article/220d0ojx5y-supported-platforms">Supported Platforms and Technologies</a>.</p>
    <h3>Step 1: Setup WinRM Requirements for Instances and Network</h3>
    <p>WinRM is a management protocol used by Windows to remotely communicate with another server, in our case, the Harness delegate. WinRM communicates over HTTP (5985)/HTTPS (5986), and is included in all recent Windows operating systems.</p>
    <p>For WinRM, you need the following networking configured:</p>
    <ul>
      <li>The VMs must listen on HTTP (5985)/HTTPS (5986)</li>
      <li>Open the VMs ports for HTTP (5985)/HTTPS (5986)</li>
      <li>Open the subnet ports for HTTP (5985)/HTTPS (5986)</li>
    </ul>
    <p>In cases where WinRM is not already set up on your Windows instances, you can set WinRM for HTTPS up using the following command:</p><pre>Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1&#39;)) </pre>
    <div class="note-callout">We recommend using this command as it configures the necessary port and firewall settings for the Windows instance.</div>
      <p><strong>HTTP only</strong> — To set up WinRM for HTTP (not HTTPS), from the command line (not PowerShell), run the following (the default HTTP port is 5985):</p><pre>winrm quickconfig<br/>winrm set winrm/config/service @{AllowUnencrypted=&#34;true&#34;}<br/>netsh advfirewall firewall add rule name=&#34;WinRM-HTTP&#34; dir=in localport=5985 protocol=TCP</pre>
      <p></p>
      <h3>Option 1: Set Up WinRM in Azure</h3>
      <p>Here is an example of the PowerShell set up of WinRM on an Azure Windows Server VM.</p><pre class="hljs bash">C:\Users\harness&gt;PowerShell.exe<br/>Windows PowerShell<br/>Copyright (C) 2016 Microsoft Corporation. All rights reserved.<br/><br/>PS C:\Users\harness&gt; Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.<br/>com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1&#39;))<br/>Self-signed SSL certificate generated; thumbprint: 4B4AAFE402B3B96EAC3C26FE0DE7332E9010B1C7<br/><br/><br/>wxf                 : http://schemas.xmlsoap.org/ws/2004/09/transfer<br/>a                   : http://schemas.xmlsoap.org/ws/2004/08/addressing<br/>w                   : http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd<br/>lang                : en-US<br/>Address             : http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous<br/>ReferenceParameters : ReferenceParameters<br/><br/>Ok.<br/><br/>PS C:\Users\harness&gt; exit<br/><br/>C:\Users\harness&gt;winrm e winrm/config/listener<br/>Listener<br/>    Address = *<br/>    Transport = HTTP<br/>    Port = 5985<br/>    Hostname<br/>    Enabled = true<br/>    URLPrefix = wsman<br/>    CertificateThumbprint<br/>    ListeningOn = 10.0.1.4, 127.0.0.1, ::1, 2001:0:9d38:90d7:1868:10ad:f5ff:fefb, fe80::5efe:10.0.1.4%9, fe80::1868:10ad:f5ff:fefb%10, fe80::915e:d4bb:bf06:9807%5<br/><br/>Listener<br/>    Address = *<br/>    Transport = HTTPS<br/>    Port = 5986<br/>    Hostname = doc<br/>    Enabled = true<br/>    URLPrefix = wsman<br/>    CertificateThumbprint = 4B4AAFE402B3B96EAC3C26FE0DE7332E9010B1C7<br/>    ListeningOn = 10.0.1.4, 127.0.0.1, ::1, 2001:0:9d38:90d7:1868:10ad:f5ff:fefb, fe80::5efe:10.0.1.4%9, fe80::1868:10ad:f5ff:fefb%10, fe80::915e:d4bb:bf06:9807%5</pre>
      <p>You can also see WinRM running in Server Manager:</p>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1540407312929/image.png"/>
      </figure>
      <p></p>
      <p>You can also test if the WinRM service is running on a local or remote computer using the Test-WSMan PowerShell command. For more information, see
        <a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.wsman.management/test-wsman?view=powershell-6" target="_blank">Test-WSMan</a> from Microsoft.</p>
      <div class="note-callout">Ensure that the ports you need for the WinRM connection are open on your network security group and VM. For more information, see
        <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal" target="_blank">How to open ports to a virtual machine with the Azure portal</a> to open the WinRM Inbound security rule.</div>
      <p><strong>Network Security Group:</strong></p>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1540505801830/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/>
      </figure>
      <p></p>
      <p></p>
      <p><strong>VM Inbound Port Rules:</strong></p>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1540506662076/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/>
      </figure>
      <p>For more information about Azure and WinRM, see the following:</p>
      <ul>
        <li>
          <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/winrm" target="_blank">Setting up WinRM access for Virtual Machines in Azure Resource Manager</a>
        </li>
        <li>
          <a href="https://azure.microsoft.com/en-us/resources/templates/201-vm-winrm-windows/" target="_blank">Deploy a Windows VM and configures WinRM https listener</a> (Azure Template)</li>
        <li>
          <a href="https://azure.microsoft.com/en-us/resources/templates/201-vm-winrm-keyvault-windows/" target="_blank">WinRM on a Windows VM</a> (Azure Template)</li>
        <li>
          <a href="https://azure.microsoft.com/en-us/resources/templates/101-key-vault-create/" target="_blank">Create a Key Vault</a> (Azure Template)</li>
        <li>
          <a href="https://docs.microsoft.com/en-us/azure/key-vault/quick-create-portal" target="_blank">Quickstart: Set and retrieve a secret from Azure Key Vault using the Azure portal</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/en-us/azure/azure-stack/user/azure-stack-kv-manage-portal" target="_blank">Manage Key Vault in Azure Stack by using the portal</a>
        </li>
        <li>
          <a href="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/connect-logon" target="_blank">How to connect and log on to an Azure virtual machine running Windows</a>
        </li>
        <li>
          <a href="http://www.hurryupandwait.io/blog/understanding-and-troubleshooting-winrm-connection-and-authentication-a-thrill-seekers-guide-to-adventure" target="_blank">Understanding and troubleshooting WinRM connection and authentication</a>
        </li>
      </ul>
      <p></p>
      <h3>Option 2: Set Up WinRM in AWS</h3>
      <p>In AWS EC2, you can enter the command as User data when creating the instance:</p><pre>&lt;powershell&gt;<br/>Invoke-Expression ((New-Object System.Net.Webclient).DownloadString(&#39;https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1&#39;)) <br/>&lt;/powershell&gt;</pre>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1542157419725/image.png"/>
      </figure>
      <p>If you launch more than one instance at a time, the user data is available to all the instances in that reservation.</p>
      <p>You can also remote into the EC2 instance, open a PowerShell session, and run the <code>Invoke-Expression</code>.</p>
      <p>To verify that WinRM is running on your Windows instance, run the command:</p><pre>winrm e winrm/config/listener</pre>
      <p>The successful output will be something like this:</p><pre>C:\Windows\system32&amp;gt;winrm e winrm/config/listener<br/>Listener<br/>    Address = *<br/>    Transport = HTTP<br/>    Port = 5985<br/>    Hostname<br/>    Enabled = true<br/>    URLPrefix = wsman<br/>    CertificateThumbprint<br/>    ListeningOn = 127.0.0.1, ....<br/><br/>Listener<br/>    Address = *<br/>    Transport = HTTPS<br/>    Port = 5986<br/>    Hostname = EC2AMAZ-Q0MO0AP<br/>    Enabled = true<br/>    URLPrefix = wsman<br/>    CertificateThumbprint = 1A1A1A1A1A1A1A1A1A1A1<br/>    ListeningOn = 127.0.0.1, ...</pre>
      <p>Here&#39;s an example:</p>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/1n0t9vo7e4/1583455764670/image.png" style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/>
      </figure>
      <p>For more information about EC2 and WinRM, see the following:</p>
      <ul>
        <li>
          <a href="https://blogs.technet.microsoft.com/jonjor/2009/01/09/winrm-windows-remote-management-troubleshooting/" target="_blank">WinRM (Windows Remote Management) Troubleshooting</a>
        </li>
        <li>
          <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-windows-user-data.html" target="_blank">Running Commands on Your Windows Instance at Launch</a>
        </li>
        <li>
          <a href="https://aws.amazon.com/premiumsupport/knowledge-center/execute-user-data-ec2/" target="_blank">How can I execute user data after the initial launch of my EC2 instance?</a>
        </li>
        <li>
          <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/connecting_to_windows_instance.html" target="_blank">Connecting to Your Windows Instance</a>
        </li>
      </ul>
      <p>If the default methods for setting up WinRM in your Windows instances is not working, try the script listed here:
        <a href="https://gist.github.com/ardeshir/e0eabf7fb7e6700b314204be686f9113" target="_blank">Configure a Windows host for remote management with Ansible</a>.</p>
      <p></p>
      <h3>Step 2: Install IIS and Web Server Role</h3>
      <p>Before deploying the IIS website (or IIS application or virtual directory) to your Windows instance, there must be an existing IIS Web Server Role on the instance. </p>
      <div class="note-callout">For steps on installation, see 
        <a href="https://docs.microsoft.com/en-us/iis/web-hosting/web-server-for-shared-hosting/installing-the-web-server-role" target="_blank">Installing the Web Server Role</a> from Microsoft.</div>
      <p>The following script will prepare your Windows instance with the necessary IIS and Web Server Role set up:</p><pre>Start /w pkgmgr /iu:IIS-WebServerRole;IIS-WebServer;IIS-CommonHttpFeatures;IIS-StaticContent;IIS-DefaultDocument;IIS-DirectoryBrowsing;IIS-HttpErrors;IIS-ApplicationDevelopment;IIS-ASPNET;IIS-NetFxExtensibility;IIS-ISAPIExtensions;IIS-ISAPIFilter;IIS-HealthAndDiagnostics;IIS-HttpLogging;IIS-LoggingLibraries;IIS-RequestMonitor;IIS-Security;IIS-RequestFiltering;IIS-HttpCompressionStatic;IIS-WebServerManagementTools;IIS-ManagementConsole;WAS-WindowsActivationService;WAS-ProcessModel;WAS-NetFxEnvironment;WAS-ConfigurationAPI</pre>
      <p>You will see IIS installed in the Server Manager.</p>
      <p></p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1540412471438/image.png"/>
      </figure>
      <p>In the IIS listing, in ROLES and FEATURES, you can see the Web Server Role:</p>
      <figure>
        <img src="https://files.helpdocs.io/kw8ldg1itf/articles/tr8ddfm4lz/1540412420998/image.png"/>
      </figure>
      <p>For more information, see
        <a href="https://docs.microsoft.com/en-us/iis/install/installing-iis-7/installing-iis-from-the-command-line" target="_blank">Installing IIS 7.0 from the Command Line</a> from Microsoft.</p>
      <p></p>
      <h3>Related Topics</h3>
      <ul>
        <li>
          <a href="/article/65lg4hcsnc-connect-to-your-target-iis-platform-account">Connect to Your Target IIS (.NET) Platform Account</a>
        </li>
        <li>
          <a href="/article/66k2mr06de-set-up-win-rm-connections-in-harness">Set Up WinRM Connections in Harness</a>
        </li>
        <li>
          <a href="/article/f583r8mwcj-add-iis-components-for-deployment">Add IIS Components for Deployment</a>
        </li>
        <li>
          <a href="/article/63s27r2kac-define-your-target-iis-infrastructure">Define Your Target IIS Infrastructure</a>
        </li>
        <li>
          <a href="/article/av6sozt3zu-create-iis-workflows">Create IIS Workflows</a>
        </li>
        <li>
          <a href="/article/8srpsjre52-create-and-deploy-an-iis-pipeline">Create and Deploy an IIS Pipeline</a>
        </li>
      </ul>
      <h3>Configure As Code</h3>
      <p>To see how to configure the settings in this topic using YAML, configure the settings in the UI first, and then click the YAML editor button (<span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span>).</p>
  slug: set-up-win-rm-and-iis-on-target-hosts
  tags: []
  is_live: true
