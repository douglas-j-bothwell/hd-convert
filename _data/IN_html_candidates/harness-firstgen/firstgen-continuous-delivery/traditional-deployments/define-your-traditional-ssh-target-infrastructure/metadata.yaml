type: article
article_id: 5qh02lv090
user_id: mfr0nxh4be
category_id: td451rmlr3
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Define Your Traditional (SSH) Target Infrastructure
slug: define-your-traditional-ssh-target-infrastructure
description: Harness Infrastructure Definitions specify the target deployment infrastructure
  for your Harness Services, and the specific infrastructure details for the deployment,
  like VPC settings. In this topic…
short_version: Harness Infrastructure Definitions specify the target deployment infrastructure
  for your Harness Services, and the specific infrastructure details for the deployment,
  like VPC settings. In this topic…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:18.361702Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Define Your Traditional (SSH) Target Infrastructure
  description: ""
  short_version: ""
  body: '<p>Harness <a href="/article/v3l3wqovbe-infrastructure-definitions">Infrastructure
    Definitions</a> specify the target deployment infrastructure for your Harness
    Services, and the specific infrastructure details for the deployment, like VPC
    settings.</p><p>In this topic, we describe how to add an Infrastructure Definition
    for your Traditional (SSH) deployment.</p><p>In this topic:</p><ul><li> <a href="#before_you_begin">Before
    You Begin</a></li><li> <a href="#review_target_host_requirements">Review: Target
    Host Requirements</a></li><li> <a href="#visual_summary">Visual Summary</a></li><li>
    <a href="#review_software_required_by_commands">Review: Software Required by Commands</a></li><li>
    <a href="#step_1_create_an_environment">Step 1: Create an Environment</a></li><li>
    <a href="#step_2_define_target_infrastructure">Step 2: Define Target Infrastructure</a></li><li>
    <a href="#option_scope_to_specific_service">Option: Scope to Specific Service</a></li><li>
    <a href="#review_ssh_key_for_connection_attributes">Review: SSH Key for Connection
    Attributes</a></li><li> <a href="#see_also">See Also</a></li><li> <a href="#configure_as_code">Configure
    As Code</a></li></ul><h3>Before You Begin</h3><ul><li> <a href="/article/mk5pjqyugc-connect-to-your-target-ssh-platform">Connect
    to Your Repos and Target SSH Platforms</a></li><li> <a href="/article/6pwni5f9el-traditional-deployments-overview">Traditional
    Deployments Overview</a></li><li> <a href="/article/4o7oqwih6h-harness-key-concepts">Harness
    Key Concepts</a></li></ul><h3>Review: Target Host Requirements</h3><p>The MaxSessions
    setting on the target host(s) must be set to a minimum of 2. This is a requirement
    for multiplexing.</p><p>If MaxSessions is set to 1, the <code>error JSchException:
    channel is not opened</code> can occur during deployment.</p><p>The <a href="https://linux.die.net/man/5/sshd_config"
    target="_blank">default for MaxSessions</a> is set in <strong>/etc/ssh/sshd_config</strong> and
    is 10.</p><p>To set MaxSessions, do the following:</p><ol><li>Edit to /etc/ssh/sshd_config
    on the target host(s).</li><li>Modify <strong>MaxSessions 1</strong> line and
    change it to <strong>MaxSessions 2</strong> or greater. The default is <strong>MaxSessions
    10</strong>.</li><li>Restart SSD service: <code>sudo service sshd restart</code></li></ol><h3>Visual
    Summary</h3><p>For example, here is an Infrastructure Definition using an AWS
    Cloud Provider, and specifies the AWS infrastructure settings for the target AWS
    VPC and host.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/5qh02lv090/1598467538811/image.png"/></figure><p>Later,
    when you create a Workflow, you will select the Service and this Infrastructure
    Definition.</p><h3>Review: Software Required by Commands</h3><p>The commands in
    the Service will be executed on your target hosts to identify in the Infrastructure
    Definition, and so any of the software used in the commands must be installed
    on the target hosts.</p><p>For example, the <strong>Port Listening</strong> command
    uses netcat (nc):</p><pre>...<br/>nc -v -z -w 5 localhost $port<br/>...</pre><p>You
    can install nc on your target hosts simply by running: <code>yum install -y nc</code></p><p>You
    can install the required software by adding an <strong>Exec</strong> command to
    the Service that installs the software.</p><h3>Step 1: Create an Environment</h3><p>Environments
    represent one or more of the deployment infrastructures where you want to deploy
    your application package files. Within an Environment, you add an Infrastructure
    Definition for each specific deployment infrastructure, using a Cloud Provider
    and the specific infrastructure details for the deployment, like VPC settings.</p><p>For
    details on creating an Environment, see  <a href="https://docs.harness.io/article/n39w05njjv-environment-configuration">Environments</a>.</p><h3>Step
    2: Define Target Infrastructure</h3><p>As an example, we will create an Infrastructure
    Definition for an AWS EC2 target infrastructure.</p><p>To add an Infrastructure
    Definition, do the following:</p><ol><li>In your Harness Application Environment,
    click <strong>Add Infrastructure Definition</strong>. The <strong>Infrastructure
    Definition</strong> dialog appears.</li><li>In <strong>Name</strong>, enter the
    name you will use when you select this Infrastructure Definition in Workflows.</li><li>In <strong>Cloud
    Provider Type</strong>, select the type of Cloud Provider that this Infrastructure
    Definition will use for connections. For example, select <strong>Amazon Web Services</strong> for
    AWS EC2 infrastructures.</li><li>In <strong>Deployment Type</strong>, select the
    deployment type for the Services that will use this Infrastructure Definition.
    For example, if you are deploying SSH type Services like JAR, WAR, etc, you would
    select <strong>Secure Shell (SSH)</strong>.</li><li>Click <strong>Use Already
    Provisioned Infrastructure</strong>. If you were using a Harness  <a href="https://docs.harness.io/article/o22jx8amxb-add-an-infra-provisioner">Infrastructure
    Provisioner</a>, you would select <strong>Map Dynamically Provisioned Infrastructure</strong>.</li><li>In <strong>Cloud
    Provider</strong>, select the Cloud Provider you set up to connect Harness to
    your deployment infrastructure.</li><li>Fill out the remaining settings. These
    settings will look different depending on the Cloud Provider you selected. For
    example, for an AWS Cloud Provider, you will see AWS-specific settings, such as <strong>Region</strong> and <strong>Auto
    Scaling Group</strong>.<br/>When you select a region, more settings appear, such
    as <strong>VPC</strong> and <strong>Tags</strong>.</li><li>Provide the settings
    for your infrastructure. For example, here are the settings for an AWS infrastructure
    that identify the target host using AWS EC2 Tags.</li></ol><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/5qh02lv090/1598479848566/image.png"/></figure><h5>Using
    Variable Expressions in Tags</h5><p><strong>Tags</strong> support <a href="/article/9dvxcegm90-variables">Harness
    variable expressions</a> from Harness Services, Environment Overrides, Workflows,
    and secrets.</p><p><strong>Tags</strong> does not support <u>file-based</u> variable
    expressions.</p><p>For example, in <strong>Tags</strong>, <code>automation:${serviceVariable.automationValue}</code>
    and <code>automation:${workflow.variables.automationValue}</code> will work, but
    <code>automation:${configFile.getAsString(&#34;automationFile&#34;)}</code> will
    <strong>not</strong> work.</p><ol><li style="counter-increment:li 8" start="9">When
    you are finished, click <strong>SUBMIT</strong>. The Infrastructure Definition
    is added.</li></ol><div class="note-callout">For AWS Infrastructure Definitions,
    you can use <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a> in the <strong>Tags</strong> setting. This allows you to parameterize
    the <strong>Tags</strong> setting, and enter or select the AWS tags to use when
    you deploy any Workflow that uses this Infrastructure Definition.</div><h3>Option:
    Scope to Specific Service</h3><p>In <strong>Scope to specific Services</strong>,
    you can select the Service(s) that you want to use this Infrastructure Definition.</p><h3>Review:
    SSH Key for Connection Attributes</h3><p>When you set up the Infrastructure Definition
    in Harness to identify the target host(s) where your file will be deployed, you
    also add <strong>Connection Attributes</strong> that use a Harness SSH Key secret.
    This key is used by the Harness Delegate to SSH into the target host.</p><p>For
    more information, see  <a href="/article/gsp4s7abgc-add-ssh-keys">Add SSH Keys</a>.</p><h3>See
    Also</h3><ul><li> <a href="/article/8zff5k2frj-create-a-basic-workflow-for-traditional-ssh-deployments">Create
    a Basic Workflow for Traditional (SSH) Deployments</a></li></ul><h3>Configure
    As Code</h3><p>To see how to configure the settings in this topic using YAML,
    configure the settings in the UI first, and then click the YAML editor button
    (<span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span>).</p>'
  slug: define-your-traditional-ssh-target-infrastructure
  tags: []
  is_live: true
