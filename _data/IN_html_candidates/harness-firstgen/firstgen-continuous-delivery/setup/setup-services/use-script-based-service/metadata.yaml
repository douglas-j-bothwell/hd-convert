type: article
article_id: 1329n00z5e
user_id: wz6xkfcc9i
category_id: u4eimxamd3
author:
  name: Chakravarthy Tenneti
  profile_image: https://www.gravatar.com/avatar/790db061bb8f8fb094e4d4b19a390f3b?d=mm&s=150
title: Use Script Based Services
slug: use-script-based-service
description: Create and add Bash and PowerShell scripts as Services using the options
  and templates available in Harness.
short_version: Create and add Bash and PowerShell scripts as Services using the options
  and templates available in Harness.
tags:
- Service
- PowerShell
- bash
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:36.366941Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Use Script Based Services
  description: Create and add Bash and PowerShell scripts as Services using the options
    and templates available in Harness.
  short_version: Create and add Bash and PowerShell scripts as Services using the
    options and templates available in Harness.
  body: '<p></p><p>You can create and add Bash and PowerShell scripts as Services.
    You can use the options and templates available in Harness to use these scripts
    in your deployment.</p><p>In this topic:</p><ul><li><a href="#before_you_begin">Before
    You Begin</a></li><li><a href="#option_1_edit_default_commands">Option 1: Edit
    Default Commands</a></li><li><a href="#option_2_use_template_library">Option 2:
    Use Template Library</a></li><li><a href="#option_3_create_a_new_command">Option
    3: Create a New Command</a></li></ul><p></p><h3>Before You Begin</h3><ul><li>Read
    the <a href="/article/bucothemly-application-configuration">Create an Application</a>
    topic to get an overview of how Harness organizes Services.</li><li>Read the <a
    href="/article/eb3kfl8uls-service-configuration">Add a Service</a> topic to understand
    the process to add a Service to an Application.</li><li>Read <a href="/article/htvzryeqjw-configuration-as-code">Configuration
    as Code</a> to see how you can quickly configure your Harness Service using your
    existing YAML in Git.</li></ul><p></p><h3>Option 1: Edit Default Commands</h3><p>When
    you create a script-based Service, Harness automatically generates the commands
    needed to install and run the application in the Artifact Source on the target
    host(s). You can edit these default commands.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1329n00z5e/1587032121471/ssh-dep-specs.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p></p><p>You
    can also add templates from the template library or add commands as shown in the
    following options.</p><h4>Moving Commands</h4><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1329n00z5e/1587116089350/move-command.gif"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p></p><p>As
    part of the Deployment Specification steps (<strong>Start</strong>, <strong>Install</strong>,
    or <strong>Stop</strong>), you can drag and move a command in the place of another
    command or before or after another command. All the other commands are moved accordingly
    and the script is updated automatically.</p><p></p><h3>Option 2: Use Template
    Library</h3><p>You can use the wealth of scripts available in the Template Library
    to rapidly develop your script. For more information, see <a href="/article/ygi6d8epse-use-templates">Use
    Templates</a>.</p><ol><li>In the <strong>Script</strong> section of <strong>Deployment
    Specification</strong>, click <strong>Add Command</strong>. The <strong>Add Command</strong>
    dialog appears.</li><li>Click <strong>From Template Library</strong>. The Template
    Library is displayed. Find the template you need.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/eb3kfl8uls/1550865144877/image.png"/></figure></li><li>Click
    <strong>Link</strong> or click the drop-down menu and choose <strong>Copy</strong>.
    You can link to a template or copy a template to your service. If you link to
    the template, when that version of the template is updated in the Template Library,
    your script is also updated. If you copy a template, there is no link to the Template
    Library. If you link to a template, you may only edit the template from the template
    dialog. You cannot edit the template in your service.</li><li>Edit the script
    if needed and click <strong>SUBMIT</strong>. The script is added to your service.<div
    class="note-callout">Every time you edit a template, you create a new version
    of it. To switch versions, click the three dots <span>⋮</span> on the script title
    bar and choose <strong>Manage Versions</strong>.</div></li><li>To edit the variables
    used in the script, click <strong>Variables</strong>. The <strong>Edit Command</strong>
    dialog opens. Edit the variables and click <strong>SUBMIT</strong>.</li></ol><p></p><h3>Option
    3: Create a New Command</h3><p>Harness provides multiple commands to manage the
    deployment of your application.</p><ol><li>In the <strong>Script</strong> section
    of <strong>Deployment Specification</strong>, click <strong>Add Command</strong>.
    The <strong>Add Command</strong> dialog appears.</li><li> Click <strong>Create
    New</strong>.</li><li>In <strong>Name</strong>, enter a name for the new command
    that describes its function.</li><li>From <strong>Command Type</strong>, select
    the function of the command, such as <strong>Start</strong>, <strong>Install</strong>,
    <strong>Disable</strong>, etc.</li><li>Click <strong>Submit</strong>. The new
    command is added under <strong>Script</strong>.</li><li>Hover over the Add button
    to see the available commands.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/gxv9gj6khz/1532640935369/scripts-options.png"/></figure></li><li>Click
    a command from the list. The dialog for the command appears. For example, here
    is the dialog for the Docker Start command.<br/>The dialog contains a default
    script relating to it type. The script is prefigured for variables for common
    application information.</li><li>From Script Type, select <strong>BASH</strong>
    or <strong>POWERSHELL</strong>.</li><li>Modify the script is needed and click
    <strong>SUBMIT</strong>. The command is added to the Script section:<figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/gxv9gj6khz/1532642468979/docker-start-added-command.png"/></figure></li><li>Repeat
    the above steps to add more commands to your script.</li></ol><h3>Run Service
    Commands in a Workflow</h3><p>One of the steps you can include in a Harness Workflow
    is a <strong>Service Command</strong> step. With the Service Command step, you
    can execute Workflow on Harness Delegate. You can use Delegate Selectors to identify
    which Harness Delegate to use.</p><p>This topic describes how to publish a Service
    Command output in a variable and use the published variable in a subsequent Workflow
    step.</p><ol><li>In a Harness Application, open a Workflow and then click <strong>Add
    Step</strong>.</li><li>Select <strong>N</strong><strong>ew Step</strong> to select
    the Service Command.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1329n00z5e/1606151079759/screenshot-2020-11-23-at-10-34-26-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure> </li><li>Click
    <strong>Submit</strong>. The step is added.</li><li>Click on the step.<figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/1329n00z5e/1606150864901/screenshot-2020-11-23-at-10-28-24-pm.png"
    style="max-height:30%;max-width:30%" data-hd-height="30%" data-hd-width="30%"/></figure></li><li>Set
    the <strong>Timeout</strong> period for your Service Command. If the command execution
    hangs beyond the timeout, Harness will fail the step.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1329n00z5e/1606151180343/screenshot-2020-11-23-at-10-29-09-pm.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure></li><li>Select <strong>Execute
    on Delegate</strong> option if you wish to execute Workflow on Harness Delegate.
    This option allow users to select Delegates on Service commands.<div class="note-callout">If
    you do not select <strong>Execute on Delegate</strong> option then the node is
    selected from the Select Node. The Select Nodes step selects the target hosts
    from the <a href="https://docs.harness.io/article/v3l3wqovbe-infrastructure-definitions">Infrastructure
    Definition</a> you defined. For more information, see <a href="/article/9h1cqaxyp9-select-nodes-workflow-step">Select
    Nodes Workflow Step</a>.</div></li><li>In <strong>Delegate Selector</strong> enter
    the Selectors of the Delegates you want to use.<br/><br/>You can use Selectors
    to select which Harness Delegates to use when executing the Service Command step.  For
    more information, see <a href="/article/c3fvixpgsl-select-delegates-for-specific-tasks-with-selectors">Select
    Delegates with Selectors</a>.<ul><li>Harness will use Delegates matching the Selectors
    you select.</li><li>If you use one Selector, Harness will use any Delegate that
    has that Selector.</li><li>If you select two Selectors, a Delegate must have both
    Selectors to be selected. That Delegate might also have other Selectors, but it
    must have the two you selected.</li><li>Selectors can be used whether <strong>Execute
    on Delegate</strong> is enabled or not. The Shell Script command honors the Selector
    and executes the SSH connection to the specified target host via the selected
    Delegate. <br/>An example where Selectors might be useful when <strong>Execute
    on Delegate</strong> is disabled: When you specify an IP address in <strong>Target
    Host</strong>, but you have 2 VPCs with the same subnet and duplicate IP numbers
    exist in both. Using Selectors, you can scope the the shell session towards the
    delegate in a specific VPC.</li><li>You can also use <a href="https://docs.harness.io/article/9dvxcegm90-variables">Harness
    variable expressions</a>. For example, if you have a Workflow variables named
    delegate, you can enter <code>$(workflow.variables.delegate)</code>. When you
    deploy the Workflow, you can provide a value for the variable that matches a Delegate
    Selector.</li></ul></li><li>Click <strong>Submit</strong>.</li></ol><p></p><p></p>'
  slug: use-script-based-service
  tags:
  - Service
  - PowerShell
  - bash
  is_live: true
