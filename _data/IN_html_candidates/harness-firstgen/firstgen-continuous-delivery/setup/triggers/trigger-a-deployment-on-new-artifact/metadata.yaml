type: article
article_id: s2m2ksxn6a
user_id: mfr0nxh4be
category_id: weyg86m5qp
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Trigger Deployments When a New Artifact is Added to a Repo
slug: trigger-a-deployment-on-new-artifact
description: You can trigger Harness Workflow and Pipeline deployments in response
  to a new artifact being added to a repository. For example, every time a new Docker
  image is uploaded to your Docker hub account,…
short_version: You can trigger Harness Workflow and Pipeline deployments in response
  to a new artifact being added to a repository. For example, every time a new Docker
  image is uploaded to your Docker hub account,…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-03-25T17:21:37.156215Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Trigger Deployments When a New Artifact is Added to a Repo
  description: ""
  short_version: ""
  body: '<p>You can trigger Harness Workflow and Pipeline deployments in response
    to a new artifact being added to a repository.</p><p>For example, every time a
    new Docker image is uploaded to your Docker hub account, it triggers a Workflow
    that deploys it automatically.</p><p>In this topic:</p><ul><li> <a href="#before_you_begin">Before
    You Begin</a></li><li> <a href="#limitations">Limitations</a></li><li> <a href="#review_artifact_server_changes_and_triggers">Review:
    Artifact Server Changes and Triggers</a></li><li> <a href="#step_1_add_a_trigger">Step
    1: Add a Trigger</a></li><li> <a href="#step_2_select_the_artifact_source_that_triggers_deployments">Step
    2: Select the Artifact Source that Triggers Deployments</a></li><li> <a href="#step_3_select_the_workflow_or_pipeline_to_deploy">Step
    3: Select the Workflow or Pipeline to Deploy</a></li><li> <a href="#step_4_provide_values_for_workflow_variables">Step
    4: Provide Values for Workflow Variables</a></li><li> <a href="#step_5_select_the_artifact_to_deploy">Step
    5: Select the Artifact to Deploy</a></li><li> <a href="#best_practices">Best Practices</a></li><li>
    <a href="#related_topics">Related Topics</a></li></ul><h3>Before You Begin</h3><ul><li>
    <a href="/article/eb3kfl8uls-service-configuration">Add a Service</a></li><li>
    <a href="/article/m220i1tnia-workflow-configuration">Workflows</a></li><li> <a
    href="/article/n39w05njjv-environment-configuration">Add Environment</a></li><li>
    <a href="/article/zc1u96u6uj-pipeline-configuration">Create a Pipeline</a></li><li>
    <a href="/article/7dghbx1dbl-configuring-artifact-server">Add Artifact Servers</a></li></ul><h3>Limitations</h3><h4>One
    Artifact Triggers Deployment</h4><p>If more than one artifact is collected during
    the polling interval (two minutes), only one deployment will be started and will
    use the last artifact collected.</p><h4>All Artifacts Trigger Deployment</h4><p></p><div
    class="note-callout">Currently, this feature is behind the feature flag <code>TRIGGER_FOR_ALL_ARTIFACTS</code>.
    Contact <a href="mailto:support@harness.io" target="_blank">Harness Support</a>
    to enable the feature.</div><p>All the artifacts collected during the polling
    interval will trigger a deployment, with one deployment triggered for each artifact
    collected.</p><h4>Trigger is based on File Name</h4><p>The Trigger is executed
    based on <strong>file names</strong> and not metadata changes.</p><h3>Step 1:
    Add a Trigger</h3><p>Typically, Triggers are set up after you have successfully
    deployed and tested a Workflow or Pipeline.</p><p>To add a trigger, do the following:</p><ol><li>Ensure
    that you have a Harness Service, Environment, and Workflow set up. If you want
    to Trigger a Pipeline, you&#39;ll need one set up also.</li><li>In your Harness
    Application, click <strong>Triggers</strong>.</li><li>Click <strong>Add Trigger</strong>.
    The <strong>Trigger</strong> settings appear.</li><li>In <strong>Name</strong>,
    enter a name for the Trigger. This name will appear in the <strong>Deployments</strong>
    page to indicate the Trigger that initiated a deployment.</li><li>Click <strong>Next</strong>.</li></ol><h3>Step
    2: Select the Artifact Source that Triggers Deployments</h3><p>Next you can identity
    the Artifact Source that will initiate the Trigger when a new artifact is added.</p><p>You
    will select an Artifact Source from one of the Harness Services in the Application.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/s2m2ksxn6a/1592001519256/image.png"/></figure><p></p><p>In
    addition, you can specify a build or tag to filter artifacts in the Artifact Source.
    For example, the above Artifact Source uses a publicly available Docker image
    of NGINX and its tags can be seen on Docker Hub:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/s2m2ksxn6a/1592001777719/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>The
    simplest way to see the build names for your artifacts, is to use <strong>Artifact
    History</strong> in the Harness Service.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/s2m2ksxn6a/1592005709708/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Here
    you can see the build names.</p><div class="note-callout">Selecting the <strong>Manually
    pull artifact</strong> option in a Harness Service does <u>not</u> initiate a
    Trigger set up with <strong>On New Artifact</strong>.</div><p>To specify the triggering
    artifact source, do the following:</p><ol><li>In your Trigger, in <strong>Condition</strong>,
    in <strong>Type</strong>, click <strong>On New Artifact</strong>. The <strong>Artifact
    Source</strong> and <strong>Build/Tag Filter</strong> settings appear.</li><li>In
    <strong>Artifact Source</strong>, select the Harness Service Artifact Source that
    points to your Artifact repo. The names are listed with Artifact Source name (Service
    name).<div class="note-callout">The Trigger is executed based on <strong>file
    names</strong> and not metadata changes.</div>For example, the Artifact Source
    <code>library_nginx (k8sv2)</code> references a Service&#39;s Artifact Source
    like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/s2m2ksxn6a/1592003762245/image.png"/></figure></li><li>In
    <strong>Build/Tag Filter</strong>, you can enter the build name or tag to use
    to identify the artifact. Look at your repo to see the tags applied to artifacts.</li></ol><h4>Wildcards
    and Regex</h4><p>You can use wildcards in the Build/Tag Filter, and you can enable
    <strong>Regex</strong> to enter a build name or filter using <a href="https://regexr.com/"
    target="_blank">regex</a>.</p><p>For example, if the build is <code>todolist-v2.0.zip</code> :</p><ul><li>With
    <strong>Regex</strong> <u>not enabled</u>, <code>todolist*</code> or <code>*olist*</code></li><li>or,
    with <strong>Regex</strong> enabled, the regex <code>todolist-v\d.\d.zip</code></li></ul><p>If
    the regex expression does not result in a match, Harness ignores the value.</p><div
    class="note-callout">Harness supports standard Java regex. For example, if <strong>Regex</strong>
    is enabled and the intent is to match any branch, the wildcard should be <code>.*</code>
    instead of simply a wildcard <code>*</code>. If you wanted to match all of the
    files that end in <code>-DEV.tar</code> you would enter <code>.*-DEV\.tar</code>.</div><p>When
    you are done, click <strong>Next</strong>.</p><p>Now you can select the Workflow
    or Pipeline to deploy whenever the Artifact Source you selected receives a new
    artifact matching your criteria.</p><h3>Step 3: Select the Workflow or Pipeline
    to Deploy</h3><p>You can select the Workflow or Pipeline to execute when the Trigger&#39;s
    criteria is met (a new artifact is posted to the Artifact Source you selected
    in <strong>Condition</strong>).</p><p>When you select the Workflow or Pipeline,
    you are prompted to provide values for any required parameters.</p><ol><li>In
    <strong>Execution Type</strong>, select <strong>Workflow</strong> or <strong>Pipeline</strong>.</li><li>In
    <strong>Execute Workflow</strong> or <strong>Execute Pipeline</strong>, select
    the Workflow or Pipeline to run.</li></ol><p>If the Workflow or Workflows in the
    Pipeline you selected have Workflow variables, you are prompted to provided values
    for them.</p><h3>Step 4: Provide Values for Workflow Variables</h3><p>If the Workflow
    or Pipeline you selected to deploy uses Workflow variables, you will need to provide
    values for these variables.</p><p>You can also use variable expressions for these
    values. See <a href="/article/revc37vl0f-passing-variable-into-workflows">Passing
    Variables into Workflows from Triggers</a>.</p><h3>Step 5: Select the Artifact
    to Deploy</h3><p>Since Workflows deploy Harness Services, you are also prompted
    to provide the Artifact Source for the Service(s) the Workflow(s) will deploy.</p><p>There
    are three main settings:</p><h4>From Triggering Artifact Source</h4><p>Select
    this option to use the artifact identified in Artifact Source you selected in
    <strong>Condition</strong>.</p><div class="note-callout">Harness ties Artifact
    Sources to their Harness Services. If you have a Pipeline with three Workflows
    that deploy three Services that use the same Artifact Source (say, an artifact
    in a Nexus repo), you should not create three Triggers. You can simply create
    a Trigger on the first Service deployed. You can then get the <code>${artifact.buildNo}</code>
    <a href="https://docs.harness.io/article/aza65y4af6-built-in-variables-list#artifact">expression</a>
    and <a href="https://docs.harness.io/article/gkmgrz9shh-how-to-pass-variables-between-workflows">pass
    it on to the subsequent Workflows</a>.</div><h4>Last Collected</h4><p>Select this
    option to use the last artifact collected by Harness in the Harness Service. Artifact
    metadata is collected automatically every two minutes by Harness.</p><p>You can
    also manually collect artifact metadata using the Service&#39;s <strong>Manually
    pull artifact</strong> feature.</p><h4>Last Successfully Deployed</h4><p>The last
    artifact that was deployed by the Workflow you select.</p><h3>Best Practices</h3><p>Do
    not trigger on the <strong>latest</strong> tag of an artifact, such as a Docker
    image. With <strong>latest</strong>, Harness only has metadata, such as the tag
    name, which has not changed, and so Harness does not know if anything has changed.
    The Trigger will not be executed. Do not use a static tag for Triggers, use an
    artifact source instead. Create a Trigger that deploys On New Artifact.</p><h3>Configure
    As Code</h3><p>To see how to configure the settings in this topic using YAML,
    configure the settings in the UI first, and then click the YAML editor button
    (<span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span>).</p><h3>Related
    Topics</h3><ul><li> <a href="/article/revc37vl0f-passing-variable-into-workflows">Passing
    Variables into Workflows from Triggers</a></li><li>For information on using Triggers
    as part of Harness GitOps, see <a href="/article/khbt0yhctx-harness-git-ops">Harness
    GitOps</a>.</li><li> <a href="/article/nihs2y2z61-trigger-a-deployment-on-pipeline-completion">Trigger
    Deployments when Pipelines Complete</a></li><li> <a href="/article/tb66fmh4iz-trigger-a-deployment-on-a-time-schedule">Schedule
    Deployments using Triggers</a></li><li> <a href="/article/ys3cvwm5gc-trigger-a-deployment-on-git-event">Trigger
    Deployments using Git Events</a></li><li> <a href="/article/mc2lxsas4c-trigger-a-deployment-using-c-url">Trigger
    a Deployment using cURL</a></li><li> <a href="/article/zr4tgwrzlb-trigger-a-deployment-when-a-file-changes">Trigger
    a Deployment when a File Changes</a></li><li> <a href="/article/uccck6kq5m-get-deployment-status-using-rest">Get
    Deployment Status using REST</a></li><li> <a href="/article/6vlut5qvlf-freeze-triggers">Pause
    All Triggers using Deployment Freeze</a></li></ul><p></p>'
  slug: trigger-a-deployment-on-new-artifact
  tags: []
  is_live: true
