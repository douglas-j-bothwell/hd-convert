type: article
article_id: dvm5q9j0d0
user_id: mfr0nxh4be
category_id: btqlctlqsj
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Run Google Cloud Builds
slug: trigger-google-cloud-builds
description: Currently, this feature is behind the feature flag GCB_CI_SYSTEM. Contact
  Harness Support to enable the feature. Google Cloud Build (GCB) can import source
  code from a variety of repositories or clou…
short_version: Currently, this feature is behind the feature flag GCB_CI_SYSTEM. Contact
  Harness Support to enable the feature. Google Cloud Build (GCB) can import source
  code from a variety of repositories or clou…
tags:
- GCB
- serverless
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-05-03T16:27:14.033656Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Run Google Cloud Builds
  description: ""
  short_version: ""
  body: '<p></p><div class="note-callout">Currently, this feature is behind the feature
    flag <code>GCB_CI_SYSTEM</code>. Contact <a href="mailto:support@harness.io" target="_blank">Harness
    Support</a> to enable the feature.</div><p>Google Cloud Build (GCB) can import
    source code from a variety of repositories or cloud storage spaces, execute a
    build to your specifications, and produce artifacts such as Docker containers
    or Java archives.</p><p>Harness GCB integration lets you do the following:</p><ul><li>Run
    GCB builds as part of your Harness Workflow.</li><li>Run GCB builds using config
    files inline or in remote Git repos.</li><li>Execute GCB Triggers, including substituting
    specific variables at build time.</li></ul><h3>Before You Begin</h3><ul><li>If
    you are new to GCB, review <a href="https://cloud.google.com/cloud-build/docs/overview"
    target="_blank">Overview of Cloud Build</a> and <a href="https://cloud.google.com/cloud-build/docs/quickstart-build"
    target="_blank">Quickstart: Build</a> from Google.</li><li><a href="/article/6x52zvqsta-add-google-cloud-platform-cloud-provider">Add
    Google Cloud Platform Cloud Provider</a></li><li><a href="/article/ay9hlwbgwa-add-source-repo-providers">Add
    Source Repo Providers</a></li><li><a href="/article/m220i1tnia-workflow-configuration">Workflows</a></li></ul><p></p><h3>Review:
    Harness GCB Integration</h3><div class="note-callout">You can add the Google Cloud
    Build step to any Workflow type and Workflow section.</div><p>The following steps
    describe, in general, the lifecycle of a GCB build with Harness:</p><ol><li>In
    GCB:<ol><li>Prepare your application code and any needed assets.</li><li>Create
    a build config file in JSON format.</li><li>For GCB triggers, create a trigger
    in Google Cloud Build.</li></ol></li><li>In Harness:<ol><li>Connect Harness to
    your Google Cloud Platform account.</li><li>Connect Harness to your Git account
    if you will be using remote GCB build config files.</li><li>Add a GCB step to
    your Workflow.</li><li>Target your GCB build using one of the following:<ol><li>Inline
    config file.</li><li>Remote config file.</li><li>GCB trigger.</li></ol></li><li>Deploy
    the Workflow to execute the GCB build.</li></ol></li></ol><p>Let&#39;s set it
    up.</p><h3>Step 1: Connect to Google Cloud Platform</h3><ol><li>Connect Harness
    to your GCP account by setting up a Harness <a href="/article/6x52zvqsta-add-google-cloud-platform-cloud-provider">Google
    Cloud Platform Cloud Provider</a>.<br/>You set up this connection using a <a href="https://cloud.google.com/iam/docs/creating-managing-service-account-keys"
    target="_blank">GCP service account key file</a> (in JSON format).</li><li>Ensure
    that the service account used has the <a href="https://cloud.google.com/cloud-build/docs/iam-roles-permissions#predefined_roles"><strong>GCB
    Cloud Build Editor role</strong></a>.</li></ol><p>For a detailed description of
    the permissions used, see the following section.</p><h4>Required GCP Permissions</h4><div
    class="note-callout">GCB roles and permissions are described in <a href="https://cloud.google.com/cloud-build/docs/iam-roles-permissions"
    target="_blank">IAM Roles and permissions</a> from Google.</div><p>Harness uses
    get, create, and list <a href="https://cloud.google.com/cloud-build/docs/iam-roles-permissions"
    target="_blank">permissions</a>. Here is how these permissions map to Harness
    GCB operations:</p><ul><li>Run inline builds: <code>cloudbuild.builds.create</code></li><li>Run
    remote builds: <code>cloudbuild.builds.create</code></li><li>Run triggers: <code>cloudbuild.builds.create</code></li><li>Fetch
    logs: <code>cloudbuild.builds.get</code></li><li>List triggers: <code>cloudbuild.builds.list</code>
    (if you are entering the trigger name manually, this is not needed)</li></ul><p>If
    you create your own role, ensure that it includes these permissions.</p><h3>Step
    2: Add Google Cloud Build Step</h3><div class="note-callout">You can add the Google
    Cloud Build step to any Workflow type and Workflow section.</div><ol><li>In your
    Harness Workflow, in any section, click <strong>Add Step</strong>.</li><li>Select
    <strong>Google Cloud Build</strong>, and click <strong>Next</strong>.</li><li>In
    <strong>Google Cloud Provider</strong>, select the Harness Google Cloud Provider
    you set up earlier. See <a href="/article/6x52zvqsta-add-google-cloud-platform-cloud-provider">Add
    Google Cloud Platform Cloud Provider</a>.<div class="note-callout">You can turn
    this setting into a deployment runtime parameter by clicking the template button
    <strong>[T]</strong>. This will create a <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variable</a> for the setting. When you deploy this Workflow, you can enter the
    option for the setting.</div></li><li>Complete the step using the following settings.</li></ol><h3>Option
    1: Inline JSON Build Spec</h3><p>You can enter an inline JSON build configuration
    just like you would in a Cloud Build config file.</p><ol><li>In <strong>Build
    Specification</strong>, click <strong>Inline</strong>.</li></ol><p>Enter your
    build config spec in JSON. For example:</p><pre>{<br/>  &#34;steps&#34;: [<br/>    {<br/>      &#34;name&#34;:
    &#34;gcr.io/cloud-builders/git&#34;,<br/>      &#34;args&#34;: [&#34;clone&#34;,
    &#34;https://github.com/john-smith/gcb.git&#34;, &#34;.&#34;]<br/>    },<br/>    {<br/>      &#34;name&#34;:
    &#34;gcr.io/cloud-builders/gradle&#34;,<br/>      &#34;entrypoint&#34;: &#34;gradle&#34;,<br/>      &#34;args&#34;:
    [&#34;build&#34;]<br/>    },<br/>    {<br/>      &#34;name&#34;: &#34;gcr.io/cloud-builders/docker&#34;,<br/>      &#34;args&#34;:
    [&#34;build&#34;, &#34;-t&#34;, &#34;gcr.io/$PROJECT_ID/v-image&#34;, &#34;--build-arg=JAR_FILE=build/libs/playground-0.0.1.jar&#34;,
    &#34;.&#34;]<br/>    }<br/>  ],<br/>  &#34;options&#34;: {&#34;logStreamingOption&#34;:
    &#34;STREAM_ON&#34;},<br/>  &#34;images&#34;: [&#34;gcr.io/$PROJECT_ID/v-image&#34;]<br/>}</pre><p>Harness
    uses the Cloud Build API <a href="https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.builds"
    target="_blank">Build resource</a> to process the build config spec.</p><h3>Option
    2: Pulling Build Spec from Git Repo</h3><p>In this option, you specify the repo
    where your build config file and its related files are located.</p><ol><li>Ensure
    you have set up a Harness Source Repo Provider that points to the Git repo containing
    your build config file. See <a href="/article/ay9hlwbgwa-add-source-repo-providers">Add
    Source Repo Providers</a>.</li><li>In <strong>Build Specification</strong>, select
    <strong>Remote</strong>.</li><li>In <strong>Source Repository</strong>, select
    the Source Repro Provider that connects to your build config file repo.<div class="note-callout">You
    can turn this setting into a deployment runtime parameter by clicking the template
    button <strong>[T]</strong>. This will create a <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variable</a> for the setting. When you deploy this Workflow, you can enter the
    option for the setting.</div></li><li>In <strong>Commit ID</strong>, select <strong>Latest
    from Branch</strong> or <strong>Specific Commit ID</strong>.</li><li>Enter the
    branch name or commit ID. Both of these settings allow Harness variables, such
    as <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a>.<br/>When you set up the Source Repo Provider, you entered in a
    branch name. The branch name you enter in the <strong>Google Cloud Build</strong>
    step <strong>Branch Name</strong> overrides that setting.</li><li>In <strong>File
    Path</strong>, enter the full path from the root of the repo to the build config
    file. If the build file location in the repo is <strong>https://github.com/john-smith/gcb/cloudbuild.json</strong>,
    then the file is at the repo root and you would just enter <strong>cloudbuild.json</strong>
    in <strong>File Path</strong>.</li></ol><h3>Option 3: Execute Existing GCB Trigger</h3><p>Select
    this option if you have created a <a href="https://cloud.google.com/cloud-build/docs/automating-builds/create-manage-triggers"
    target="_blank">Cloud Build trigger</a> for your Cloud Build and you want to execute
    it in your Workflow.</p><ol><li>In <strong>Build Specification</strong>, click
    <strong>Trigger</strong>.</li><li>In <strong>Trigger Name</strong>, select the
    name of the Cloud Build trigger you want to execute.<div class="note-callout">You
    can enter the name of an existing variable expression in this setting. For example,
    if you created the <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variable</a> <code>triggerName</code>, you can enter <code>${workflow.variables.triggerName}</code>.
    The variable expression should refer to a <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variable</a> or other available <a href="/article/9dvxcegm90-variables">Harness
    variable</a>. When you deploy this Workflow, you can enter the option for the
    setting.</div></li><li>In <strong>Trigger Type</strong>, select one of the following:<ol><li><strong>Branch
    Name:</strong> Set your trigger to start a build using commits from a particular
    branch.</li><li><strong>Tag Name:</strong> Set your trigger to start a build using
    commits that contain a particular tag.</li><li><strong>Commit SHA:</strong> Set
    your trigger to start a build using an explicit commit SHA.<br/>All of these settings
    allow Harness variables, such as <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a>.</li></ol></li></ol><h4>Substitutions</h4><p>GCB lets you use substitutions
    for specific variables at build time. You can do this in the Harness Google Cloud
    Build step, also.</p><div class="note-callout">See <a href="https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values"
    target="_blank">Substituting variable values</a> from Google.</div><ol><li>In
    <strong>Substitutions</strong>, click <strong>Add</strong>.</li><li>In <strong>Name</strong>,
    enter the name of the variable you want to make a substitution on.<br/>For example,
    if your Cloud Build config file uses <code>name: ${_NAME}</code>, you would enter
    <strong>_Name</strong>.</li><li>In <strong>Value</strong>, enter the value to
    substitute for the variable.</li></ol><p>This is often used for tagging. For example,
    if your config file has <code>tags: [&#34;${_TAG1}&#34;, &#34;${_TAG2}&#34;]</code>,
    you would create substitutions with the names <strong>_TAG1</strong> and <strong>_TAG2</strong>
    and then enter the tag values in <strong>Value</strong>.</p><h3>Step 3: Execution
    Settings</h3><h4>Timeout</h4><p>The timeout period determines how long to wait
    for the step to complete. When the timeout expires, it is considered a workflow
    failure and the workflow <a href="/article/vfp0ksdzg3-define-workflow-failure-strategy-new-template">Failure
    Strategy</a> is initiated.</p><h4>Execute with previous steps</h4><p>Select this
    checkbox to run this step in parallel with the previous Workflow step(s).</p><h4>Wait
    interval before execution</h4><p>Set how long the deployment process should wait
    before executing the step.</p><h3>Option 4: Use Output Variables</h3><p>Harness
    provides the following information about the builds it executes:</p><ul><li>Activity
    ID: <code>activityId</code></li><li>Build Url: <code>buildUrl</code></li><li>Build#
    <code>buildNo</code></li><li>Tags: <code>tags</code></li><li>Status: <code>buildStatus</code></li><li>Build
    Name: <code>name</code></li><li>Created At: <code>createTime</code></li><li>Substitutions
    (an array of key-value pairs): <code>substitutions</code></li><li>Logs URL: <code>logUrl</code></li><li>Images:
    <code>images</code></li><li>Bucket: <code>artifactLocation</code></li><li>Artifacts
    (an array of artifacts): <code>artifacts</code></li></ul><p>You create an output
    variable in the Google Cloud Build step, and then you can reference each build
    output item in a subsequent <a href="/article/1fjrjbau7x-capture-shell-script-step-output">Shell
    Script</a> step.</p><ol><li>Select <strong>Build output in the Context</strong>.</li><li>In
    <strong>Name</strong>, enter a name for the output variable, such as <strong>gcb</strong>.</li><li>In
    <strong>Scope</strong>, select <strong>Workflow</strong>, <strong>Pipeline</strong>,
    or <strong>Phase</strong> (Canary or Multi-Service Workflows only). Scope is used
    to avoid variable name conflicts and to make the output information available
    across Workflows in a Pipeline.</li></ol><p>For example, if I create the variable
    <strong>gcb</strong>, in a subsequent Shell Script step, I could enter the following:</p><pre>echo
    &#34;Activity ID: ${gcb.activityId}&#34;<br/>echo &#34;Build Url: ${gcb.buildUrl}&#34;<br/>echo
    &#34;Build# ${gcb.buildNo}&#34;<br/>echo &#34;Tags: ${gcb.tags}&#34;<br/>echo
    &#34;Status: ${gcb.buildStatus}&#34;<br/>echo &#34;Build Name: ${gcb.name}&#34;<br/>echo
    &#34;Created At: ${gcb.createTime}&#34;<br/>echo &#34;Substitutions: ${gcb.substitutions}&#34;<br/>echo
    &#34;Logs URL: ${gcb.logUrl}&#34;<br/>echo &#34;Images: ${gcb.images}&#34;<br/>echo
    &#34;Bucket: ${gcb.artifactLocation}&#34;<br/>echo &#34;Artifacts: ${gcb.artifacts}&#34;</pre><p>When
    the Workflow is deployed, the Harness Deployments page will show the output information
    in the Shell Script step:</p><pre>Activity ID: up9p7jG6SoCAIvwyv8sE6A<br/>Build
    Url: https://console.cloud.google.com/cloud-build/builds/8ba3539e-658e-44bb-8624-d34638264f9b<br/>Build#
    8ba3539e-658e-44bb-8624-d34638264f9b<br/>Tags: [TAG1, TAG2]<br/>Status: SUCCESS<br/>Build
    Name: operations/build/project-123/OGJhMzUzOWUtNjU4ZS00NGJiLTg2MjQtZDM0NjM4MjY0Zjli<br/>Created
    At: 2020-07-29T15:56:22.306572924Z<br/>Substitutions: {_NAME=gcr.io/cloud-builders/docker,
    _TAG2=test2, _TAG1=test1, BRANCH_NAME=master, REPO_NAME=gcb, REVISION_ID=d89b008ffd36d40d3e9c71cca5f0a9e699602f60,
    COMMIT_SHA=d89b008ffd36d40d3e9c71cca5f0a9e699602f60, SHORT_SHA=d89b008}<br/>Logs
    URL: https://console.cloud.google.com/cloud-build/builds/8ba3539e-658e-44bb-8624-d34638264f9b?project=196121614392<br/>Images:
    [gcr.io/project-123/v-image]<br/>Bucket: gs://gcb-playgound/<br/>Artifacts: [build/libs/playground-0.0.1.jar]</pre><h3>Step
    4: Deploy Workflow</h3><p>When you are finished setting up the Google Cloud Build
    step, and any other steps, deploy your Workflow.</p><p>The Google Cloud Build
    step <strong>Details</strong> displays information about the build, including
    a build URL you can click to open the build in the GCB console:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/dvm5q9j0d0/1595978514521/image.png"/></figure><p></p><h3>Limitations</h3><p>Harness
    only supports the use of JSON in inline and remote build config files. If you
    use a GCB trigger in the Google Cloud Build step, the config file it uses can
    be either YAML or JSON.</p><h3>See Also</h3><ul><li><a href="/article/5fzq9w0pq7-using-the-jenkins-command">Using
    the Jenkins Command</a></li><li><a href="/article/0svkm9v7vr-configure-workflow-using-yaml">Configure
    Workflows Using YAML</a></li></ul><h3>Configure As Code</h3><p>To see how to configure
    the settings in this topic using YAML, configure the settings in the UI first,
    and then click the YAML editor button (<span style="color:#fb9e00" data-hd-color="#fb9e00"><strong>&lt;/&gt;</strong></span>).</p><p></p>'
  slug: trigger-google-cloud-builds
  tags:
  - GCB
  - serverless
  is_live: true
