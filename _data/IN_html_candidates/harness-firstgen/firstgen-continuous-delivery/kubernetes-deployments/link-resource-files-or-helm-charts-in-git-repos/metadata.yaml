type: article
article_id: yjkkwi56hl
user_id: mfr0nxh4be
category_id: n03qfofd5w
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Link Resource Files or Helm Charts in Git Repos
slug: link-resource-files-or-helm-charts-in-git-repos
description: Use your Git repo for configuration files and Helm charts.
short_version: Use your Git repo for configuration files and Helm charts.
tags:
- add remote manifests
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-07-18T22:53:42.584887Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Link Resource Files or Helm Charts in Git Repos
  description: Use your Git repo for configuration files and Helm charts.
  short_version: Use your Git repo for configuration files and Helm charts.
  body: '<div class="tip-callout">This content is for Harness <a href="/article/1fjmm4by22">FirstGen</a>.
    Switch to <a href="/category/qfj6m1k2c4">NextGen</a>.</div><p></p><p>You can use
    your Git repo for the configuration files in <strong>Manifests</strong> and Harness
    will use them at runtime. You have two options for remote files:</p><ul><li><strong>Standard
    Kubernetes Resources in YAML</strong> - These files are simply the YAML manifest
    files stored on a remote Git repo.</li><li><strong>Helm Chart from Source Repository</strong> -
    These are Helm chart files stored in standard Helm syntax in YAML on a remote
    Git repo.</li></ul><p>For steps on other options, see:</p><ul><li>All options
    — See <a href="/article/2j2vi5oxrq-define-kubernetes-manifests">Define Kubernetes
    Manifests</a>.</li><li><strong>Helm Chart from Helm Repository</strong> — See
    <a href="/article/hddm3rgf1y-use-a-helm-repository-with-kubernetes">Use a Helm
    Repository with Kubernetes</a>.</li><li><strong>Kustomization Configuration</strong>
    — See <a href="/article/zrz7nstjha-use-kustomize-for-kubernetes-deployments">Use
    Kustomize for Kubernetes Deployments</a>.</li><li><strong>OpenShift Template</strong>
    — See <a href="/article/p756zrn9vc-using-open-shift-with-harness-kubernetes">Using
    OpenShift with Harness Kubernetes</a>.</li></ul><p>In this topic:</p><ul><li>
    <a href="#before_you_begin">Before You Begin</a></li><li> <a href="#step_1_add_a_source_repo_provider">Step
    1: Add a Source Repo Provider</a></li><li> <a href="#step_2_link_remote_manifests">Step
    2: Link Remote Manifests</a></li><li> <a href="#step_3_select_a_manifest_format">Step
    3: Select a Manifest Format</a></li><li> <a href="#step_4_configure_the_repo_settings">Step
    4: Configure the Repo Settings</a></li><li> <a href="https://docs.harness.io/article/yjkkwi56hl-link-resource-files-or-helm-charts-in-git-repos#option_skip_versioning_for_service">Option:
    Skip Versioning for Service</a></li><li> <a href="#option_helm_command_flags">Option:
    Helm Command Flags</a></li><li> <a href="#how_does_harness_use_the_remote_files">How
    Does Harness Use the Remote Files?</a></li><li> <a href="#next_steps">Next Steps</a></li></ul><h3>Before
    You Begin</h3><ul><li> <a href="/article/2j2vi5oxrq-define-kubernetes-manifests">Define
    Kubernetes Manifests</a></li><li> <a href="/article/hddm3rgf1y-use-a-helm-repository-with-kubernetes">Use
    a Helm Repository with Kubernetes</a></li></ul><div class="note-callout">You can
    also use a Git repo for your entire Harness Application, and sync it unidirectionally
    or bidirectionally. For more information, see  <a href="/article/htvzryeqjw-configuration-as-code">Configuration
    as Code</a>. There is no conflict between the Git repo used for remote <strong>Manifests</strong> files
    and the Git repo used for the entire Harness Application.</div><h3>Step 1: Add
    a Source Repo Provider</h3><p>To use a remote Git repo for your resource files
    or Helm charts, you must set up a Harness Source Repo Provider to connect to your
    repo. To set up the connection, see one of the following:</p><ul><li> <a href="/article/sip9rr6ogy-add-github-repo">Add
    a GitHub Repo</a></li><li> <a href="/article/od1u7t4vgq-add-a-gitlab-repo">Add
    a GitLab Repo</a></li><li> <a href="/article/etl0yejzsm-add-bitbucket-repo">Add
    a Bitbucket Repo</a></li></ul><h3>Step 2: Link Remote Manifests</h3><p>In your
    Harness Kubernetes Service, in <strong>Manifests</strong>, click the vertical
    ellipsis and click <strong>Link Remote Manifests</strong>.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/yjkkwi56hl/1631047838498/clean-shot-2021-09-07-at-13-50-09.png"/></figure><p>The <strong>Remote
    Manifests</strong> dialog appears.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/yjkkwi56hl/1588680596507/screenshot-2020-05-05-at-5-37-33-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Step
    3: Select a Manifest Format</h3><p>In <strong>Manifest Format</strong>, select
    one of the following options:</p><ul><li><strong>Kubernetes Resource Specs in
    YAML format</strong> — Use any manifest and values files from a Git repo.</li><li><strong>Helm
    Chart from Source Repository</strong> — Use a Helm chart stored in a Git repo.</li></ul><div
    class="note-callout">Helm Dependencies are supported with charts in <a href="/article/hddm3rgf1y-use-a-helm-repository-with-kubernetes">Helm
    Chart from Helm Repository</a> (see below), not with <strong>Helm Chart from Source
    Repository</strong>.</div><p>For steps on the remaining options:</p><ul><li><strong>Helm
    Chart from Helm Repository</strong> — See <a href="/article/hddm3rgf1y-use-a-helm-repository-with-kubernetes">Use
    a Helm Repository with Kubernetes</a>.</li><li><strong>Kustomization Configuration</strong>
    — See <a href="/article/zrz7nstjha-use-kustomize-for-kubernetes-deployments">Use
    Kustomize for Kubernetes Deployments</a>.</li><li><strong>OpenShift Template</strong>
    — See <a href="/article/p756zrn9vc-using-open-shift-with-harness-kubernetes">Using
    OpenShift with Harness Kubernetes</a>.</li></ul><h3>Step 4: Configure the Repo
    Settings</h3><p>In <strong>Source Repository</strong>, select a SourceRepo Provider
    for the Git repo you added to your Harness account. For more information, see 
    <a href="/article/ay9hlwbgwa-add-source-repo-providers">Add Source Repo Providers</a>.</p><p>In
    <strong>Commit ID</strong> , select <strong>Latest from Branch</strong> or <strong>Specific
    Commit ID</strong>.</p><div class="note-callout">For Canary deployments: to ensure
    that the identical manifest is deployed in both the Canary and Primary phases,
    use <strong>Specific Commit ID</strong>. If you use <strong>Latest from Branch</strong>,
    when Harness fetches the manifest for each phase there is the possibility that
    the manifest could change between fetches for the Canary and Primary phases.</div><p>In
    <strong>Branch/Commit ID</strong> (required), enter the branch or commit ID for
    the remote repo.</p><p>In <strong>File/Folder path(s)</strong>,  enter the repo
    file and folder path.</p><div class="note-callout">If you want to use Go templating
    in your remote repo for your configuration files in <strong>Manifests</strong>,
    ensure that the <strong>values.yaml</strong> file is at the root of the folder
    path you select.</div><p>When the remote manifests are added, the <strong>Manifests</strong>
    section displays the connection details.</p><h3>Option: Skip Versioning for Service</h3><p>By
    default, Harness versions ConfigMaps and Secrets deployed into Kubernetes clusters.
    In some cases, you might want to skip versioning.</p><p>Typically, to skip versioning
    in your deployments, you add the annotation <code>harness.io/skip-file-for-deploy</code>
    to your manifests. See <a href="/article/4vjgmjcj6z-deploy-manifests-separately-using-apply-step">Deploy
    Manifests Separately using Apply Step</a>.</p><p>In some cases, such as when using
    public manifests or Helm charts, you cannot add the annotation. Or you might have
    100 manifests and you only want to skip versioning for 50 of them. Adding the
    annotation to 50 manifests is time-consuming.</p><p>Instead, enable the <strong>Skip
    Versioning for Service</strong> option in <strong>Remote Manifests</strong>.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/yjkkwi56hl/1607971891779/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>When
    you enable <strong>Skip Versioning for Service</strong>, Harness will not perform
    versioning of ConfigMaps and Secrets for the Service.</p><p>If you have enabled
    <strong>Skip Versioning for Service</strong> for a few deployments and then disable
    it, Harness will start versioning ConfigMaps and Secrets.</p><h3>Option: Helm
    Command Flags</h3><p>You can extend the Helm commands that Harness runs when deploying
    your Helm chart.</p><p>Use <strong>Enable Command Flags</strong> to have Harness
    run Helm-specific Helm commands and their options <u>as part of preprocessing</u>.
    All the commands you select are run before <code>helm install/upgrade</code>.</p><p>Click
    <strong>Enable Command Flags</strong>, and then select commands from the <strong>Command
    Flag Type</strong> dropdown.</p><p>Next, in <strong>Input</strong>, add any options
    for the command.</p><div class="note-callout">The <code>--debug</code> option
    is not supported.</div><p>For Kubernetes deployments using Helm charts, the following
    commands are supported (more might be added):</p><ul><li>TEMPLATE: <code>helm
    template</code> to render the helm template files.</li><li>VERSION: <code>helm
    version</code> to validate Helm on the Delegate.</li><li>FETCH: <code>helm fetch</code>
    (v1) <code>helm pull</code> (v2) to get the Helm chart from its source.</li></ul><p>You
    will see the outputs for the commands you select in the Harness deployment logs.
    The output will be part of pre-processing and appear before <code>helm install/upgrade</code>.</p><div
    class="note-callout">If you use Helm commands in the Harness Service and in a
    Workflow deploying that Service, the Helm commands in the Harness Service override
    the commands in the Workflow.</div><h4>Harness Variable Expressions are Supported</h4><p>You
    can use <a href="/article/9dvxcegm90-variables">Harness variable expressions</a>
    in any of the command options settings. For example, <a href="/article/q78p7rpx9u-add-service-level-config-variables">Service
    Config variables</a> and <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a>.</p><h3>How Does Harness Use the Remote Files?</h3><p>At deployment
    runtime, the Harness Delegate pulls the remote configuration files from the repo
    and then uses them to create resources via the Kubernetes API. It does not matter
    if the Delegate runs in the same Kubernetes cluster as the deployed pods. The
    Kubernetes API is used by the Delegate regardless of the cluster networking topology.</p><p>When
    you deploy a Workflow or Pipeline that uses this Service, you can see the Delegate
    fetch the <strong>Manifests</strong> files from the repo in the <strong>Fetch
    Files</strong> section of the log Harness <strong>Deployments</strong>:</p><pre>Fetching
    files from git<br/>  <br/>Git connector Url: https://github.com/michaelcretzman/harness-example
    # remote manifest files<br/>  <br/>Branch: example # Git repo branch<br/>  <br/>Fetching
    NGINX/values.yaml # values.yaml file in repo<br/>  <br/>Successfully fetched NGINX/values.yaml<br/>  <br/>Fetching
    manifest files at path: NGINX/ # manifest files in repo<br/>  <br/>Successfully
    fetched following manifest [.yaml] files:<br/><br/>- templates/spec.yaml # manifest
    file with ConfigMap and Deployment objects<br/>  <br/>Done.</pre><p>If you experience
    errors fetching the remote files, it is most likely because the wrong branch has
    been configured in the <strong>Branch/Commit ID</strong>.</p><p>To return to local
    configuration files, click the vertical ellipsis and select <strong>Use Inline
    Manifests</strong>.</p><p>Your remote files are not copied locally. You are simply
    presented with the local configuration files you used last.</p><h3>Next Steps</h3><ul><li>
    <a href="/article/hddm3rgf1y-use-a-helm-repository-with-kubernetes">Use a Helm
    Repository with Kubernetes</a></li></ul><p></p>'
  slug: link-resource-files-or-helm-charts-in-git-repos
  tags:
  - add remote manifests
  is_live: true
