type: article
article_id: p453sikbqt
user_id: mfr0nxh4be
category_id: n03qfofd5w
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Override Values YAML Files
slug: override-values-yaml-files
description: Override a remote values.yaml file.
short_version: Override a remote values.yaml file.
tags:
- Values YAML Override
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-07-18T22:58:04.885038Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Override Values YAML Files
  description: Override a remote values.yaml file.
  short_version: Override a remote values.yaml file.
  body: '<div class="tip-callout">This content is for Harness <a href="/article/1fjmm4by22">FirstGen</a>.
    Switch to <a href="/article/t57uzu1i41">NextGen</a>.</div><p>You can override
    the inline or remote values.yaml file(s) used in a Harness Kubernetes Service.</p><p>You
    can override values.yaml at the Harness Service and Environment levels, and also
    use Workflow variables to replace values.yaml file names or values at deployment
    runtime.</p><p>You can override using multiple values.yaml files. This is a common
    scenario where:</p><ul><li>You use one values.yaml for defaults and global configuration.</li><li>Use
    a second values.yaml file for the specific configuration of the service you are
    deploying.</li><li>Use one or more values.yaml files for deployment environments
    (QA, PROD, etc).</li></ul><p>This topic will explain how to override using single
    and multiple values.yaml files at the Harness Service and Environment levels,
    including the use of Workflow variables, and explain the override hierarchy so
    that you understand how values.yaml files override each other.</p><p>In this topic:</p><ul><li>
    <a href="#before_you_begin">Before You Begin</a></li><li> <a href="#review_values_yaml_support">Review:
    values.yaml Support</a></li><li> <a href="#step_1_pick_a_store_type">Step 1: Pick
    a Store Type</a></li></ul><p></p><ul><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_use_an_inline_override">Option:
    Use an Inline Override</a></li><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_use_a_single_remote_override">Option:
    Use a Single Remote Override</a></li><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_use_multiple_override_files_at_the_service_level">Option:
    Use Multiple Override Files at the Service Level</a></li><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_use_values_yaml_from_inside_the_chart">Option:
    Use Values YAML from inside the Chart</a></li><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_override_files_at_the_environment_level">Option:
    Override Files at the Environment Level</a></li><li><a href="https://docs.harness.io/article/p453sikbqt-override-values-yaml-files#option_use_variable_expressions_in_override_file_settings">Option:
    Use Variable Expressions in Override File Settings</a></li><li> <a href="#next_steps">Next
    Steps</a></li></ul><h3>Before You Begin</h3><ul><li> <a href="/article/yjkkwi56hl-link-resource-files-or-helm-charts-in-git-repos">Link
    Resource Files or Helm Charts in Git Repos</a></li><li> <a href="/article/lk57k7irla-upgrade-to-helm-3-charts-in-kubernetes-services">Upgrade
    to Helm 3 Charts in Kubernetes Services</a></li></ul><h3>Review: values.yaml Support</h3><p>Harness
    Kubernetes Services use values.yaml files in the following scenarios:</p><ol><li><strong>Inline</strong>,
    as part of Harness native manifest editor.</li></ol><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593639949609/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><ol><li
    style="counter-increment:li 1" start="2"><strong>Remotely</strong>, as part of
    a Kubernetes spec in a Git repo or a Helm Chart in a Helm repository or Git repo:<figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593640008658/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li></ol><p>You
    can override values.yaml files from any of these sources in the Harness Service
    or in any Harness Environment in the same Harness Application.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593641263732/image.png"/></figure><p>Environment-level
    values.yaml overrides are set up in the Environments of the same Application:</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593641205705/image.png"/></figure><p>Let&#39;s
    look at an advanced scenario where a user needs to override values.yaml files
    at multiple levels with a specific hierarchy, represented as highest to lowest
    here:</p><ol><li>Environment-level overrides for a specific Service (Service override
    specific Service 2)</li><li>Environment-level overrides for a specific Service
    (Service override specific Service 1)</li><li>Environment-level overrides (global)
    (Environment override all Services)</li><li>Service-level overrides (Service override
    2)</li><li>Service-level override (common values.yaml—Service override 1)</li><li>Default
    values.yaml in Helm Charts (default)</li></ol><p>This scenario can be implemented
    with a combination of Service-level and Environment-level overrides, as described
    in this topic.</p><h4>How are Multiple values.yaml Files Managed by Harness?</h4><p>Harness
    performs a diff and merges all values.yaml files, with the last values.yaml applied
    overwriting the earlier values.yaml.</p><p>The overwriting is granular. So if
    your first values.yaml file has a <code>key:value</code> that no latter values.yaml
    file has, that <code>key:value</code> is not overwritten.</p><h3>Step 1: Pick
    a Store Type</h3><ol><li>In the <strong>Values YAML Override</strong> section
    of a Harness Kubernetes Service, click <strong>Add Values</strong>.</li><li>In
    <strong>Store Type</strong>, select <strong>Local</strong> or <strong>Remote</strong>.</li></ol><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/oha220x80l/1580767355108/image.png"
    style="max-height:50%;max-width:50%;display:block;margin-left:auto;margin-right:auto"
    data-hd-height="50%" data-hd-width="50%" data-hd-align="center"/></figure><h3>Option:
    Use an Inline Override</h3><ol><li>Enter the YAML you want to use to override
    the Values YAML file (values.yaml).</li></ol><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/oha220x80l/1580767233711/image.png"
    style="max-height:25%;max-width:25%;display:block;margin-left:auto;margin-right:auto"
    data-hd-height="25%" data-hd-width="25%" data-hd-align="center"/></figure><ol><li
    style="counter-increment:li 1" start="2">Enter any new values and click <strong>Submit</strong>.
    The override is added to <strong>Values YAML Override</strong>.</li></ol><h3>Option:
    Use a Single Remote Override</h3><ol><li>In <strong>Source Repository</strong>,
    select the Git repo you added as a <a href="/article/ay9hlwbgwa-add-source-repo-providers">Source
    Repo Provider</a>.</li><li>For <strong>Commit ID</strong>, select either <strong>Latest
    from Branch</strong> and enter in the branch name, or <strong>Specific Commit
    ID</strong> and enter in the <strong>commit ID</strong>.</li><li>In <strong>File
    Path(s)</strong>, enter the path to the values.yaml file in the repo, including
    the repo name, like <strong>helm/values.yaml</strong>. This is a mandatory setting.
    You cannot leave <strong>File Path(s)</strong> empty.</li></ol><p>Values in Services
    can also be overwritten in Harness Environments. For more information, see <a
    href="/article/ycacqs7tlx-override-harness-kubernetes-service-settings">Override
    Harness Kubernetes Service Settings</a>.</p><h3>Option: Use Multiple Override
    Files at the Service Level</h3><p>You can specify multiple values.yaml files in
    a remote repo in your override.</p><p>Let&#39;s look at an example:</p><ol><li>In <strong>Source
    Repository</strong>, select the Git repo you added as a <a href="/article/ay9hlwbgwa-add-source-repo-providers">Source
    Repo Provider</a>.</li><li>For <strong>Commit ID</strong>, select either <strong>Latest
    from Branch</strong> and enter in the branch name, or <strong>Specific Commit
    ID</strong> and enter in the <strong>commit ID</strong>.</li><li>In <strong>File
    Path(s)</strong>, enter the paths to the values.yaml files in the repo, including
    the repo name, like <strong>k8</strong><strong>s/values.yaml</strong>. This is
    a mandatory setting. You cannot leave <strong>File Path(s)</strong> empty.</li></ol><p>Multiple
    files can be applied, separated by commas, with the later ones taking priority.</p><p>For
    example, let&#39;s say you wanted to include the following files with their override
    hierarchy represented from highest to lowest:</p><ol><li>k8s/multiple-overrides/values-override/service-<strong>override3</strong>.yaml
    (highest)</li><li>k8s/multiple-overrides/values-override/service-<strong>override2</strong>.yaml</li><li>k8s/multiple-overrides/values-override/service-<strong>override1</strong>.yaml
    (lowest)</li></ol><p>In <strong>File Path(s)</strong>, you would enter the following:</p><p><code>k8s/multiple-overrides/values-override/service-override1.yaml,
    k8s/multiple-overrides/values-override/service-override2.yaml, k8s/multiple-overrides/values-override/service-override3.yaml</code></p><h3>Option:
    Use Values YAML from inside the Chart</h3><p></p><div class="note-callout">Currently,
    this feature is behind the feature flag <code>OVERRIDE_VALUES_YAML_FROM_HELM_CHART</code>.
    Contact <a href="mailto:support@harness.io" target="_blank">Harness Support</a>
    to enable the feature.</div><p></p><p>If you are using the Helm Chart from Helm
    Repository option in <strong>Manifests</strong>, you can override the chart in
    <strong>Manifests</strong> using one or more values YAML files inside the Helm
    chart.</p><p>In <strong>Configuration</strong>, in <strong>Values YAML Override</strong>,
    click the edit icon.</p><p>In <strong>Store Type</strong>, select <strong>From
    Helm Repository</strong>.</p><p>In <strong>File Path(s)</strong>, enter the file
    path to the override values YAML file.</p><p>Multiple files can be used. When
    you enter the file paths, separate the paths using commas.</p><p>The latter paths
    are given higher priority.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1627588950131/clean-shot-2021-07-29-at-13-02-21.png"/></figure><h3>Option:
    Override Files at the Environment Level</h3><p>You can override the values.yaml
    settings of a Service in an Environment&#39;s <strong>Service Configuration Overrides</strong>
    settings.</p><ol><li>In an Environment, in <strong>Service Configuration Overrides</strong>,
    click <strong>Add Configuration Overrides</strong>.</li><li>In <strong>Service(s)</strong>,
    click <strong>All Services</strong> or the name of a specific <strong>Service</strong>.</li><li>In
    <strong>Override Type</strong>, select <strong>Values YAML</strong>.<figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593642488849/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>Select
    <strong>Inline</strong> or <strong>Remote</strong>. For <strong>Inline</strong>,
    enter the YAML you want to use to override the Service-level values.yaml file(s).</li><li>For
    <strong>Remote</strong>, in <strong>Git Connector</strong>, select the Git repo
    you added as a <a href="/article/ay9hlwbgwa-add-source-repo-providers">Source
    Repo Provider</a>.</li><li>Select either <strong>Use</strong> <strong>latest commit
    from branch</strong> and enter in the branch name, or <strong>Use specific commit
    ID</strong> and enter in the <strong>commit ID</strong>.</li><li>In <strong>Branch
    Name</strong>, enter the branch name where the file(s) is located, such as <strong>master</strong>,
    <strong>dev</strong>, etc. Do not enter the full URL to the branch.</li><li>In
    <strong>File Path(s)</strong>, enter the path(s) to the values.yaml file(s) in
    the repo, including the repo name, like <strong>k8</strong><strong>s/values.yaml</strong>.
    Multiple files can be applied, separated by commas, with the later ones taking
    priority.<br/>This is a mandatory setting. You cannot leave <strong>File Path(s)</strong>
    empty.</li></ol><p>When you&#39;re done, the override will look something like
    this:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593642819623/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Click
    <strong>Submit</strong>. The override is listed in the <strong>Service Configuration
    Overrides</strong> section:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593642864670/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Option:
    Use Variable Expressions in Override File Settings</h3><p>You can use <a href="/article/9dvxcegm90-variables">Harness
    variable expressions</a>, such as <a href="/article/766iheu1bk-add-workflow-variables-new-template">Workflow
    variables</a>, in the names and values of the values.yaml files you use as overrides.</p><p>For
    example, let&#39;s say you have listed three values.yaml files in the Service
    Configuration <strong>Values YAML Override</strong>.</p><p>In <strong>File Path(s)</strong>,
    you entered the following:</p><p><code>k8s/multiple-overrides/values-override/service-override1.yaml,
    k8s/multiple-overrides/values-override/service-override2.yaml, k8s/multiple-overrides/values-override/service-override3.yaml</code></p><p>But
    now you want to provide the path for the second file (k8s/multiple-overrides/values-override/service-override2.yaml)
    at deployment runtime.</p><p>In the Workflow that deploys the Service, you simply
    create a Workflow variable named <strong>filePath</strong>:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593643314130/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>This
    Workflow variable has a default value, but you can simply leave it blank.</p><p>Now,
    in your Service Configuration <strong>Values YAML Override</strong>, in <strong>File
    Path(s)</strong>, you can replace the second file path with the Workflow variable
    expression <code>${workflow.variables.filePath}</code>:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593643456477/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Now,
    when you deploy the Workflow, you can provide the file path for that values.yaml
    override:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/p453sikbqt/1593643562518/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Next
    Steps</h3><ul><li><a href="/article/2j2vi5oxrq-define-kubernetes-manifests">Define
    Kubernetes Manifests</a></li><li><a href="/article/gkmgrz9shh-how-to-pass-variables-between-workflows">Pass
    Variables between Workflows</a></li><li><a href="/article/revc37vl0f-passing-variable-into-workflows">Passing
    Variables into Workflows and Pipelines from Triggers</a></li></ul><p></p>'
  slug: override-values-yaml-files
  tags:
  - Values YAML Override
  is_live: true
