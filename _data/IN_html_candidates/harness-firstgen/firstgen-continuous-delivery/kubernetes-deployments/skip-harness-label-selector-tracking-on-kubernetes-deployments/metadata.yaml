type: article
article_id: nce6e8s725
user_id: mfr0nxh4be
category_id: n03qfofd5w
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Skip Harness Label Selector Tracking on Kubernetes Deployments
slug: skip-harness-label-selector-tracking-on-kubernetes-deployments
description: 'Prevent Harness from using its default Kubernetes label selector harness.io/track:
  stable during Canary deployments.'
short_version: 'Prevent Harness from using its default Kubernetes label selector harness.io/track:
  stable during Canary deployments.'
tags: []
show_toc: false
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-02-23T00:37:37.336452Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Skip Harness Label Selector Tracking on Kubernetes Deployments
  description: 'Prevent Harness from using its default Kubernetes label selector harness.io/track:
    stable during Canary deployments.'
  short_version: 'Prevent Harness from using its default Kubernetes label selector
    harness.io/track: stable during Canary deployments.'
  body: '<div class="note-callout">Currently, this feature is behind the feature flag
    <code>SKIP_ADDING_TRACK_LABEL_SELECTOR_IN_ROLLING</code>. Contact <a href="mailto:support@harness.io"
    target="_blank">Harness Support</a> to enable the feature.</div><p>You can prevent
    Harness from using its default Kubernetes label selector <code>harness.io/track:
    stable</code> during Canary deployments. Skipping this label can help when you
    have existing non-Harness deployed services or conflicts in naming.</p><h3>Review:
    Labels in Harness Kubernetes Canary Phases</h3><p>Default Harness Kubernetes Canary
    deployments are a two phase process that relies on Deployment object labels for
    tracking. </p><p>First, let&#39;s review the two phase Canary deployment:</p><ol><li><strong>Canary
    Phase:</strong> <ol><li>Harness creates a Canary version of the Kubernetes Deployment
    object defined in your Service Definition <strong>Manifests</strong> section.</li><li>All
    pods in the Canary Phase have label the <code>harness.io/track: canary</code>.
    Traffic could be routed to these pods using this label.</li><li>Once that Deployment
    is verified, the Canary Delete step deletes it by default.<br/>Using this method,
    Harness provides a Canary group as a way to test the new build, run your verification,
    and then roll out to the following Primary group.</li></ol></li><li><strong>Primary
    Phase:</strong> <ol><li>Runs the actual Deployment using a Kubernetes Rolling
    Update with the number of pods you specify in the <strong>Manifests</strong> files
    (for example, <code>replicas: 3</code>).</li><li>All pods in the Primary Phase
    have label <code>harness.io/track: stable</code>.</li></ol></li></ol><h3>Review:
    Invalid Value LabelSelector</h3><p>Kubernetes labels are immutable. If a specific
    Deployment object already exists in the cluster, you cannot change its labels.</p><p>This
    can cause problems with the default Harness Kubernetes Canary deployments use
    of <code>harness.io/track</code> if the Deployment object already exists before
    the Harness deployment.</p><p>If you are deploying different Harness Deployment
    objects to the same cluster, you might encounter a Selector error such as this:</p><pre>The
    Deployment “harness-example-deployment” is invalid: spec.selector: <br/>  Invalid
    value: v1.LabelSelector{MatchLabels:map[string]string{“app”:“harness-example”},
    <br/>  MatchExpressions:[]v1.LabelSelectorRequirement{}}: field is immutable</pre><p></p><p>Most
    often, you can simply delete or rename the Deployment object. In some case, this
    can be a problem because you will have downtime when the object is restarted.</p><p>As
    an alternative, you can force Harness to skip the <code>harness.io/track: stable</code>
    label in the Canary deployment.</p><h3>Skipping the Tracking Label</h3><p>Once
    the relevant feature flag is enabled, a Harness Kubernetes Canary deployment will
    work like this:</p><ul><li>If the Deployment object already exists in the cluster
    <u>without</u> the <code>harness.io/track: stable</code>, Harness will not add
    the <code>harness.io/track: stable</code> label to the Deployment object.</li><li>If
    the Deployment object already exists <u>with</u> the <code>harness.io/track: stable</code>
    label, Harness will not delete it.</li><li>For any <u>new</u> Deployment object,
    Harness will not add the <code>harness.io/track: stable</code> label.</li></ul><p></p><p>
    </p><p> </p>'
  slug: skip-harness-label-selector-tracking-on-kubernetes-deployments
  tags: []
  is_live: true
