type: article
article_id: 78oginrhsh
user_id: mfr0nxh4be
category_id: n03qfofd5w
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Delete Kubernetes Resources
slug: delete-kubernetes-resources
description: Remove any deployed Kubernetes resources with the Delete step.
short_version: Remove any deployed Kubernetes resources with the Delete step.
tags:
- Delete step
- k8s.canaryWorkload
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2022-07-13T17:19:13.130322Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Delete Kubernetes Resources
  description: Remove any deployed Kubernetes resources with the Delete step.
  short_version: Remove any deployed Kubernetes resources with the Delete step.
  body: '<p>Remove any deployed Kubernetes resources with the Delete step.</p><h3>Before
    You Begin</h3><ul><li><a href="/article/2j2vi5oxrq-define-kubernetes-manifests">Define
    Kubernetes Manifests</a></li><li><a href="/article/2xp0oyubjj-create-a-kubernetes-canary-deployment">Create
    a Kubernetes Canary Deployment</a></li><li><a href="/article/ukftzrngr1-create-a-kubernetes-blue-green-deployment">Create
    a Kubernetes Blue/Green Deployment</a></li><li><a href="/article/dl0l34ge8l-create-a-kubernetes-rolling-deployment">Create
    a Kubernetes Rolling Deployment</a></li></ul><h3>Step 1: Add Delete Step</h3><p>In
    your Harness Workflow, click <strong>Add Step</strong>, and select <strong>Delete</strong>.
    The Delete settings appear:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/eaj0xuegln/1580928964323/image.png"
    style="max-height:50%;max-width:50%;display:block;margin-left:auto;margin-right:auto"
    data-hd-height="50%" data-hd-width="50%" data-hd-align="center"/></figure><p>You
    can add a Delete step anywhere in your Workflow, but typically it is added in
    the <strong>Wrap Up</strong> section.</p><p>Wherever you add a Delete step, the
    resource you want to delete must already exist in the cluster. For example, if
    the resource is added in Phase 2 of a Canary Workflow, the Delete step should
    not be placed in Phase 1.</p><h3>Step 2: Select Resources to Delete</h3><p>In
    <strong>Resources</strong>, enter the resources to be deleted.</p><p>There are
    a few ways to specify the resource to be removed.</p><h4>Harness Built-in Variables</h4><p>Using
    the Harness built-in variable, <code>${k8s.canaryWorkload}</code>.</p><p>At runtime,
    this will resolve to something like:</p><pre>Deployment/harness-example-deployment-canary</pre><p></p><div
    class="note-callout">The deployed Kubernetes object must reach steady state for
    Harness to be able to resolve the <code>${k8s.canaryWorkload}</code> expression.
    Consequently, if the Canary Deployment step fails to deploy the workload to steady
    state, Harness cannot set the <code>${k8s.canaryWorkload}</code> expression and
    it will not execute successfully.</div><h4>Resource Name</h4><p>Using a resource
    name in the format <code>[namespace]/Kind/Name</code>, with <code>namespace</code> being
    optional.</p><p>You must add a <code>Kind</code> before the resource name, like
    <code>Deployment</code> in this example:</p><p><code>Deployment/harness-example-deployment-canary</code></p><h4>Multiple
    Resources</h4><p>Using a comma-separated list to delete multiple resources. For
    example:</p><p><code>Deployment/harness-example-deployment-canary,ConfigMap/harness-example-config</code></p><h4>All
    Resources</h4><p>Enter an asterisk (*) in <strong>Resources</strong>.</p><div
    class="note-callout">You cannot use the asterisk as a wildcard to match arbitrary
    resources. It is simply used to indicate <u>all</u> resources.</div><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/78oginrhsh/1586986424971/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Using
    an asterisk (*) deletes all of the releases specified in the Infrastructure Definition <strong>Release
    Name</strong> setting used by the Workflow. The namespace is not deleted.</p><h5>Delete
    Namespaces</h5><p>If you want to delete the namespace(s) defined in the <strong>Manifests</strong> section
    of the Harness Service used in this deployment, click the <strong>Delete all namespaces
    defined in the Manifests section of the Harness Service used in this deployment</strong> checkbox.</p><figure><a
    href="https://files.helpdocs.io/kw8ldg1itf/articles/crzdm3458j/1579626461362/image.png"><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/crzdm3458j/1579626461362/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></a></figure><div
    class="warning-callout">Ensure that you are not deleting a namespace that is used
    by other deployments.</div><h3>Option: Enter the Path and Name of the Manifest</h3><p></p><p>The
    Delete step will delete any resource in a Service <strong>Manifest</strong> section,
    Helm Source Repository, or Helm Repository explicitly.</p><p>The Delete step does
    not support resources in Kustomize or OpenShift Templates.</p><h4>Service Manifest</h4><p>Select
    the <strong>Use File Paths</strong> to enable this option.</p><p>You must provide
    the path and name of the file in <strong>File Paths</strong>, and Harness will
    delete the resource.</p><p>For resources in the Service <strong>Manifests</strong>
    section, enter the folder name and the file name of the manifest in the Harness
    Service deployed by this Workflow. For example, <strong>templates/jobs.yaml</strong>.</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/78oginrhsh/1591899196970/image.png"/></figure><p></p><p>You
    can include multiple resource files by separating them with commas, for example:</p><p><strong>templates/jobs.yaml,
    templates/statefulSet.yaml</strong>.</p><div class="note-callout">If you apply
    the ignore comment <code># harness.io/skip-file-for-deploy</code> to a resource
    but do not use the resource in an Kubernetes Apply step, the resource is never
    deployed and does not need to be deleted.</div><h4>Helm Source Repository</h4><p>For
    resources in a Helm chart, provide the path and name of the file from the root
    folder of the repo.</p><p>For example, the following Service uses a remote manifest
    that points to a Helm chart at <strong>https://github.com/helm/charts.git/stable/chartsmuseum</strong>.
    In the chart&#39;s <strong>templates</strong> folder, there is a <strong>deployment.yaml</strong>
    file. In <strong>File Path</strong>, you reference <strong>templates/deployment.yaml</strong>.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/78oginrhsh/1592592042572/image.png"/></figure><h4>Helm
    Chart Repository</h4><p>For a Helm Chart Repository, you cannot see the resources
    as easily as a Helm Source Repository, but you can view the resources in the chart
    by extracting it or by viewing them in a deployment log.</p><p>For example, here
    is a deployment log showing the chart resources in <strong>Fetch Files</strong>,
    a Service <strong>Remote Manifests</strong> using the chart as a Helm Chart Repository,
    and Delete step deleting the <strong>deployment.yaml</strong> resource:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/78oginrhsh/1592850637490/image.png"/></figure><h3>Option:
    Delegate Selector</h3><p>If your Workflow Infrastructure Definition&#39;s Cloud
    Provider uses a Delegate Selector (supported in Kubernetes Cluster and AWS Cloud
    Providers), then the Workflow uses the selected Delegate for all of its steps.</p><p>In
    these cases, you shouldn&#39;t add a Delegate Selector to any step in the Workflow.
    The Workflow is already using a Selector via its Infrastructure Definition&#39;s
    Cloud Provider.</p><p>If your Workflow Infrastructure Definition&#39;s Cloud Provider
    isn&#39;t using a Delegate Selector, and you want this Workflow step to use a
    specific Delegate, do the following:</p><p>In <strong>Delegate Selector</strong>,
    select the Selector for the Delegate(s) you want to use. You add Selectors to
    Delegates to make sure that they&#39;re used to execute the command. For more
    information, see <a href="/article/c3fvixpgsl-select-delegates-for-specific-tasks-with-selectors">Select
    Delegates with Selectors</a>.</p><p>Harness will use Delegates matching the Selectors
    you add.</p><p>If you use one Selector, Harness will use any Delegate that has
    that Selector.</p><p>If you select two Selectors, a Delegate must have both Selectors
    to be selected. That Delegate might also have other Selectors, but it must have
    the two you selected.</p><div class="note-callout">You can use expressions for
    Harness built-in variables or Account Default variables in <strong>Delegate Selectors</strong>.
    When the variable expression is resolved at deployment runtime, it must match
    an existing Delegate Selector.<br/><br/>For example, if you have a Delegate Selector <strong>prod</strong> and
    the Workflow is using an Environment also named <strong>prod</strong>, the Delegate
    Selector can be <code>${env.name}</code>. This is very useful when you match Delegate
    Selectors to Application component names such as Environments, Services, etc.
    It&#39;s also a way to template the Delegate Selector setting.</div><p></p><h3>Example
    1: Deleting ${k8s.canaryWorkload}</h3><p>Here is an example of the log from a
    Delete command:</p><pre class="hljs sql">Initializing..<br/>...<br/>Resources
    to delete are: <br/>- Deployment/harness-example-deployment-canary<br/>Done.</pre><h3>Example
    2: Deleting All Resources and Namespaces</h3><p>Here is an example using <strong>*</strong> and
    the <strong>Delete all namespaces defined in the Manifests section of the Harness
    Service used in this deployment</strong> setting:</p><pre class="hljs sql">All
    Resources are selected for deletion<br/>Delete Namespace is set to: true<br/>Fetching
    all resources created for release: release-44e74aca-279f-3b4a-bb15-06d750393a8d<br/><br/>Resources
    to delete are: <br/>- adwait-12/Deployment/harness-example-deployment<br/>- adwait-12/Service/harness-example-svc<br/>-
    adwait-12/ConfigMap/release-44e74aca-279f-3b4a-bb15-06d750393a8d<br/>- adwait-12/ConfigMap/harness-example-2<br/>-
    adwait-12/ConfigMap/harness-example-1<br/>- adwait-12/Secret/harness-example-2<br/>-
    adwait-12/Secret/harness-example-1<br/>- adwait-12/Namespace/adwait-12<br/>Done.</pre><h3>Notes</h3><ul><li><strong>Canary
    Delete and Traffic Management</strong> —If you are using the <strong>Traffic Split</strong> step
    or doing Istio traffic shifting using the <strong>Apply step</strong>, move the <strong>Canary
    Delete</strong> step from <strong>Wrap Up</strong> section of the <strong>Canary</strong> phase
    to the <strong>Wrap Up</strong> section of the Primary phase.<br/>Moving the Canary
    Delete step to the Wrap Up section of the Primary phase will prevent any traffic
    from being routed to deleted pods before traffic is routed to stable pods in the
    Primary phase. See <a href="/article/2xp0oyubjj-create-a-kubernetes-canary-deployment">Create
    a Kubernetes Canary Deployment</a> and <a href="/article/1qfb4gh9e8-set-up-kubernetes-traffic-splitting">Set
    Up Kubernetes Traffic Splitting</a>.</li></ul><h3>Next Steps</h3><ul><li><a href="/article/va3trqfy49-scale-kubernetes-pods">Scale
    Kubernetes Pods</a></li><li><a href="/article/4vjgmjcj6z-deploy-manifests-separately-using-apply-step">Deploy
    Manifests Separately using Apply Step</a></li><li><a href="/article/7bpdtvhq92-workflow-variables-expressions">Kubernetes
    Workflow Variable Expressions</a></li></ul><p></p>'
  slug: delete-kubernetes-resources
  tags:
  - Delete step
  - k8s.canaryWorkload
  is_live: true
