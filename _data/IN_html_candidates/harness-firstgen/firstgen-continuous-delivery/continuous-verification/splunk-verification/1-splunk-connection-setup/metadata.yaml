type: article
article_id: 1ruyqq4q4p
user_id: mfr0nxh4be
category_id: wnxi7xc4a4
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Connect to Splunk
slug: 1-splunk-connection-setup
description: Connect Splunk as a Harness Verification Provider, to verify the success
  of your deployments and live microservices.
short_version: Connect Harness to Splunk and verify the success of your deployments
  and live microservices.
tags:
- Splunk
- Verification Provider
- verification
- Deployment Verification
- setup
- Connector
- log
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:22:47.532259Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Connect to Splunk
  description: Connect Splunk as a Harness Verification Provider, to verify the success
    of your deployments and live microservices.
  short_version: Connect Harness to Splunk and verify the success of your deployments
    and live microservices.
  body: '<p></p><p>The first step in using Splunk with Harness is to set up an Splunk
    Verification Provider in Harness.</p><p>A Harness Verification Provider is a connection
    to monitoring tools such as Bugsnag. Once Harness is connected, you can use Harness
    24/7 Service Guard and Deployment Verification with your Splunk data and analysis.</p><p>In
    this topic:</p><ul><li> <a href="#before_you_begin">Before You Begin</a></li><li>
    <a href="#visual_summary">Visual Summary</a></li><li> <a href="#step_1_assign_permissions_for_api_connection">Step
    1: Assign Permissions for API Connection</a></li><li> <a href="#step_2_add_splunk_verification_provider">Step
    2: Add Splunk Verification Provider</a></li><li> <a href="#step_3_url">Step 3:
    URL</a></li><li> <a href="#step_4_username_and_encrypted_password">Step 4: Username
    and Encrypted Password</a></li><li> <a href="#step_5_display_name">Step 5: Display
    Name</a></li><li> <a href="#step_6_usage_scope">Step 6: Usage Scope</a></li><li>
    <a href="#step_7_test_delegate_connection_to_splunk_server">Step 7: Test Delegate
    Connection to Splunk Server</a></li><li> <a href="#next_steps">Next Steps</a></li></ul><p></p><h3>Before
    You Begin</h3><ul><li>See the <a href="/article/dujtd6ek5p-splunk-verification-overview">Splunk
    Verification Overview</a>.</li></ul><p></p><h3>Step 1: Assign Permissions for
    API Connection</h3><p>Splunk APIs require that you authenticate with a non-SAML
    account. To access your Splunk Cloud deployment using the Splunk REST API and
    SDKs, submit a support case requesting access on the Support Portal. For managed
    deployments, Splunk Support opens port 8089 for REST access. You can specify a
    range of IP addresses to control who can access the REST API. For self-service
    deployments, Splunk Support defines a dedicated user and sends you credentials
    that enable that user to access the REST API. For information on Splunk self-service
    accounts, see <a href="http://docs.splunk.com/Documentation/Splunk/7.2.0/RESTTUT/RESTandCloud"
    target="_blank">Using the REST API with Splunk Cloud</a>.</p><p>Ensure that the
    Splunk user account used to authenticate Harness with Splunk is assigned to a
    role that contains the following REST-related capabilities:</p><ul><li>Search.</li><li>Access
    to the indexes you want to search.</li></ul><h4>Permissions Setup Example</h4><p>Here,
    we&#39;ve created a new Splunk role named <strong>Harness User</strong>, and assigned
    it search capability:</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/3qh2trdzei/1579310020092/image.png"
    style="max-height:100%;max-width:100%" data-hd-height="100%" data-hd-width="100%"/></figure><p></p><p>We&#39;ve
    given this role access to <strong>All non-internal indexes</strong>. However,
    we could restrict the access to only the few relevant indexes:</p><p></p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/3qh2trdzei/1579311236066/image.png"
    style="max-height:100%;max-width:100%" data-hd-height="100%" data-hd-width="100%"/></figure><p></p><p></p><h3>Step
    2: Add Splunk Verification Provider</h3><p>To add Splunk as a verification provider,
    do the following:</p><ol><li>Click <strong>Setup</strong>.</li><li>Click <strong>Connectors</strong>.</li><li>Click
    <strong>Verification Providers</strong>.</li><li>Click <strong>Add Verification
    Provider</strong>, and select <strong>Splunk</strong>. The <strong>Add Splunk
    Verification Provider</strong> dialog appears.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/1ruyqq4q4p/1587769403671/image.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure>The
    <strong>Add Splunk Verification Provider</strong> dialog has the following fields.</li></ol><p></p><h3>Step
    3: URL</h3><p>Enter the URL for accessing the REST API on the Splunk server. Include
    the port number in the format <strong>https://&lt;deployment-name&gt;.cloud.splunk.com:8089</strong>:
    The default port number is 8089.The port number is required for hosted Splunk,
    also. For example: <strong>https://mycompany.splunkcloud.com:8089</strong>.For
    more information, see <a href="http://docs.splunk.com/Documentation/Splunk/7.1.3/RESTTUT/RESTandCloud"
    target="_blank">Using the REST API with Splunk Cloud</a> from Splunk.</p><h3>Step
    4: Username and Encrypted Password</h3><div class="note-callout">For secrets and
    other sensitive settings, select or create a new <a href="/article/ygyvp998mu-use-encrypted-text-secrets">Harness
    Encrypted Text secret</a>.</div><p>Enter the account credentials to authenticate
    with the server. A user role that is <strong>not</strong> authenticated with SAML
    is required. You do not need an admin role.</p><h3>Step 5: Display Name</h3><p>Enter
    a display name for the provider. If you are going to use multiple providers of
    the same type, ensure you give each provider a different name.</p><h3>Step 6:
    Usage Scope</h3><p>Usage scope is inherited from the secrets used in the settings.</p><h3>Step
    7: Test Delegate Connection to Splunk Server</h3><p><strong>Delegate connection</strong>
    — If the Test button fails, you can use the following script to verify that the
    Harness Delegate&#39;s host can connect to the Splunk server:</p><pre>curl -k
    https://&lt;splunkURL&gt;:8089/services/auth/login --data-urlencode username=&lt;userName&gt;
    --data-urlencode password=&#39;&lt;password&gt;&#39;</pre><p>If this script fails,
    it is likely that the host running the Harness Delegate has networking issues,
    or there is an authentication issue.</p><p><strong>Search Job Permission</strong>
    — As part of validating the configuration, Harness creates a search job as a test.
    This test will fail if the user account used for the Harness Splunk Verification
    Provider does not have the permission to search jobs.</p><p>To test if the user
    account can run searches, use the following cURL command.</p><pre>curl -u admin:changeme
    -k https://localhost:8089/services/search/jobs -d search=&#34;search *&#34;</pre><p></p><h3>Next
    Steps</h3><ul><li><a href="/article/feiv05dmnk-2-24-7-service-guard-for-splunk">Monitor
    Applications 24/7 with Splunk</a></li><li><a href="/article/zi7doy7zn8-3-verify-deployments-with-splunk">Verify
    Deployments with Splunk</a></li></ul><p></p>'
  slug: 1-splunk-connection-setup
  tags:
  - Splunk
  - Verification Provider
  - verification
  - Deployment Verification
  - setup
  - Connector
  - log
  is_live: true
