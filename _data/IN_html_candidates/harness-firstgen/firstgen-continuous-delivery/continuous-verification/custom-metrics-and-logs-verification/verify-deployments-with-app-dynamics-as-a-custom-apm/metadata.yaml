type: article
article_id: 0qvier4m49
user_id: wz6xkfcc9i
category_id: ep5nt3dyrb
author:
  name: Chakravarthy Tenneti
  profile_image: https://www.gravatar.com/avatar/790db061bb8f8fb094e4d4b19a390f3b?d=mm&s=150
title: Verify Deployments with AppDynamics as a Custom APM
slug: verify-deployments-with-app-dynamics-as-a-custom-apm
description: After adding AppDynamics as a Custom Verification Provider, you can use
  it as a verification step in a Workflow.
short_version: After adding AppDynamics as a Custom Verification Provider, you can
  use it as a verification step in a Workflow.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:19.952025Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Verify Deployments with AppDynamics as a Custom APM
  description: After adding AppDynamics as a Custom Verification Provider, you can
    use it as a verification step in a Workflow.
  short_version: After adding AppDynamics as a Custom Verification Provider, you can
    use it as a verification step in a Workflow.
  body: '<p></p><p>After adding AppDynamics as a Custom Verification Provider, you
    can use it as a verification step in a Workflow. The following sections outline
    how to select the AppDynamics metrics you need.</p><p>In this topic:</p><ul><li>
    <a href="#before_you_begin">Before You Begin</a></li><li> <a href="#step_1_set_up_the_deployment_verification">Step
    1: Set Up the Deployment Verification</a></li><li> <a href="#step_2_metrics_data_server">Step
    2: Metrics Data Server</a></li><li> <a href="#step_3_metric_type">Step 3: Metric
    Type</a></li><li> <a href="#step_4_metric_collections">Step 4: Metric Collections</a></li><li>
    <a href="#step_5_metrics_name">Step 5: Metrics Name</a></li><li> <a href="#step_6_metrics_type">Step
    6: Metrics Type</a></li><li> <a href="#step_7_metrics_collection_url">Step 7:
    Metrics Collection URL</a></li><li> <a href="#metrics_method_settings">Step 8:
    Metrics Method</a></li><li> <a href="#step_9_transaction_name">Step 9: Transaction
    Name</a></li><li> <a href="#step_10_name">Step 10: Name</a></li><li> <a href="#step_11_metrics_value">Step
    11: Metrics Value</a></li><li> <a href="#step_12_timestamp">Step 12: Timestamp</a></li><li>
    <a href="#step_13_timestamp_format">Step 13: Timestamp Format</a></li><li> <a
    href="#step_14_expression_for_host_container_name">Step 14: Expression for Host/Container
    Name</a></li><li> <a href="#step_15_analysis_time_duration">Step 15: Analysis
    Time Duration</a></li><li> <a href="#step_16_data_collection_interval">Step 16:
    Data Collection Interval</a></li><li> <a href="#step_17_baseline_for_risk_analysis">Step
    17: Baseline for Risk Analysis</a></li><li> <a href="#step_18_algorithm_for_sensitivity">Step
    18: Algorithm for Sensitivity</a></li><li> <a href="#step_19_include_instances_from_previous_phases">Step
    19: Include instances from previous phases</a></li><li> <a href="#step_20_execute_with_previous_steps">Step
    20: Execute with previous steps</a></li></ul><p></p><h3>Before You Begin</h3><ul><li>See
    <a href="/article/e87u8c63z4-custom-verification-overview">Custom Verification
    Overview</a>.</li><li>See <a href="/article/w7tcb2frp9-connect-to-app-dynamics-as-a-custom-apm">Connect
    to AppDynamics as a Custom APM</a>.</li></ul><p></p><h3>Step 1: Set Up the Deployment
    Verification</h3><div class="tip-callout">You can add verification steps to a
    Workflow after you have performed at least one successful deployment.</div><p>To
    begin the Workflow setup:</p><ol><li>In Harness, open the Workflow that deploys
    the Service you will monitor with AppDynamics.</li><li>In the Workflow, in <strong>Verify
    Service</strong>, click <strong>Add Step</strong>.</li><li>In the resulting <strong>Add
    Step</strong> settings, select <strong>Performance Monitoring</strong> &gt; <strong>Custom Metrics</strong>.</li><li>Click
    <strong>Next</strong>. The <strong>Configure </strong><strong>Custom Metrics</strong>
    settings appear.</li></ol><h3>Step 2: Metrics Data Server</h3><p>In the <strong>Metrics
    Data Server</strong> drop-down, select the Custom Verification Provider.</p><h3>Step
    3: Metric Type</h3><p>Set the <strong>Metric Type</strong> to either <strong>Infrastructure</strong>
    or <strong>Transaction</strong>.</p><p>Your settings will now look something like
    this:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1582335894124/image.png"
    style="max-height:65%;max-width:65%" data-hd-height="65%" data-hd-width="65%"/></figure><p></p><h3>Step
    4: Metric Collections</h3><p>Beside <strong>Metric Collections</strong>, click
    <strong>Add</strong> to display the <strong>New Metrics Collection</strong> settings.</p><p>Most
    fields here define Harness settings for collecting and grouping metrics. The exceptions
    are settings where you will map JSON response keys to Harness fields.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1582336025210/image.png"
    style="max-height:65%;max-width:65%" data-hd-height="65%" data-hd-width="65%"/></figure><p></p><p>Fill
    out the <strong>New Metrics Collection</strong> settings using the following information.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577153813007/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><h3>Step
    5: Metrics Name</h3><p>Enter an arbitrary name for this metric. (This is not an
    AppDynamics value; it will be internal to Harness.)</p><h3>Step 6: Metrics Type</h3><p>Select
    the type of events you want to monitor. If you selected <strong>Infrastructure</strong>
    back in the <strong>Metrics Verification</strong> settings, your choices here
    are <strong>Infrastructure</strong> or <strong>Values</strong>. If you selected
    <strong>Transaction</strong> in the <strong>Metrics Verification</strong> settings,
    your choices here are <strong>Errors</strong>, <strong>Response Time</strong>,
    or <strong>Throughput</strong>.</p><h4>Always Use Throughput with Error and Response
    Time Metrics</h4><p>Whenever you use the Error metric type, you should also add
    another metric for Throughput with the same Transaction Name. </p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/0qvier4m49/1606857927356/image.png"/></figure><p>Harness
    analyze errors as error percentage and without the throughput the error number
    does not provide much information.</p><p>The same setup should used with the Response
    Time metric also. Whenever you set up a Response Time metric, setup a Throughput
    metric with the same Transaction Name.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/0qvier4m49/1606857610464/image.png"/></figure><h3>Step
    7: Metrics Collection URL</h3><p>This is the API query that will return a JSON
    response. See the next section for details on setting up the query.</p><p>The
    query for the <strong>Metrics Collection URL</strong> follows this syntax:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business
    Transaction Performance|Business Transactions|&lt;tier-name&gt;|/&lt;Business-Transaction-name&gt;/&lt;Metric-name&gt;&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Above,
    the values in <code>&lt;...&gt;</code> brackets are placeholders for parameters
    that you will define. The values in <code>${...}</code> braces are placeholders
    used for querying the data, which will be substituted at runtime with real values.
    To build your literal query:</p><ol><li>In the AppDynamics Metric Browser&#39;s
    Metric Tree, right-click the metric you want to monitor, and then select <strong>Copy
    REST URL</strong>.<br/>In the example below, we&#39;ve selected the <strong>Throughput</strong>
    metric <code>/todolist/exception/Calls per Minute</code>. Its REST URL is now
    on the clipboard:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577225482694/image.png"
    style="max-height:100%;max-width:100%" data-hd-height="100%" data-hd-width="100%"/></figure></li><li>Paste
    the resulting URL into the <strong>Metrics Collection URL</strong> field.</li><li>Truncate
    the URL to the substring that follows <code>.../controller/</code>.</li></ol><p>Your
    literal query—as copied, pasted into the <strong>Metrics Collection URL</strong>
    field, and then truncated—will now look something like this:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BEFORE_NOW&amp;duration-in-mins=60</pre><p
    style="counter-increment:li 3" start="4">At the end of the query, replace this
    substring from AppDynamics&#39; default REST URL:</p><pre>&amp;time-range-type=BEFORE_NOW&amp;duration-in-mins=60</pre><p>...with
    this substring, whose <code>${...}</code> placeholders are used to query for dynamic
    runtime data:</p><pre>&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Your
    literal query should now look something like this:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Next,
    you will refine your query by specifying the REST method, and by mapping response
    keys to Harness fields.</p><h3 id="metrics_method_settings">Step 8: Metrics Method</h3><p>In
    the <strong>Metrics Method</strong> drop-down, select either <strong>GET</strong>
    or <strong>POST</strong>, depending on the metric you&#39;re monitoring.</p><div
    class="tip-callout">If you select <strong>POST</strong> here, the <strong>Metric
    Collection Body</strong> field appears. Enter the JSON body to send as a payload
    when making a REST call to AppDynamics. For details, see <a href="/article/5h6e4zudr2-verify-deployments-with-custom-metrics">Verify
    Deployments with Custom APMs and Logs</a>.</div><p>The remaining Metrics Collection
    settings map the keys in the JSON response to Harness fields.</p><h3>Step 9: Transaction
    Name</h3><p>Select <strong>Fixed</strong> or <strong>Dynamic</strong>, depending
    on the transaction name. In our example, we will use <strong>Fixed</strong>.</p><div
    class="tip-callout">If you select <strong>Dynamic</strong>, you will see the <strong>Transaction
    Name Path</strong> and <strong>Regex to transform Transaction Name</strong> fields.
    The <strong>Transaction Name Path</strong> is filled out in the same way as <strong>Name</strong>
    field listed just below. You use <strong>Regex to transform Transaction Name</strong>
    to truncate the value of the <strong>Transaction Name Path</strong>, if needed.</div><h3>Step
    10: Name</h3><p>Enter the Business Transaction name, as it appears in the AppDynamics
    Metric Tree. In this example, you would enter: <code>/todolist/exception</code>.</p><h3>Step
    11: Metrics Value</h3><p>To map this value, run the query: Click <strong>Guide
    from Example</strong>, then click <strong>SEND</strong> from the resulting pop-up:</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147024692/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>
    In the JSON response, click the <code>value</code> key. This maps it into Harness&#39;
    <strong>Metrics Value</strong> field:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147194600/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p></p><h3>Step
    12: Timestamp</h3><p>As with the preceding field, click this field&#39;s <strong>Guide
    from Example</strong> link to query AppDynamics.</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147395000/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>In
    the JSON response, click the <code>startTimeInMillis</code> key, which includes
    the timestamp. This maps this key to Harness&#39; <strong>Timestamp</strong> field.</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147504759/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p></p><h3>Step
    13: Timestamp Format</h3><p>Optionally, enter a timestamp format, following the
    Java <a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html"
    target="_blank">SimpleDateFormat</a>. An example timestamp syntax might be <code>yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSX</code>.
    If you leave this field empty, Harness will use the default range of 1 hour previous
    (<code>now-1h</code>) to now.</p><p>When you&#39;ve filled in all the required
    Metrics Collection parameters, your query string in the <strong>Metrics Collection
    URL</strong> field will be modified to something like this:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Your
    <strong>New Metrics Collection</strong> settings will now look something like
    this:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577148359709/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>Click
    <strong>Test</strong>. If your configuration tests successfully, click <strong>Add</strong>
    to add this collection.</p><p>This returns you to the <strong>Custom APM Verification</strong>
    settings&#39; initial <strong>Metrics Verification</strong> page, to fill in the
    remaining settings.</p><p>Fill in the remaining <strong>Metrics Verification</strong>
    settings as follows:</p><h3>Step 14: Expression for Host/Container Name</h3><p>The
    expression entered here should resolve to a host/container name in your deployment
    environment. By default, the expression is <code>${host.hostName}</code>.</p><h3>Step
    15: Analysis Time Duration</h3><p>Set the duration for the verification step.
    If a verification step exceeds this value, the Workflow&#39;s <a href="/article/m220i1tnia-workflow-configuration#failure_strategy">Failure
    Strategy</a> is triggered. For example, if the Failure Strategy is <strong>Ignore</strong>,
    then the verification state is marked <strong>Failed</strong>, but the Workflow
    execution continues.</p><h3>Step 16: Data Collection Interval</h3><p>Specify how
    often Harness will collect data. For example, when the interval is <code>1</code>
    (1 minute), Harness will collect every minute. If it&#39;s <code>3</code>, we
    will collect every 3 minutes. If your total duration is 15 minutes and the interval
    is 3 minutes, Harness will collect every 3 minutes for a total of 5 times over
    15 minutes. Harness recommends the value <code>2</code>.</p><h3>Step 17: Baseline
    for Risk Analysis</h3><p>See <a href="/article/0avzb5255b-cv-strategies-and-best-practices">CV
    Strategies, Tuning, and Best Practices</a>.</p><h3>Step 18: Algorithm for Sensitivity</h3><p>Harness
    recommends that you normally accept this drop-down&#39;s <strong>Very sensitive</strong>
    default. If your analysis needs differ, you can flag fewer deviations as anomalies
    by instead selecting <strong>Moderately sensitive</strong> or <strong>Least sensitive</strong>.</p><h3>Step
    19: Include instances from previous phases</h3><p>If you are using this verification
    step in a multi-phase deployment, select this checkbox to include instances used
    in previous phases when collecting data. Do not apply this setting to the first
    phase in a multi-phase deployment.</p><h3>Step 20: Execute with previous steps</h3><p>Enable
    this check box to run this verification step in parallel with the previous steps
    in <strong>Verify Service</strong>.</p><p>When you&#39;ve entered all your <strong>Custom
    APM Verification</strong> settings, they will look something like this:</p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577149785252/image.png"
    style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>Click
    <strong>Submit</strong>. The AppDynamics Custom verification step is now added
    to the Workflow. Run your Workflow to see the results.</p><p></p>'
  slug: verify-deployments-with-app-dynamics-as-a-custom-apm
  tags: []
  is_live: true
