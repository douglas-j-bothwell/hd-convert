type: article
article_id: a14rx2n07o
user_id: x5amubrz4l
category_id: ep5nt3dyrb
author:
  name: Michael Katz
  profile_image: https://www.gravatar.com/avatar/17fb3fc86ca54443de0da47ef350d8f0?d=mm&s=150
title: 6 – AppDynamics as a Custom APM
slug: appdynamics-custom
description: Add AppDynamics to Harness as a custom APM. This expands monitoring beyond
  BTs (Business Transactions). You can monitor specific metrics of interest, such
  as JVM data.
short_version: Add AppDynamics to Harness as a custom APM. This expands monitoring
  beyond BTs, to cover specific metrics of interest, such as JVM data.
tags:
- AppDynamics
- Verification Provider
- verification
- CV
- Metrics Provider
- BT
- setup
- risk analysis
show_toc: true
is_private: false
is_published: false
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2021-05-12T17:21:55.593481Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: 6 – AppDynamics as a Custom APM
  description: Add AppDynamics to Harness as a custom APM. This expands monitoring
    beyond BTs (Business Transactions). You can monitor specific metrics of interest,
    such as JVM data.
  short_version: Add AppDynamics to Harness as a custom APM. This expands monitoring
    beyond BTs, to cover specific metrics of interest, such as JVM data.
  body: |-
    <p>As an alternative to Harness&#39; <a href="/article/2zxfjt67yb-app-dynamics-verification-overview">standard AppDynamics integration</a>, you can use this guide to add AppDynamics to Harness as a custom APM. This approach enables you to expand monitoring beyond Business Transactions, to cover specific metrics of interest (for example, JVM data).</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;cv_provider_setup&#34;&gt;&lt;/span&gt;"><p><span id="cv_provider_setup"></span></p>
    </div><h3 id="custom_verification_provider">Custom Verification Provider Setup</h3><p>To add a Custom Metrics Provider using AppDynamics, do the following:</p><ol><li>In Harness Manager, click <strong>Setup</strong> &gt; <strong>Connectors</strong> &gt; <strong>Verification Providers</strong>.</li><li>Click <strong>Add Verification Provider</strong>. From the drop-down, select <strong>Custom Verification</strong>.<br/><br/>This opens the <strong>Metrics Data Provider</strong> settings.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1576888672985/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li><li>In <strong>Type</strong>, select <strong>Metrics Data Provider</strong>, as shown above.</li><li>In <strong>Display Name</strong>, give the Verification Provider an arbitrary name. (You will use this name to select this provider in a Workflow.)</li><li>In <strong>Base URL</strong>, enter: <code>https://&lt;your-AppDynamics-account-name&gt;.saas.appdynamics.com/controller</code></li><li>In <strong>Headers</strong>, click <strong>Add Headers</strong>, and add the following row:<br/><br/><table><tbody><tr><td><p><strong>Key</strong></p></td><td><p><strong>Value</strong></p></td><td><p><strong>Encrypted Value</strong></p></td></tr><tr><td><p>Authorization</p></td><td><p>Enter a base 64–encoded version of this string, representing your AppDynamics credentials:</p><p><code>&lt;username&gt;@&lt;account-name&gt;:&lt;password&gt;</code></p><p>You can also use an Open Authorization (OAuth) token-based authentication. Instead of the above credentials combination, enter your token.</p><p>For more information about generating the token, see <a href="https://docs.appdynamics.com/display/PRO45/API+Clients">AppDynamics API Clients documentation</a>.</p></td><td><p>Checked</p></td></tr></tbody></table></li><li>In <strong>Validation Path</strong>, enter <code>rest/applications?output=json</code>.<br/>The settings will now look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1576888837271/image.png" style="max-height:75%;max-width:75%" data-hd-height="75%" data-hd-width="75%"/></figure></li><li>Click <strong>Test</strong> to verify your custom Connector.</li><li>If the test succeeds, click <strong>Submit</strong> to save the Connector.</li></ol><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;wf_verification&#34;&gt;&lt;/span&gt;"><p><span id="wf_verification"></span></p>
    </div><h3 id="workflow_verification">Workflow Verification</h3><p>Now that you have the Verification Provider set up, you can use it as a verification step in a Workflow. The following sections outline how to select the AppDynamics metrics you need.</p><div class="tip-callout">You can add verification steps to a Workflow after you have performed at least one successful deployment.</div><p>To begin the Workflow setup:</p><ol><li>In Harness, open the Workflow that deploys the Service you will monitor with AppDynamics.</li><li>In the Workflow, in <strong>Verify Service</strong>, click <strong>Add Step</strong>.</li><li>In the resulting <strong>Add Step</strong> settings, select <strong>Performance Monitoring</strong> &gt; <strong>Custom Metrics</strong>.</li><li>Click <strong>Next</strong>. The <strong>Configure </strong><strong>Custom Metrics</strong> settings appear.</li><li>In the <strong>Metrics Data Server</strong> drop-down, select the Custom Verification Provider you <a href="#cv_provider_setup">set up above</a>.</li><li>Set the <strong>Metric Type</strong> to either <strong>Infrastructure</strong> or <strong>Transaction</strong>.<br/><br/>Your settings will now look something like this:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1582335894124/image.png" style="max-height:65%;max-width:65%" data-hd-height="65%" data-hd-width="65%"/></figure></li><li>Beside <strong>Metric Collections</strong>, click <strong>Add</strong> to display the <strong>New Metrics Collection</strong> settings.<br/><br/>Most fields here define Harness settings for collecting and grouping metrics. The exceptions are settings where you will map JSON response keys to Harness fields.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1582336025210/image.png" style="max-height:65%;max-width:65%" data-hd-height="65%" data-hd-width="65%"/></figure></li></ol><div class="hd--md" data-hd-markdown="&lt;span id=&#34;collection_settings&#34;&gt;&lt;/span&gt;"><p><span id="collection_settings"></span></p>
    </div><h4>Metrics Collection Settings</h4><p>Fill out the <strong>New Metrics Collection</strong> settings using the following information.</p><p></p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577153813007/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><ul><li><strong>Metrics Name</strong> – Enter an arbitrary name for this metric. (This is not an AppDynamics value; it will be internal to Harness.)</li><li><strong>Metrics Type</strong> – Select the type of events you want to monitor. If you selected <strong>Infrastructure</strong> back in the <strong>Metrics Verification</strong> settings, your choices here are <strong>Infrastructure</strong> or <strong>Values</strong>. If you selected <strong>Transaction</strong> in the <strong>Metrics Verification</strong> settings, your choices here are <strong>Errors</strong>, <strong>Response Time</strong>, or <strong>Throughput</strong>.</li><li><strong>Metrics Collection URL</strong> – This is the API query that will return a JSON response. See the next section for details on setting up the query.</li></ul><p> </p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;collection_url&#34;&gt;&lt;/span&gt;"><p><span id="collection_url"></span></p>
    </div><h5>Metrics Collection URL</h5><p>The query for the <strong>Metrics Collection URL</strong> follows this syntax:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business Transaction Performance|Business Transactions|&lt;tier-name&gt;|/&lt;Business-Transaction-name&gt;/&lt;Metric-name&gt;&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Above, the values in <code>&lt;...&gt;</code> brackets are placeholders for parameters that you will define. The values in <code>${...}</code> braces are placeholders used for querying the data, which will be substituted at runtime with real values. To build your literal query:</p><ol><li>In the AppDynamics Metric Browser&#39;s Metric Tree, right-click the metric you want to monitor, and then select <strong>Copy REST URL</strong>.<br/><br/>In the example below, we&#39;ve selected the <strong>Throughput</strong> metric <code>/todolist/exception/Calls per Minute</code>. Its REST URL is now on the clipboard:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577225482694/image.png" style="max-height:100%;max-width:100%" data-hd-height="100%" data-hd-width="100%"/></figure></li><li>Paste the resulting URL into the <strong>Metrics Collection URL</strong> field.</li><li>Truncate the URL to the substring that follows <code>.../controller/</code>.</li></ol><p>Your literal query—as copied, pasted into the <strong>Metrics Collection URL</strong> field, and then truncated—will now look something like this:</p><p></p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BEFORE_NOW&amp;duration-in-mins=60</pre><p></p><ol><li style="counter-increment:li 3" start="4">At the end of the query, replace this substring from AppDynamics&#39; default REST URL:</li></ol><p></p><pre>&amp;time-range-type=BEFORE_NOW&amp;duration-in-mins=60</pre><p>...with this substring, whose <code>${...}</code> placeholders are used to query for dynamic runtime data:</p><p></p><pre>&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Your literal query should now look something like this:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p></p><p>Next, you will refine your query by specifying the REST method, and by mapping response keys to Harness fields.</p><p> </p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;metrics_method&#34;&gt;&lt;/span&gt;"><p><span id="metrics_method"></span></p>
    </div><h5>Metrics Method Settings</h5><p>In the <strong>Metrics Method</strong> drop-down, select either <strong>GET</strong> or <strong>POST</strong>, depending on the metric you&#39;re monitoring.</p><div class="tip-callout">If you select <strong>POST</strong> here, the <strong>Metric Collection Body</strong> field appears. Enter the JSON body to send as a payload when making a REST call to AppDynamics. For details, see <a href="/article/d959kzrl39-2-verify-deployments-with-custom-apms">Verify Deployments with Custom APMs and Logs</a>.</div><p> </p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;response_mapping&#34;&gt;&lt;/span&gt;"><p><span id="response_mapping"></span></p>
    </div><h5>Response Mapping Settings</h5><p>The remaining Metrics Collection settings map the keys in the JSON response to Harness fields.</p><ul><li><strong>Transaction Name</strong> – Select <strong>Fixed</strong> or <strong>Dynamic</strong>, depending on the transaction name. In our example, we will use <strong>Fixed</strong>.<div class="tip-callout">If you select <strong>Dynamic</strong>, you will see the <strong>Transaction Name Path</strong> and <strong>Regex to transform Transaction Name</strong> fields. The <strong>Transaction Name Path</strong> is filled out in the same way as <strong>Name</strong> field listed just below. You use <strong>Regex to transform Transaction Name</strong> to truncate the value of the <strong>Transaction Name Path</strong>, if needed.</div></li><li><strong>Name</strong> – Enter the Business Transaction name, as it appears in the AppDynamics Metric Tree. In this example, you would enter: <code>/todolist/exception</code>.</li><li><strong>Metrics Value</strong> – To map this value, run the query: Click <strong>Guide from Example</strong>, then click <strong>SEND</strong> from the resulting pop-up:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147024692/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure> In the JSON response, click the <code>value</code> key. This maps it into Harness&#39; <strong>Metrics Value</strong> field:<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147194600/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure></li><li><strong>Timestamp</strong> – As with the preceding field, click this field&#39;s <strong>Guide from Example</strong> link to query AppDynamics.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147395000/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure>In the JSON response, click the <code>startTimeInMillis</code> key, which includes the timestamp. This maps this key to Harness&#39; <strong>Timestamp</strong> field.<figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577147504759/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure></li><li><strong>Timestamp Format</strong> – Optionally, enter a timestamp format, following the Java <a href="https://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html" target="_blank">SimpleDateFormat</a>. An example timestamp syntax might be <code>yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSX</code>. If you leave this field empty, Harness will use the default range of 1 hour previous (<code>now-1h</code>) to now.</li></ul><p>When you&#39;ve filled in all the required Metrics Collection parameters, your query string in the <strong>Metrics Collection URL</strong> field will be modified to something like this:</p><pre>rest/applications/cv-app/metric-data?metric-path=Business%20Transaction%20Performance%7CBusiness%20Transactions%7Cdocker-tier%7C%2Ftodolist%2Fexception%7CCalls%20per%20Minute&amp;time-range-type=BETWEEN_TIMES&amp;start-time=${start_time}&amp;end-time=${end_time}&amp;output=JSON&amp;rollup=false</pre><p>Your <strong>New Metrics Collection</strong> settings will now look something like this:</p><p></p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577148359709/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>Click <strong>Test</strong>. If your configuration tests successfully, click <strong>Add</strong> to add this collection.</p><p>This returns you to the <strong>Custom APM Verification</strong> settings&#39; initial <strong>Metrics Verification</strong> page, to fill in the remaining settings.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;collection_remaining&#34;&gt;&lt;/span&gt;"><p><span id="collection_remaining"></span></p>
    </div><h4>Remaining Metrics Verification Settings</h4><p>Fill in the remaining <strong>Metrics Verification</strong> settings as follows:</p><ul><li><strong>Expression for Host/Container name</strong> – The expression entered here should resolve to a host/container name in your deployment environment. By default, the expression is <code>${host.hostName}</code>.</li><li><strong>Analysis Time Duration</strong> – Set the duration for the verification step. If a verification step exceeds this value, the Workflow&#39;s <a href="/article/m220i1tnia-workflow-configuration#failure_strategy">Failure Strategy</a> is triggered. For example, if the Failure Strategy is <strong>Ignore</strong>, then the verification state is marked <strong>Failed</strong>, but the Workflow execution continues.</li><li><strong>Data Collection Interval</strong> – Specify how often Harness will collect data. For example, when the interval is <code>1</code> (1 minute), Harness will collect every minute. If it&#39;s <code>3</code>, we will collect every 3 minutes. If your total duration is 15 minutes and the interval is 3 minutes, Harness will collect every 3 minutes for a total of 5 times over 15 minutes. Harness recommends the value <code>2</code>.</li><li><strong>Baseline for Risk Analysis</strong> – See <a href="/article/0avzb5255b-cv-strategies-and-best-practices">CV Strategies, Tuning, and Best Practices</a>.</li><li><strong>Algorithm Sensitivity</strong> – Harness recommends that you normally accept this drop-down&#39;s <strong>Very sensitive</strong> default. If your analysis needs differ, you can flag fewer deviations as anomalies by instead selecting <strong>Moderately sensitive</strong> or <strong>Least sensitive</strong>.</li><li><strong>Include instances from previous phases</strong> – If you are using this verification step in a multi-phase deployment, select this checkbox to include instances used in previous phases when collecting data. Do not apply this setting to the first phase in a multi-phase deployment.</li><li><strong>Execute with previous steps</strong> – Enable this check box to run this verification step in parallel with the previous steps in <strong>Verify Service</strong>.</li></ul><p></p><p>When you&#39;ve entered all your <strong>Custom APM Verification</strong> settings, they will look something like this:</p><p></p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/a14rx2n07o/1577149785252/image.png" style="max-height:60%;max-width:60%" data-hd-height="60%" data-hd-width="60%"/></figure><p>Click <strong>Submit</strong>. The AppDynamics Custom verification step is now added to the Workflow. Run your Workflow to see the results.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;verification_results&#34;&gt;&lt;/span&gt;"><p><span id="verification_results"></span></p>
    </div><h3>Verification Results</h3><p>Once you have deployed your Workflow (or Pipeline) using the Custom verification step, you can automatically verify cloud application and infrastructure performance across your deployment.</p><p>For examples of how to do so, see the <strong>Datadog as a Custom APM</strong> topic&#39;s <a href="/article/facqx6j76n-3-datadog-as-a-custom-apm#verification_results">Verification Results</a> section.</p><p></p><div class="hd--md" data-hd-markdown="&lt;span id=&#34;next_steps&#34;&gt;&lt;/span&gt;"><p><span id="next_steps"></span></p>
    </div><h3>Next Steps</h3><ul><li> <a href="/article/htvzryeqjw-configuration-as-code">Configuration as Code</a></li><li> <a href="/article/ven0bvulsj-users-and-permissions">Managing Users and Groups (RBAC)</a></li></ul><p></p>
  slug: appdynamics-custom
  tags:
  - AppDynamics
  - Verification Provider
  - verification
  - CV
  - Metrics Provider
  - BT
  - setup
  - risk analysis
  is_live: true
