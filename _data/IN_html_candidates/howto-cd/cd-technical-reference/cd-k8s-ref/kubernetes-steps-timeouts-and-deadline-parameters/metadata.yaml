type: article
article_id: rsyh1cl5q0
user_id: mfr0nxh4be
category_id: 85tr1q4hin
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Kubernetes Steps Timeouts and Deadline Parameters
slug: kubernetes-steps-timeouts-and-deadline-parameters
description: Every step in a Harness Kubernetes Deploy stage includes a Timeout setting.
  This setting determines how long Harness attempts to run the step before failing
  the step and initiating the step or stage…
short_version: Every step in a Harness Kubernetes Deploy stage includes a Timeout
  setting. This setting determines how long Harness attempts to run the step before
  failing the step and initiating the step or stage…
tags: []
show_toc: false
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-08T22:03:02.319641Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Kubernetes Steps Timeouts and Deadline Parameters
  description: ""
  short_version: ""
  body: '<p>Every step in a Harness Kubernetes Deploy stage includes a <strong>Timeout</strong>
    setting. This setting determines how long <u>Harness</u> attempts to run the step
    before failing the step and initiating the step or stage <a href="/article/0zvnn5s1ph-define-a-failure-strategy-on-stages-and-steps">Failure
    Strategy</a>.</p><p>When setting step <strong>Timeout</strong> settings, it&#39;s
    important to know that Kubernetes has an optional deadline parameter that specifies
    the number of seconds you want <u>Kubernetes</u> to wait for your Deployment to
    progress before the system reports back that the Deployment has <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#failed-deployment">failed
    progressing</a>.</p><p>The Kubernetes deadline parameter <code>.spec.progressDeadlineSeconds</code>
    is an optional field that performs this function. </p><p>See <a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#progress-deadline-seconds"
    target="_blank">Progress Deadline Seconds</a> from Kubernetes.</p><p>Once the
    deadline has been exceeded, the Deployment controller adds a DeploymentCondition
    with the following attributes to the status of the resource (Deployment&#39;s
    <code>.status.conditions</code>):</p><ul><li><code>type: Progressing</code></li><li><code>status:
    &#34;False&#34;</code> </li><li><code>reason: ProgressDeadlineExceeded</code>
    </li></ul><p>For example:</p><pre>Status : demoservice2-deploy-app1   error: deployment
    &#34;demoservice2-deploy-app1&#34; exceeded its progress deadline</pre><p></p><p>The
    Deployment controller will keep retrying the Deployment. This defaults to 600.
    </p><p>If you are using the Kubernetes deadline parameter <code>.spec.progressDeadlineSeconds</code>
    option, ensure that you identify whether a timeout is the result of that parameter
    or the Harness step <strong>Timeout</strong> setting.</p>'
  slug: kubernetes-steps-timeouts-and-deadline-parameters
  tags: []
  is_live: true
