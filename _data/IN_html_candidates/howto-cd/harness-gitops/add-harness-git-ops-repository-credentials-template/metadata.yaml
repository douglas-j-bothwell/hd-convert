type: article
article_id: tg4og0bboo
user_id: mfr0nxh4be
category_id: 013h04sxex
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Add Harness GitOps Repository Credentials Template
slug: add-harness-git-ops-repository-credentials-template
description: If you are using multiple Harness GitOps Repositories for the subfolders
  in the same Git or Helm repo, you don't want to add the same credentials multiple
  times. Instead, you can create a single GitOps Repository Credentials Template and
  apply it to all GitOps Repositories.
short_version: If you are using multiple Harness GitOps Repositories for the subfolders
  in the same Git or Helm repo, you don't want to add the same credentials multiple
  times. Instead, you can create a single GitOps Repository Credentials Template and
  apply it to all GitOps Repositories.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-09-13T16:59:55.119281Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Add Harness GitOps Repository Credentials Template
  description: If you are using multiple Harness GitOps Repositories for the subfolders
    in the same Git or Helm repo, you don't want to add the same credentials multiple
    times. Instead, you can create a single GitOps Repository Credentials Template
    and apply it to all GitOps Repositories.
  short_version: If you are using multiple Harness GitOps Repositories for the subfolders
    in the same Git or Helm repo, you don't want to add the same credentials multiple
    times. Instead, you can create a single GitOps Repository Credentials Template
    and apply it to all GitOps Repositories.
  body: '<p>Harness GitOps Repositories are connections to repos containing the declarative
    description of a desired state. The declarative description can be in Kubernetes
    manifests, Helm Chart, Kustomize manifests, etc.</p><p>If you are using multiple
    Harness GitOps Repositories for the subfolders in the same Git or Helm repo, you
    don&#39;t want to add the same credentials multiple times. Instead, you can create
    a single GitOps Repository Credentials Template and select it when creating GitOps
    Repositories.</p><p>This topic describes how to set up a GitOps Repository Credentials
    Template.</p><div class="note-callout">A Harness GitOps Repository is used for
    Harness GitOps only. For other Harness features like CI, CD Pipelines, etc, use
    a standard <a href="https://ngdocs.harness.io/category/o1zhrfo8n5">Git Connector</a>.</div><h3>Before
    You Begin</h3><ul><li><a href="/article/w1vg9l1j7q-harness-git-ops-basics">Harness
    GitOps Basics</a></li><li><a href="/article/pptv7t53i9-harness-cd-git-ops-quickstart">Harness
    CD GitOps Quickstart</a></li><li><a href="/article/52r3l5q67u-install-a-harness-git-ops-agent">Install
    a Harness GitOps Agent</a></li><li><a href="/article/58i67mkxap-add-a-harness-git-ops-repository">Add
    a Harness GitOps Repository</a></li></ul><h3>Limitations</h3><ul><li>Currently,
    only Git platforms and HTTP Helm servers are supported in a GitOps Repository.</li></ul><h3>Review:
    GitOps Repository</h3><p>See <a href="/article/58i67mkxap-add-a-harness-git-ops-repository">Add
    a Harness GitOps Repository</a>.</p><p>If you use a GitOps Repository Credentials
    Template with a GitOps Repository, then the repo path in the GitOps Repository
    must be a <u>subfolder</u> of the repo path in the Repository Credentials Template.</p><h3>Step
    1: Create GitOps Repository Credentials Template</h3><p>In the GitOps Repository
    Credentials Template setup, you will select the <a href="/article/52r3l5q67u-install-a-harness-git-ops-agent">Agent</a>
    to use when synching state. Be sure you have a GitOps Agent set up already.</p><p>See
    <a href="/article/52r3l5q67u-install-a-harness-git-ops-agent">Install a Harness
    GitOps Agent</a>.</p><p>You will also provide the credentials to use when connecting
    to the Git repository. Ensure you have your credentials available.</p><p>In your
    Harness Project, click <strong>GitOps</strong>, and then click <strong>Settings</strong>.</p><p>Click <strong>Repositories</strong>.</p><p>Click <strong>Create
    Credential Template</strong>.</p><p>In <strong>Specify Repository Type</strong>,
    click <strong>Git</strong> or <strong>Helm</strong>.</p><h3>Option: Git Providers</h3><p>Click
    <strong>Git</strong>.</p><p>In <strong>Repository Name</strong>, enter a name.</p><p>In <strong>GitOps
    Agent</strong>, select or create the Agent you want to use to fetch manifests
    from this repo. See <a href="/article/52r3l5q67u-install-a-harness-git-ops-agent">Install
    a Harness GitOps Agent</a>.</p><p>In <strong>Repository URL</strong>, enter the
    URL to your repo. For example, <code>https://github.com/argoproj</code>.</p><p>Typically,
    you will enter the URL to the root of the repo. Harness GitOps Repositories that
    use this template will use subfolders of that path for their <strong>URL</strong>
    settings.</p><p>Click <strong>Continue</strong>.</p><p>In <strong>Credentials</strong>,
    select one of the following:</p><h4>Specify Credentials for Repository</h4><p>In <strong>Credentials</strong>,
    in <strong>Connection Type</strong>, select <strong>HTTPS</strong>, or <strong>SSH</strong>,
    or <strong>GitHub App</strong>.</p><p>If you use Two-Factor Authentication for
    your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>.</p><div
    class="note-callout">For <strong>SSH</strong>, ensure that the key is not OpenSSH,
    but rather PEM format. To generate an SSHv2 key, use: <code>ssh-keygen -t rsa
    -m PEM</code> The <code>rsa</code> and <code>-m PEM</code> ensure the algorithm
    and that the key is PEM. Next, follow the prompts to create the PEM key. For more
    information, see the <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen
    man page</a>.</div><p><strong>HTTP</strong> also has the <strong>Anonymous</strong>
    option.</p><p>For steps on setting up the GitHub App, see <a href="/article/nze5evmqu1-git-hub-app-support">Use
    a GitHub App in a GitHub Connector</a>.</p><p>Click <strong>Save &amp; Continue</strong>.
    Harness validates the connection.</p><h4>Enable LFS support</h4><p>This option
    is available if you selected <strong>HTTP</strong>.</p><p>Select the option to
    use <a href="https://github.com/git-lfs/git-lfs/" target="_blank">Git Large File
    Storage</a>.</p><h4>Proxy</h4><p>This option is available if you selected <strong>HTTP</strong>.</p><p>A
    proxy for your repository can be specified in the Proxy setting.</p><p>Harness
    uses this proxy to access the repository. Harness looks for the standard proxy
    environment variables in the repository server if the custom proxy is absent.</p><p>An
    example repository with proxy:</p><pre>apiVersion: v1<br/>kind: Secret<br/>metadata:<br/>  name:
    private-repo<br/>  namespace: cd<br/>  labels:<br/>    argocd.argoproj.io/secret-type:
    repository<br/>stringData:<br/>  type: git<br/>  url: https://github.com/argoproj/private-repo<br/>  proxy:
    https://proxy-server-url:8888<br/>  password: my-password<br/>  username: my-username</pre><h3>Option:
    HTTP Helm Repository</h3><p>Click <strong>Helm</strong>.</p><p>In <strong>Repository
    Name</strong>, enter a name.</p><p>In <strong>GitOps Agent</strong>, select or
    create the Agent you want to use to fetch charts from this repo. See <a href="/article/52r3l5q67u-install-a-harness-git-ops-agent">Install
    a Harness GitOps Agent</a>.</p><p>In <strong>Repository URL</strong>, enter the
    URL to your HTTP Helm Repository. For example, <code>https://charts.bitnami.com/bitnami</code>.</p><p>Click <strong>Continue</strong>.</p><p>In <strong>Credentials</strong>,
    in <strong>Connection Type</strong>, select <strong>HTTPS</strong> or <strong>SSH</strong>.</p><p>If
    you use Two-Factor Authentication for your Git repo, you connect over <strong>HTTPS</strong> or <strong>SSH</strong>.</p><div
    class="note-callout">For <strong>SSH</strong>, ensure that the key is not OpenSSH,
    but rather PEM format. To generate an SSHv2 key, use: <code>ssh-keygen -t rsa
    -m PEM</code> The <code>rsa</code> and <code>-m PEM</code> ensure the algorithm
    and that the key is PEM. Next, follow the prompts to create the PEM key. For more
    information, see the <a href="https://linux.die.net/man/1/ssh-keygen" target="_blank">ssh-keygen
    man page</a>.</div><p><strong>HTTP</strong> also has the <strong>Anonymous</strong>
    option.</p><p>Click <strong>Save &amp; Continue</strong>. Harness validates the
    connection.</p><p>Click <strong>Finish</strong>. You now have a Harness GitOps
    Repository Credentials Template added.</p><h3>Option: Skip Server Verification</h3><p>Select
    this option to have the GitOps Agent skip verification of the URL and credentials.</p><p>Verification
    is only skipped when you create the GitOps Repository Credentials Template. Subsequent
    uses of the GitOps Repository Credentials Template are verified.</p><h3>Step 2:
    Finish</h3><p>If you encounter errors, check that you have the correct repo URL
    and your authentication method has the required permissions.</p><p>Click <strong>Finish</strong>.
    You now have a Harness GitOps Repository Credentials Template added.</p><p>You
    can view templates in the <strong>Credential Templates</strong> list in GitOps
    <strong>Repositories</strong>.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/tg4og0bboo/1654640889701/clean-shot-2022-06-07-at-15-27-29-2-x.png"/></figure><p></p><p></p><p></p>'
  slug: add-harness-git-ops-repository-credentials-template
  tags: []
  is_live: true
