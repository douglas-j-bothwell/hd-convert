type: article
article_id: gfy8huc79v
user_id: znazf3hcp9
category_id: 013h04sxex
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/77114bb5eef5503c5a09ad7655120b17?d=mm&s=150
title: Harness GitOps Settings
slug: harness-git-ops-settings
description: Currently, this feature is behind the feature flag ARGO_PHASE2_MANAGED.
  Contact Harness Support to enable the feature. This topic describes the settings
  for all of the Harness GitOPs entities and com…
short_version: Currently, this feature is behind the feature flag ARGO_PHASE2_MANAGED.
  Contact Harness Support to enable the feature. This topic describes the settings
  for all of the Harness GitOPs entities and com…
tags: []
show_toc: true
is_private: true
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-06-07T22:12:51.233327Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Harness GitOps Settings
  description: ""
  short_version: ""
  body: '<div class="note-callout">Currently, this feature is behind the feature flag
    <code>ARGO_PHASE2_MANAGED</code>. Contact <a href="mailto:support@harness.io"
    target="_blank">Harness Support</a> to enable the feature.</div><p>This topic
    describes the settings for all of the Harness GitOPs entities and components.</p><p>The
    Harness GUI, YAML, and API indicate what settings are required.</p><p>In this
    topic:</p><p></p><h3>GitOps Application</h3><ul><li><strong>Application Name:</strong><ul><li>The
    name for the Application in Harness. This doesn&#39;t need to be the same as the
    actual deployed application&#39;s name.</li><li>The name must be unique in Harness.</li><li>Harness
    uses the name you enter to generate a unique, immutable Id for the Application.
    See <a href="/article/li0my8tcz3-entity-identifier-reference">Entity Identifier
    Reference</a>.</li></ul></li><li><strong>GitOps Agent:</strong><ul><li>The Harness
    GitOps Agent to use for syncing and determining the health of target Service and
    Environment with declarative description.</li><li>This is the GitOps Agent that
    is installed and running in the target environment.</li><li>The GitOps Agent must
    be set up in Harness already.</li><li>GitOps Agents can be at the Project, Org,
    and Account level.</li></ul></li></ul><h4>Sync Policy</h4><ul><li><strong>Manual:</strong><ul><li>Select
    this option to manually sync the differences between the desired state in the
    Application&#39;s Repository and the live state in the target Cluster.</li></ul></li><li><strong>Automatic:</strong><ul><li>Select
    this option to automatically sync an Application when it detects differences between
    the desired state in the Application&#39;s Repository and the live state in the
    target environment.</li><li>With Automatic sync, you do not need to use Harness
    to perform the deployment manually. A commit and push to the Repository initiates
    deployment.</li><li><strong>Prune Resources:</strong><ul><li>By default, Automatic
    does not delete resources when Harness detects the resource is no longer defined
    in the Repository.</li><li>Select <strong>Prune Resources</strong> to prune when
    automatic synching occurs.</li></ul></li><li><strong>Self Heal:</strong><ul><li>By
    default, changes that are made to the live target Service or Environment do not
    trigger an automated sync.</li><li>Select <strong>Self Heal</strong> to initiate
    an automatic sync when the live target Service or Environment state deviates from
    the desired state in the Application&#39;s Repository.</li></ul></li></ul></li></ul><p></p><h4>Sync
    Options</h4><ul><li><strong>Skip Schema Validations:</strong><ul><li>By default,
    Harness will not sync a source manifest that is not valid.</li><li>Enable <strong>Skip
    Schema Validations</strong> to skip this validation.</li></ul></li><li><strong>Auto-Create
    Namespace:</strong><ul><li>This setting corresponds to the <strong>Namespace</strong>
    setting later in <a href="#destination">Destination</a>.</li><li>If your source
    manifest contains an existing namespace, you do not need to select this setting
    to have Harness sync the namespace in the target cluster.</li><li>If your source
    manifest contains a non-existent namespace, you must select <strong>Auto-Create
    Namespace</strong>. Harness will create the namespace at runtime.</li><li>If your
    source manifest contains any namespace, later, in <a href="#destination">Destination</a>,
    you must provide the same namespace. If you enter a different namespace in <strong>Destination</strong>,
    that namespace will override the source manifest namespace.</li></ul></li><li><strong>Prune
    Last:</strong><ul><li>Enable <strong>Prune Last</strong> to perform resource pruning
    as the final stage of a sync operation.</li><li>Once enabled, pruning is performed
    after resources are deployed and healthy.</li></ul></li><li><strong>Apply Out
    of Sync Only:</strong><ul><li>If your source manifests have many resources, Harness
    will only attempt to sync the resources that are out of sync.</li></ul></li></ul><h4>Prune
    Propagation Policy</h4><p>This setting determines how Kubernetes will check for
    and delete objects that no longer have owner reference as part of garbage collection.</p><ul><li><strong>Foreground:</strong><ul><li>Kubernetes
    <a href="https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion"
    target="_blank">Foreground cascading deletion</a>.</li></ul></li><li><strong>Background:</strong><ul><li>Kubernetes
    <a href="https://kubernetes.io/docs/concepts/architecture/garbage-collection/#background-deletion"
    target="_blank">Background cascading deletion</a>.</li><li>By default, Kubernetes
    uses background cascading deletion unless you manually use foreground deletion
    or choose to orphan the dependent objects.</li></ul></li><li><strong>Orphan:</strong><ul><li>Kubernetes
    <a href="https://kubernetes.io/docs/concepts/architecture/garbage-collection/#orphaned-dependents"
    target="_blank">Orphaned dependents</a>.</li></ul></li><li><strong>Replace:</strong><ul><li>Harness
    uses <code>kubectl create/replace</code> when <code>kubectl apply</code> is not
    suitable.</li></ul></li><li><strong>Retry:</strong><ul><li>Harness will retry
    sync according to the settings you provide.</li><li><strong>Limit:</strong><ul><li>Max
    number of allowed sync retries.</li></ul></li><li><strong>Duration:</strong><ul><li>Retry
    backoff base duration. Enter a duration like 2m, 1h, etc. The default is 5s.</li></ul></li><li><strong>Max
    Duration:</strong><ul><li>Maximum retry backoff duration. Enter a duration like
    2m, 1h, etc. The default 3m0s.</li></ul></li><li><strong>Factor:</strong><ul><li>Multiply
    the base duration after each failed retry. The default is 2.</li></ul></li></ul></li></ul><h4>Source</h4><p>Source
    settings are where you select the Repository you added to Harness and define additional
    settings and parameters.</p><p>The settings in Source change depending on the
    Repository you select.</p><h4>Helm: Helm Repo</h4><p>You can use Helm from a Git
    repo or from a Helm chart repo.</p><p>To use Helm files in a Git repo, select
    <strong>Git</strong> in <strong>Repository URL</strong>. See <a href="#source_git">Source:
    Git</a> below for details.</p><p>To use Helm charts in a Helm chart repo, select
    <strong>Helm</strong> in <strong>Repository URL</strong>. Here are the settings:</p><ul><li><strong>Repository
    URL:</strong><ul><li>Select the Repository you added to Harness that connects
    to the Helm chart repo (for example, <code>https://charts.helm.sh/stable</code>).</li></ul></li><li><strong>Chart:</strong><ul><li>Select
    the chart from the repo (for example, <code>nginx-ingress</code>).</li></ul></li><li><strong>Version:</strong><ul><li>Select
    the chart version (for example, <code>1.41.3</code>).</li></ul></li><li><strong>Value
    Files:</strong><ul><li>Select one of more Values YAML files.</li><li>You can select
    multiple Values YAML files and Helm merges them at runtime.</li><li>The left to
    right order of the Values YAML files determines precedence, with duplicate values
    in the the files on the right overwriting files on the left.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/gfy8huc79v/1643143862783/clean-shot-2022-01-25-at-12-49-54.png"/></figure></li></ul></li><li><strong>Values:</strong><ul><li>Enter
    any Values YAML <code>key:value</code> pairs to add to the Helm files you selected
    or overwrite any duplicates.</li><li>The pairs are applied by Helm at runtime.</li></ul></li></ul><h4>Helm:
    Git Repo</h4><ul><li><strong>Repository URL:</strong><ul><li>Select the Repository
    you added to Harness that connects to the Git repo.</li></ul></li><li><strong>Revision:</strong><ul><li>Select
    the Git branch or Git tag in the repo.</li></ul></li><li><strong>Path:</strong><ul><li>Select
    the path to the folder with the chart and Values YAML files.</li></ul></li><li><strong>Value
    Files:</strong><ul><li>Select one of more Values YAML files.</li><li>You can select
    multiple Values YAML files and Helm merges them at runtime.</li></ul></li><li><strong>Values:</strong><ul><li>The
    left to right order of the Values YAML files determines precedence, with duplicate
    values in the the files on the right overwriting files on the left.</li></ul></li></ul><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/gfy8huc79v/1643143862783/clean-shot-2022-01-25-at-12-49-54.png"/></figure><p></p><h4>Kustomize</h4><p>To
    use a Kustomization, you select the folder in your repo hosting the kustomization.yaml.</p><ul><li><strong>Repository
    URL:</strong><ul><li>Select the Repository you added to Harness that connects
    to the Git repo.</li></ul></li><li><strong>Revision:</strong><ul><li>Select the
    Git branch or Git tag in the repo.</li></ul></li><li><strong>Path:</strong><ul><li>Select
    the path to the folder with the kustomization.yaml.</li></ul></li><li><strong>Version:</strong><ul><li></li></ul></li><li><strong>Name
    Prefix:</strong><ul><li>The suffix appended to resources for Kustomize apps.</li></ul></li><li><strong>Name
    Suffix:</strong><ul><li>The suffix appended to resources for Kustomize apps.</li></ul></li><li><strong>Images
    List:</strong><ul><li>A list of Kustomize image overrides.</li></ul></li><li><strong>Digest:</strong><ul><li>A
    container image digest uniquely and immutably identifies a container image.</li><li>Select
    Digest if the image you entered in Images List is followed by <code>@sha256:</code>
    and the digest value, like <code>gcr.io/google-containers/echoserver@sha256:cb5c1bddd1b5665e1867a7fa1b5fa843a47ee433bbb75d4293888b71def53229</code>.</li></ul></li></ul><h5>Kustomize
    Patches</h5><p>Harness supports Kustomize patches that use <code>patchesStrategicMerge</code>.
    In <strong>Path</strong>, you select the folder with the overlay using <code>patchesStrategicMerge</code>.</p><h4>Ksonnet</h4><p>To
    use Ksonnet, you select the folder in your repo hosting the Ksonnet yaml.</p><ul><li><strong>Environment:</strong><ul><li>Select
    the <a href="https://ksonnet.io/docs/concepts/#environment" target="_blank">Ksonnet
    Environment</a> to use for this Application.</li></ul></li><li><strong>Parameters:</strong><ul><li>Harness
    pulls in the <a href="https://ksonnet.io/docs/concepts/#parameter" target="_blank">Ksonnet
    parameters</a> (<code>components/params.libsonnet</code>) from the repo (<code>ks
    param list</code>).</li><li>You can change any parameters or simply keep the parameters
    Harness pulled in.</li></ul></li></ul><h4>Standard Kubernetes</h4><div class="note-callout">Harness
    is unable to dynamically load repo paths for standard Kubernetes because of an
    issue with ArgoCD. For now, please manually add the paths from the root of the
    repo to the folder containing the manifests.</div><p>You can use standard, hardcoded
    Kubernetes manifests that do not use a management tool like Helm or Kustomize.</p><p>In
    <strong>Path</strong>, simply enter the path to the Kubernetes manifest from the
    root of the repo.</p><ul><li><strong>Directory Recurse:</strong><ul><li>Select
    this option to recursively clone the Git directory (like <code>git clone &lt;url&gt;
    --recursive</code>).</li></ul></li><li><strong>Top-Level Arguments:</strong><ul><li>Enter
    Kubernetes <code>spec.containers</code> <a href="https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/"
    target="_blank">commands and arguments</a>. For example, this argument would be
    <code>printenv</code> in <strong>Name</strong> and <code>HOSTNAME</code> in <strong>Value</strong>.<pre>    command:
    [&#34;printenv&#34;]<br/>    args: [&#34;HOSTNAME&#34;]</pre></li></ul></li><li><strong>External
    Variables:</strong><ul><li>Define arguments using environment variables. For example,
    this environment variable would be <code>MESSAGE</code> in <strong>Name</strong>
    and <code>hello world</code> in <strong>Value</strong>.<pre>env:<br/>- name: MESSAGE<br/>  value:
    &#34;hello world&#34;</pre></li></ul></li></ul><h4>Destination</h4><ul><li><strong>Cluster
    URL:</strong><ul><li>Select the API URL for the target cluster.</li><li><strong>Multiple
    URLs:</strong> you might see multiple URLs listed in this setting.<br/>When you
    set up a Harness Cluster, you select a single GitOps Agent that is running inside
    a Kubernetes cluster. In the same Harness Cluster setup, you can provide the credentials
    for a <u>different</u> cluster. Now the Agent can perform gitops tasks in both
    clusters.<br/>When you select that Agent in your GitOps App, the URLs for both
    of the clusters are displayed in <strong>Cluster URL</strong> because that Agent
    has been assigned to both Clusters.</li></ul></li><li><strong>Namespace:</strong><ul><li>This
    setting corresponds to the <strong>Auto-Create Namespace</strong> setting in <strong>Sync
    Options</strong>.</li><li>If there is a namespace in the source manifest, then
    the namespace entered in <strong>Namespace</strong> must match that namespace
    or the namespace entered in <strong>Namespace</strong> will override the namespace
    in the source manifest.</li><li>If there is no namespace in the source manifest,
    and the <strong>Auto-Create Namespace</strong> setting in <strong>Sync Options</strong>
    is selected, Harness will created the namespace you enter in <strong>Namespace</strong>.</li></ul></li></ul><h3>GitOps
    Agent</h3><p>Name</p><p>Description</p><p>Tags</p><h4>Configuration</h4><p>Namespace</p><p>High
    Availability</p><h4>YAML</h4><h4>Run Command</h4><p></p><h3>Repository</h3><p>Git
    or Helm</p><p>Repository Name</p><p>GitOps Agent</p><p>Repository URL</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/gfy8huc79v/1643055164193/clean-shot-2022-01-24-at-12-12-32.png"/></figure><h4>Connection
    Type</h4><h5>HTTP</h5><p>Authentication</p><p>Username</p><p>Password</p><p>TLS
    client certificate</p><p>TLS client certificate key</p><h5>SSH</h5><p>SSH Private
    Key Data</p><h5>GitHub App</h5><p>GitHub Type</p><p>GitHub App ID</p><p>GitHub
    App installation ID</p><p>GitHub App private key</p><h5>Advanced</h5><p>Skip Server
    Verification</p><p>Enable LFS support</p><p>Proxy</p><h3>Cluster</h3><p>Cluster
    Name</p><p>GitOps Agent</p><h4>Use the credentials of a specific Harness GitOps
    Agent</h4><p>...</p><h4>Specify Kubernetes Cluster URL and credentials</h4><p>Master
    URL</p><p>Authentication</p><p>Namespace</p><h3>Repository Certificate</h3><h4>TLS
    Repository Certificate</h4><p>Repository server name</p><p>Agent</p><p>TLS Certificate
    (PEM Format)</p><h4>SSH Known Host Entry</h4><p>Agents</p><p>SSH Known Hosts Data</p><h3>GnuPG
    Keys</h3><p>GnuPG Public Key Data (ASCII-armored)</p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p><p></p>'
  slug: harness-git-ops-settings
  tags: []
  is_live: true
