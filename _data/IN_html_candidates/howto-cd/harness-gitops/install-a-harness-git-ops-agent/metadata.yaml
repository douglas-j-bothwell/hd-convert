type: article
article_id: 52r3l5q67u
user_id: mfr0nxh4be
category_id: 013h04sxex
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Install a Harness GitOps Agent
slug: install-a-harness-git-ops-agent
description: A Harness GitOps Agent is a worker process that runs in your environment
  and performs GitOps tasks.
short_version: A Harness GitOps Agent is a worker process that runs in your environment
  and performs GitOps tasks.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-09-13T16:59:29.451384Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Install a Harness GitOps Agent
  description: A Harness GitOps Agent is a worker process that runs in your environment
    and performs GitOps tasks.
  short_version: A Harness GitOps Agent is a worker process that runs in your environment
    and performs GitOps tasks.
  body: '<p>A Harness GitOps Agent is a worker process that runs in your environment
    and performs GitOps tasks.</p><p>You need to set up an Agent before you can set
    up a Cluster, Repository, or Application, as the Agent is selected in all three
    of these.</p><p>Typically, you install the Agent in the target cluster, but you
    can install it any cluster and it can connect to remote clusters using the credentials
    you provide.</p><h3>Before You Begin</h3><ul><li><a href="/article/w1vg9l1j7q-harness-git-ops-basics">Harness
    GitOps Basics</a></li><li><a href="/article/pptv7t53i9-harness-cd-git-ops-quickstart">Harness
    CD GitOps Quickstart</a></li></ul><p></p><h3>Review: Requirements</h3><p>The Harness
    GitOps Agent has the following requirements:</p><ul><li><strong>vCPUs, Memory,
    Disk Size:</strong> the Harness GitOps Agent only needs 1vCPUs, 2GB memory, 20GB
    disk, but you&#39;ll also be running Kubernetes and your deployed services. Consider
    the total CPU and memory needs for the Agent and the applications and services
    in your cluster.</li><li><strong>Networking:</strong> outbound HTTPS for the Harness
    connection to <strong>app.harness.io</strong>, <strong>github.com</strong>, and
    <strong>hub.docker.com</strong>. Allow TCP port 22 for SSH.</li><li>A <strong>Kubernetes
    service account</strong> with the permissions need to create your desired state.
    The Harness GitOps Agent requires either <code>cluster-admin</code> or admin permissions
    in the target namespace:<ul><li>Create Deployment, Service, StatefulSet, Network
    Policy, Service Account, Role, ClusterRole, RoleBinding, ClusterRoleBinding, ConfigMap,
    Secret.</li><li>Permission to apply CustomResourceDefinition.<br/>For more information,
    see <a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles"
    target="_blank">User-Facing Roles</a> from Kubernetes.</li></ul></li></ul><h3>Review:
    Using Existing Argo CD Projects</h3><div class="note-callout">Currently, using
    <u>existing</u> Argo CD Projects is behind the feature flag <code>GITOPS_BYO_ARGO</code>.
    Contact <a href="mailto:support@harness.io" target="_blank">Harness Support</a>
    to enable the feature.</div><p>Typically, when you set up a Harness GitOps Agent
    you install a new Harness GitOps Agent in your target cluster along with other
    services (Repo server, Redis cache, Application controller).</p><p>In some cases,
    you might already have an Argo CD Project running in your target cluster. In this
    case, you can select this Project when you set up the Harness GitOps Agent.</p><p>You
    can use an existing Argo CD Project when you already have services deployed to
    different environments from that Argo CD instance.</p><p>If you don&#39;t use
    an existing Argo CD Project, you will create GitOps Applications, Repos, Clusters,
    etc in Harness. You&#39;ll also have to delete these from any existing Argo CD
    Project in the cluster (if necessary).</p><p>In both cases, you will install the
    Harness GitOps Agent process.</p><p>If you use an <u>existing</u> Argo CD instance,
    then Harness will use the following existing processes in the cluster:</p><ul><li>Repo
    server</li><li>Redis cache</li><li>Application controller</li></ul><p>If you <u>do
    not</u> use an existing Argo CD instance, then Harness will install the following:</p><ul><li>GitOps
    agent</li><li>Repo server</li><li>Redis cache</li><li>Application controller</li></ul><p>See
    <a href="/article/w1vg9l1j7q-harness-git-ops-basics">Harness GitOps Basics</a>.</p><h3>Step
    1: Add an Agent</h3><p>Ensure your Harness Project has the <strong>Continuous
    Delivery</strong> module enabled.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1653598497490/clean-shot-2022-05-26-at-13-54-35-2-x.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>In
    your Harness Project, click <strong>GitOps</strong>.</p><p>The Harness GitOps
    <strong>Overview</strong>, <strong>Applications</strong>, and <strong>Settings</strong>
    appear. If this is the first time GitOps has been set up in the Project, the Applications
    will be empty.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1653598642506/clean-shot-2022-05-26-at-13-57-06-2-x.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>All
    entities other than Applications are in <strong>Settings</strong>.</p><p>Click
    <strong>Settings</strong>. The Harness GitOps settings appear.</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1653598833856/clean-shot-2022-05-26-at-14-00-23-2-x.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Click
    <strong>GitOps</strong> <strong>Agents</strong>.</p><p>Click <strong>New GitOps
    Agent</strong>. The Agent wizard appears.</p><h3>Option: Harness GitOps Agent
    with No Existing Argo CD Project</h3><p>In <strong>Getting started with Harness
    GitOps</strong>, you have the option of installing a new Harness GitOps Agent
    with or without an existing Argo CD instances.</p><p>Click <strong>No</strong>,
    and then click <strong>Start</strong>.</p><p>In <strong>Name</strong>, enter the
    name for the new Agent.</p><p>In <strong>Namespace</strong>, enter the namespace
    where you want to install the Harness GitOps Agent. Typically, this is the target
    namespace for your deployment. For this quickstart, we use <strong>default</strong>.</p><p>Click
    <strong>Next</strong>. The <strong>Review YAML</strong> settings appear.</p><p>This
    is the manifest YAML for the Harness GitOps Agent. You will download this YAML
    file and run it in your Harness GitOps Agent cluster.</p><h3>Option: Harness GitOps
    Agent with Existing Argo CD Project</h3><p></p><div class="note-callout">Currently,
    this feature is behind the feature flag <code>GITOPS_BYO_ARGO</code>. Contact
    <a href="mailto:support@harness.io" target="_blank">Harness Support</a> to enable
    the feature.</div><p></p><p>In <strong>Getting started with Harness GitOps</strong>,
    you have the option of installing a new Harness GitOps Agent with or without an
    existing Argo CD instances.</p><p>Click <strong>Yes</strong>, and then click <strong>Start</strong>.</p><p>In
    <strong>Name</strong>, enter the name for the existing Agent CD Project. For example,
    <strong>default</strong> in the this example:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/52r3l5q67u/1656023793238/image.png"/></figure><p>In
    <strong>Namespace</strong>, enter the namespace where you want to install the
    Harness GitOps Agent. Typically, this is the target namespace for your deployment.
    For this quickstart, we use <strong>default</strong>.</p><p>Click <strong>Next</strong>.
    The <strong>Review YAML</strong> settings appear.</p><p>This is the manifest YAML
    for the Harness GitOps Agent. You will download this YAML file and run it in your
    Harness GitOps Agent cluster.</p><p>Once you have installed the Agent, Harness
    will start importing all the entities from the existing Argo CD Project.</p><h3>Step
    2: Install the Agent</h3><p>Click <strong>Download &amp; Continue</strong>. You
    are prompted to save the YAML file.</p><p>Open a terminal and navigate to the
    folder where you downloaded the YAML file.</p><p>In the same terminal, log into
    the Kubernetes cluster where you want to install the Agent.</p><p>For example,
    here&#39;s a typical GKE login:</p><pre>gcloud container clusters get-credentials
    &lt;cluster_name&gt; --zone us-central1-c --project &lt;project_name&gt;</pre><p></p><p>Run
    the following command to apply the YAML file you downloaded (in this example,
    <code>default</code> was the namespace entered in the <strong>Namespace</strong>
    setting):</p><pre>kubectl apply -f gitops-agent.yaml -n default</pre><p></p><p>In
    the following output example you can see all of the Harness GitOps objects created
    in Kubernetes.</p><p>This example output is for installing a new Harness GitOps
    Agent without using an existing Argo CD instance.</p><pre>% kubectl apply -f harness-gitops-agent.yaml
    -n default<br/>customresourcedefinition.apiextensions.k8s.io/applications.argoproj.io
    created<br/>customresourcedefinition.apiextensions.k8s.io/appprojects.argoproj.io
    created<br/>serviceaccount/argocd-application-controller created<br/>serviceaccount/argocd-redis
    created<br/>serviceaccount/example-agent created<br/>role.rbac.authorization.k8s.io/example-agent
    created<br/>role.rbac.authorization.k8s.io/argocd-application-controller created<br/>clusterrole.rbac.authorization.k8s.io/argocd-application-controller-default
    created<br/>clusterrole.rbac.authorization.k8s.io/example-agent created<br/>rolebinding.rbac.authorization.k8s.io/argocd-application-controller
    created<br/>rolebinding.rbac.authorization.k8s.io/argocd-redis created<br/>clusterrolebinding.rbac.authorization.k8s.io/argocd-application-controller-default
    created<br/>rolebinding.rbac.authorization.k8s.io/example-agent created<br/>clusterrolebinding.rbac.authorization.k8s.io/example-agent
    created<br/>configmap/argocd-cm created<br/>configmap/argocd-cmd-params-cm created<br/>configmap/argocd-gpg-keys-cm
    created<br/>configmap/argocd-rbac-cm created<br/>configmap/argocd-ssh-known-hosts-cm
    created<br/>configmap/argocd-tls-certs-cm created<br/>secret/argocd-secret created<br/>service/argocd-metrics
    created<br/>service/argocd-redis created<br/>service/argocd-repo-server created<br/>deployment.apps/argocd-redis
    created<br/>deployment.apps/argocd-repo-server created<br/>statefulset.apps/argocd-application-controller
    created<br/>networkpolicy.networking.k8s.io/argocd-application-controller-network-policy
    created<br/>networkpolicy.networking.k8s.io/argocd-redis-network-policy created<br/>networkpolicy.networking.k8s.io/argocd-repo-server-network-policy
    created<br/>secret/example-agent created<br/>configmap/example-agent created<br/>deployment.apps/example-agent
    created<br/>configmap/example-agent-upgrader created<br/>role.rbac.authorization.k8s.io/example-agent-upgrader
    created<br/>rolebinding.rbac.authorization.k8s.io/example-agent-upgrader created<br/>serviceaccount/example-agent-upgrader
    created<br/>Warning: batch/v1beta1 CronJob is deprecated in v1.21+, unavailable
    in v1.25+; use batch/v1 CronJob<br/>cronjob.batch/example-agent-upgrader created</pre><p></p><p>Back
    in Harness, click <strong>Continue</strong>.</p><p>Harness indicates that the
    Harness GitOps Agents is registered.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1641859081339/clean-shot-2022-01-10-at-15-57-45.png"/></figure><p>Click
    <strong>Finish</strong>.</p><p>The <strong>Agents</strong> list shows the new
    Agent as <strong>Healthy</strong> and <strong>Connected</strong>.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1653600658757/clean-shot-2022-05-26-at-14-30-46-2-x.png"/></figure><p>In
    your cloud platform Kubernetes cluster you can see the agent workload:</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/pptv7t53i9/1653600723877/clean-shot-2022-05-26-at-14-31-22-2-x.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Now
    that you have the Harness GitOps Agent installed, running, and registered, you
    can configure the remaining components.</p><h3>Review: Argo CD and Harness Project
    Mapping</h3><p>Once you have installed the Agent, Harness will create its own
    Argo CD Project in the cluster and name it with a random string. It will then
    map this new Argo CD Project to a Harness Project identifier (Id). You will see
    this mapping in Harness:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/52r3l5q67u/1656026883088/clean-shot-2022-06-23-at-16-27-43.png"/></figure><p>If
    you used an existing Argo CD Project, you will see the existing Argo CD Project
    mapped to your Harness Project Id:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/52r3l5q67u/1656026933282/clean-shot-2022-06-23-at-16-28-42.png"/></figure><p>See
    <a href="/article/li0my8tcz3-entity-identifier-reference">Entity Identifier Reference</a>.</p><h3>Troubleshooting</h3><p>The
    following solutions can help with Agent installation errors.</p><h4>Agent Took
    Too Long to Respond</h4><p>If you see the error <code>the Agent took too long
    to respond</code> during installation of an Agent <u>with an existing Argo CD</u>
    <u>instance</u>, the Agent cannot connect to the Redis/repo server and needs additional
    <code>NetworkPolicy</code> settings.</p><p>Add the following <code>podSelector</code>
    settings to the <code>NetworkPolicy</code> objects defined in your <u>existing</u>
    Argo CD <strong>argocd-redis</strong> and <strong>argocd-repo-server</strong>
    services.</p><p>The following table lists the <code>NetworkPolicy</code> objects
    for HA and non-HA Agents, and include the YAML before and after the new <code>podSelector</code>
    is added.</p><table><tbody><tr><td><p><strong>NetworkPolicy</strong></p></td><td><p><strong>HA
    Agent</strong></p></td></tr><tr><td><p><code>argocd-redis-ha-proxy-network-policy</code></p></td><td><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/52r3l5q67u/1658444038719/image.png"/></figure><p> </p></td></tr><tr><td><p><code>argocd-repo-server-network-policy</code></p></td><td><p> </p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/52r3l5q67u/1658444047665/image.png"/></figure></td></tr><tr><td><p></p></td><td><p><strong>Non-HA
    Agent</strong></p></td></tr><tr><td><p><code>argocd-redis-network-policy</code></p></td><td><p> </p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/52r3l5q67u/1658444058933/image.png"/></figure></td></tr><tr><td><p><code>argocd-repo-server-network-policy</code></p></td><td><p> </p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/52r3l5q67u/1658444066761/image.png"/></figure></td></tr></tbody></table><p> </p><p></p><p></p><p></p>'
  slug: install-a-harness-git-ops-agent
  tags: []
  is_live: true
