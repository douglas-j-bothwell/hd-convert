type: article
article_id: 7ogetmgq7y
user_id: mfr0nxh4be
category_id: etz0u5kujd
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Controlling Resource Usage with Barriers, Resource Constraints, and Queue Steps
slug: controlling-deployments-with-barriers-resource-constraints-and-queue-steps
description: Get an overview of how to control resource usage during deployments.
short_version: Get an overview of how to control resource usage during deployments.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-22T23:22:06.103053Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Controlling Resource Usage with Barriers, Resource Constraints, and Queue
    Steps
  description: Get an overview of how to control resource usage during deployments.
  short_version: Get an overview of how to control resource usage during deployments.
  body: <p>Harness has a number of ways to control deployments and resource usage
    to protect resources and their capacity limits. This topic describes their differences
    and provides best practices.</p><h3>Control Option Definitions</h3><p>The following
    options help you control how deployments use your resources.</p><h4>Barriers</h4><p>Barriers
    synchronize stages/<a href="/article/ihnuhrtxe3-run-steps-in-parallel-using-a-step-group">step
    groups</a> of a Pipeline that are executed in parallel. Barriers ensure that one
    stage/step group does not proceed until another stage/step group has reached a
    specific point.</p><p>See <a href="/article/dmlf8w2aeh-synchronize-deployments-using-barriers">Synchronize
    Parallel Stages and Step Groups using Barriers</a>.</p><h5>Barriers Scope</h5><p>Barriers
    are scoped to the <strong>Pipeline</strong>.</p><p>You can only use the same Barrier
    within the same Pipeline. If you add a <strong>Barrier Name</strong> from one
    Pipeline into the Barrier step in another Pipeline, it will not work.</p><h4>Resource
    Constraints</h4><p>Resource Constraints protect resource capacity limits by preventing
    simultaneous deployments to the same Service + Infrastructure combination. The
    Service + Infrastructure combination acts as a fixed key.</p><p>Resource Constraints
    are added to every Stage by default, but it can be disabled in a Stage&#39;s <strong>Infrastructure</strong>
    settings by enabling the <strong>Allow simultaneous deployments on the same infrastructure</strong>
    option.</p><p>See <a href="/article/jrzwrdpvm2">Pipeline Resource Constraints</a>.</p><div
    class="note-callout">The automatic <strong>Resource Constraints</strong> setting
    does not apply to <a href="/article/o60eizonnn-add-a-custom-stage">Custom Stages</a>.
    <strong>Resource Constraints</strong> apply to a combination of Service + Infrastructure,
    and Custom Stages have no Services or Infrastructures. You can use Barriers and
    Queue steps in any stage types.</div><h4>Queue Steps</h4><p>Queue Steps synchronize
    Pipeline executions, queuing Pipelines using a custom key.</p><p>Multiple deployments
    are queued so that one deployment completes before other deployments with the
    same key can proceed.</p><p>See <a href="/article/5n96cc7cyo-control-resource-usage-with-queue-steps">Control
    Resource Usage with Queue Steps</a>.</p><h5>Queue Step Scope</h5><p>Queue Step
    are scoped to your entire Harness <strong>account</strong>.</p><p>If there are
    Queue steps with the same Resource Key in Pipelines in Projects A and B and the
    Pipeline in Project A is running, the Pipeline in Project B will be queued until
    the Pipeline in Project A is completed.</p><h3>Best Practices</h3><p>Here are
    some best practices to help you decide which resource control option to use:</p><ul><li><strong>Barriers:</strong> use
    when you want to coordinate the timing of different components’ deployments with
    stages/step groups executed in parallel in the same Pipeline.<br/>For example,
    your Pipeline executes Stages A and B in parallel, but you want a database migration
    in Stage A to complete before a deployment in Stage B. You place a Barrier step
    after the migration in Stage A and before the deployment step in Stage B.</li><li><strong>Resource
    Constraints:</strong> use when you want to prevent simultaneous deployments to
    the same Service + Infrastructure combination. This feature is enabled by default.</li><li><strong>Queue
    steps:</strong> use when you want to control the <strong>sequence</strong> of
    multiple Pipeline executions. This can be used on different Pipelines or even
    multiple executions of the same Pipeline.</li></ul><p></p>
  slug: controlling-deployments-with-barriers-resource-constraints-and-queue-steps
  tags: []
  is_live: true
