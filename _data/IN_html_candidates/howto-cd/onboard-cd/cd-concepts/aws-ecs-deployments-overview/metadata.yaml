type: article
article_id: 41xbf65cmd
user_id: znazf3hcp9
category_id: dxej4ug0n5
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/77114bb5eef5503c5a09ad7655120b17?d=mm&s=150
title: AWS ECS Deployments Overview
slug: aws-ecs-deployments-overview
description: The high-level steps involved in a Harness ECS deployment.
short_version: The high-level steps involved in a Harness ECS deployment.
tags:
- ECS overview
- ECS deployment
show_toc: true
is_private: false
is_published: false
is_featured: false
stale_status:
  is_stale: false
  reason: Article updated
  source: API
  triggered_at: 2020-12-21T23:52:15.028747Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: AWS ECS Deployments Overview
  description: The high-level steps involved in a Harness ECS deployment.
  short_version: The high-level steps involved in a Harness ECS deployment.
  body: |-
    <p>This topic describes the concept of a Harness ECS deployment by describing the high-level steps involved.</p><p>For a quick tutorial, see the <a href="/article/x03ypdgimw-aws-ecs-deployments">AWS ECS Deployments</a> tutorial.</p><p>For detailed instructions on using Kubernetes in Harness, see the <a href="/category/inkemyzdrr-howtos-aws-ecs">AWS ECS How-tos</a>.</p><p>In this topic:</p><ul><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#before_you_begin">Before You Begin</a></li><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#what_does_harness_need_before_you_start">What Does Harness Need Before You Start?</a></li><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#what_does_harness_deploy">What Does Harness Deploy?</a></li><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#what_does_a_harness_ecs_deployment_involve">What Does a Harness ECS Deployment Involve?</a></li><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#component_overview">Component Overview</a></li><li><a href="/article/41xbf65cmd-aws-ecs-deployments-overview#next_steps">Next Steps</a></li></ul><div class="hd--md" data-hd-markdown="<span id=&quot;before_you_begin&quot;></span>"><p><span id="before_you_begin"></span></p>
    </div><h3>Before You Begin</h3><p>Before learning about, you should have an understanding of the following:</p><ul><li><a href="/article/hv2758ro4e-learn-harness-key-concepts">Learn Harness' Key Concepts</a></li></ul><h3>What Does Harness Need Before You Start?</h3><p>A Harness ECS deployment requires the following:</p><ol><li>Artifact: For example, a Docker image of NGINX from Docker Hub.</li><li>One or more existing ECS clusters:<ul><li>You will need an ECS cluster to deploy your ECS services using Harness.</li><li>If you use a Harness ECS Delegate (recommended), you will need an ECS cluster for the Delegate. The steps for setting up an ECS Delegate are in&nbsp;<a href="/article/tbjffip7rp-set-up-an-aws-ecs-delegate">Set Up an AWS ECS Delegate</a>.</li></ul></li><li>IAM Role for the Harness Cloud Provider connection to AWS. The policies are listed in&nbsp;<a href="/article/8do4j1pv44-existing-aws-ecs-cluster">Existing AWS ECS Cluster Reference</a>&nbsp;and also described in this document.</li></ol><h3>What Does Harness Deploy?</h3><p>Harness takes the artifact, ECS task definition, and service specification you provide, and deploys the artifact as a task in a new ECS service in the target ECS cluster.</p><h3>What Does a Harness ECS Deployment Involve?</h3><p>The following list describes the major steps of a Harness ECS deployment:</p><p></p><table><tbody><tr><td><p><strong>Step</strong></p></td><td><p><strong>Name</strong></p></td><td><p><strong>Description and Links</strong></p></td></tr><tr><td><p>1</p></td><td><p>Install the Harness ECS&nbsp;<strong>Delegate</strong>&nbsp;in your ECS cluster.&nbsp;</p></td><td><p>Typically, the ECS Delegate is installed in the target cluster where you will deploy your application(s).</p><p>See <a href="/article/cbsjovfq74-set-up-a-kubernetes-delegate">Set Up a Kubernetes Delegate</a>.</p></td></tr><tr><td><p>2</p></td><td><p>Add a Harness&nbsp;<strong>Artifact Server</strong>.</p></td><td><p>Add a Harness&nbsp;<strong>Artifact Server</strong>. For example, a Docker Registry Artifact Server that connects to the Docker registry where your Docker images are located, or the public Docker Hub.</p><p>See <a href="/category/0ctql7wycs-howtos-artifact-servers">Artifact Servers</a>.</p></td></tr><tr><td><p>3</p></td><td><p>Add an <strong>AWS</strong>&nbsp;<strong>Cloud Provider</strong>.</p></td><td><p>An AWS&nbsp;Cloud Provider is a connection to your AWS account.</p><p>The AWS&nbsp;Cloud Provider is used to deploy the ECS services to the ECS cluster.</p><p>See <a href="/article/bejr8ispzh-connect-to-amazon-web-services-aws-cloud">Connect to Amazon Web Services (AWS) Cloud</a>.</p></td></tr><tr><td><p>4</p></td><td><p>Create the Harness&nbsp;<strong>Application</strong>&nbsp;for your Kubernetes CD Pipeline.</p></td><td><p>The Harness Application represents a group of microservices, their deployment pipelines, and all the building blocks for those pipelines. Harness represents your release process using a logical group of one or more entities: Services, Environments, Workflows, Pipelines, Triggers, and Infrastructure Provisioners. Applications organize all of the entities and configurations in Harness CD.</p><p>See <a href="/article/wrtkikaksk-add-an-application">Add an Application</a>.</p></td></tr><tr><td><p>5</p></td><td><p>Create the Harness&nbsp;<strong>Service</strong>&nbsp;using the Amazon EC2 Container Services (ECS) Deployment Type.</p></td><td><p>Add your ECS specs and any config variables and files.</p><p>You can define specs for the following:</p><ul><li>Replica Strategy</li><li>Daemon Strategy</li><li>awsvpc Network Mode</li><li>Service Discovery</li></ul><p>See the following:</p><ul><li><a href="/article/pn907a0s1o-add-a-replica-strategy-spec">Add an ECS Replica Strategy Spec</a></li><li><a href="/article/03bk3ndfnm-add-a-ecs-daemon-strategy-spec">Add an ECS Daemon Strategy Spec</a></li><li><a href="/article/hk1yz7ksqp-set-the-awsvpc-network-mode-in-specs">Set the awsvpc Network Mode in Specs</a></li><li><a href="/article/taptxfwq1c-add-a-service-discovery-spec">Add a Service Discovery Spec</a></li></ul></td></tr><tr><td><p>6</p></td><td><p>Create the Harness&nbsp;<strong>Environment</strong>&nbsp;and Infrastructure Definition for your target Kubernetes clusters), and any overrides.</p></td><td><p>Using the Harness Cloud Provider you set up, you can select the target Kubernetes cluster and namespace for your deployment.</p><p>You can also override any Service settings, such as manifest values. This enables you to use a single Service with multiple Harness Environments.</p><p>See <a href="/article/0ud2ut4vt2-define-your-kubernetes-target-infrastructure">Define Your Kubernetes Target Infrastructure</a>.</p></td></tr><tr><td><p>7</p></td><td><p>Create the Canary, Blue/Green, or Rollout deployment Harness&nbsp;<strong>Workflow</strong>.</p></td><td><p>The Workflow deploys the artifact(s) and Kubernetes workloads defined in the Harness Service to the cluster and namespace in the Harness Infrastructure Definition.</p><p>See:</p><ul><li><a href="/article/xsla71qg8t-create-a-kubernetes-rolling-deployment">Create a Kubernetes Rolling Deployment</a></li><li><a href="/article/i5p4feil89-create-a-kubernetes-canary-deployment">Create a Kubernetes Canary Deployment</a></li><li><a href="/article/mog5tnk5pi-create-a-kubernetes-blue-green-deployment">Create a Kubernetes Blue/Green Deployment</a></li></ul></td></tr><tr><td><p>8</p></td><td><p>Deploy the Workflow.</p></td><td><p>Once you've deployed a Workflow, learn how to improve your Kubernetes CD:</p><ul><li><a href="/article/yenenrhgcs-add-workflows-to-pipelines">Add Workflows to Pipelines</a></li><li><a href="/article/yupq093j6b-add-a-trigger">Add a Trigger</a></li><li><a href="/article/4m5d41bzg8-provision-kubernetes-infrastructures">Provision Kubernetes Infrastructures</a></li></ul></td></tr></tbody></table><h3 id="component_overview">Component Overview</h3><p>The following table lists the ECS components and where they are set up in Harness, as well as the related Harness components that perform ECS deployment operations. For detailed explanations of ECS, see the&nbsp;<a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html">ECS Developer Guide</a>&nbsp;from Amazon.</p><table><tbody><tr><td><p><strong>Component</strong></p></td><td><p><strong>Description</strong></p></td><td><p><strong>Harness Location</strong></p></td></tr><tr><td><p>Harness Delegate</p></td><td><p>A software service you run in the same VPC as the ECS cluster to enable Harness to perform deployment operations. The Delegate does not need root privileges, and it only makes an outbound HTTPS connection to the Harness platform.</p></td><td><p>This guide will describe how to set up the Harness Delegate for ECS deployment.</p><p>See&nbsp;<a href="/article/tbjffip7rp-set-up-an-aws-ecs-delegate">Set Up an AWS ECS Delegate</a>.</p></td></tr><tr><td><p>Harness Cloud Provider</p></td><td><p>A Cloud Provider is a logical representation of your AWS infrastructure. Typically, a Cloud Provider is mapped to a AWS account, Kubernetes cluster, Google service account, Azure subscription, or a data center.</p></td><td><p>This guide will describe how to set up the AWS Cloud Provider for ECS deployment.</p><p>See&nbsp;<a href="/article/bejr8ispzh-connect-to-amazon-web-services-aws-cloud">Connect to Amazon Web Services (AWS) Cloud</a>.</p></td></tr><tr><td><p>ECS Task Definition</p></td><td><p>Describes the Docker containers to run (CPU, memory, environment variables, ports, etc) and represents your application.</p></td><td><p>Specified in the Harness Service, in Container Specification.</p></td></tr><tr><td><p>ECS Task</p></td><td><p>Instance of a Task Definition. Multiple Tasks can be created by one Task Definition, as demand requires.</p></td><td><p></p></td></tr><tr><td><p>ECS Service</p></td><td><p>Defines the minimum and maximum Tasks from one Task Definition to run at any given time, autoscaling, and load balancing.</p></td><td><p>This is specified in the Harness Service, in Service Specification.</p></td></tr><tr><td><p>ECS Cluster</p></td><td><p>A Cluster is a group of ECS Container Instances where you run your service tasks in order for them to be accessible. The container management service handles the cluster across one or more ECS Container Instance(s), including the scheduling, maintaining, and scaling requests to these instances.</p></td><td><p>ECS Clusters are selected in two Harness components:</p><ul><li>The AWS Cloud Provider, via the IAM role for Delegate option.</li><li>Harness application Environment, where you select the AWS Cloud provider, and your ECS cluster name.</li></ul></td></tr><tr><td><p>Launch Types</p></td><td><p>There are two types:</p><ul><li>Fargate - Run containers without having to manage servers or clusters of Amazon EC2 instances.</li><li>EC2 - Run containers on a cluster of Amazon EC2 instances that you manage.</li></ul></td><td><p>You specify the launch type to use when adding a Service Infrastructure to a Harness Environment.</p></td></tr><tr><td><p>Replica Scheduling Strategy</p></td><td><p>Places and maintains the desired number of tasks across your cluster.</p></td><td><p>This is specified in the Harness Service, in Service Specification.</p></td></tr><tr><td><p>Daemon Scheduling Strategy</p></td><td><p>As of July 2018, ECS has a daemon scheduling strategy that deploys exactly one task on each active container instance that meets all of the task placement constraints that you specify in your cluster.</p><p>With a daemon strategy, a task is deployed onto each instance in a cluster to provide common supporting functionality.</p></td><td><p>This is specified in the Harness Service, in Service Specification.</p></td></tr><tr><td><p>awsvpc Network Mode</p></td><td><p>Provides each task with its own elastic network interface. Fargate task definitions require the awsvpc network mode.</p></td><td><p></p></td></tr><tr><td><p>Service Discovery</p></td><td><p>An ECS service can use the ECS Service Discovery to manage HTTP and DNS namespaces for ECS services via the AWS Cloud Map API actions.</p></td><td><p>This is specified in the Harness Service, in Service Specification.</p></td></tr><tr><td><p>Auto Scaling</p></td><td><p>Auto Scaling adjusts the ECS desired count up or down in response to CloudWatch alarms.</p></td><td><p>This is specified in the Harness Workflow ECS Service Setup command.</p></td></tr></tbody></table><h3>Next Steps</h3><p>Read the following topics to build on what you've learned:</p><ul><li><a href="/article/zujcby9dc4-kubernetes-deployments">Kubernetes Deployments</a> tutorial</li><li><a href="/category/mvyv0n1415-howtos-kubernetes">Kubernetes How-tos</a></li></ul><p></p>
  slug: aws-ecs-deployments-overview
  tags:
  - ECS overview
  - ECS deployment
  is_live: true
