type: article
article_id: jgi6d73noy
user_id: mfr0nxh4be
category_id: jcu7twh2t6
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Rollback Provisioned Infra with the Terraform Rollback Step
slug: rollback-provisioned-infra-with-the-terraform-rollback-step
description: Roll back your provisioned infrastructure and resources and return your
  environment to its pre-deployment state.
short_version: Roll back your provisioned infrastructure and resources and return
  your environment to its pre-deployment state.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-09-14T17:44:57.016713Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Rollback Provisioned Infra with the Terraform Rollback Step
  description: Roll back your provisioned infrastructure and resources and return
    your environment to its pre-deployment state.
  short_version: Roll back your provisioned infrastructure and resources and return
    your environment to its pre-deployment state.
  body: '<p>Harness includes a <strong>Terraform Rollback</strong> step that you can
    use to roll back your provisioned infrastructure and resources and return your
    environment to its pre-deployment state.</p><p>In this topic:</p><ul><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#before_you_begin">Before
    You Begin</a></li><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#review_terraform_rollback">Review:
    Terraform Rollback</a><ul><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#undefined">Rollback
    Limitations</a></li></ul></li><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#step_1_add_the_terraform_rollback_step">Step
    1: Add the Terraform Rollback Step</a></li><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#step_2_reference_the_provisioner_identifier">Step
    2: Reference the Provisioner Identifier</a></li><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step#see_also">See
    Also</a></li></ul><h3>Before You Begin</h3><ul><li><a href="/article/boug6e884h-terraform-provisioning-with-harness">Terraform
    Provisioning with Harness</a></li><li><a href="/article/uznls2lvod-provision-infra-dynamically-with-terraform">Provision
    Target Deployment Infra Dynamically with Terraform</a></li><li><a href="/article/hdclyshiho-run-a-terraform-plan-with-the-terraform-apply-step">Provision
    with the Terraform Apply Step</a></li></ul><h3>Important: Install Terraform on
    Delegates</h3><p>Terraform must be installed on the Delegate to use a Harness
    Terraform Provisioner. You can install Terraform manually or use the <code>INIT_SCRIPT</code> environment
    variable in the Delegate YAML.</p><p>See <a href="/article/yte6x6cyhn-run-scripts-on-delegates">Install
    Software on the Delegate with Initialization Scripts</a>.</p><pre class="hljs
    apache"># Install TF<br/>curl -O -L  https://releases.hashicorp.com/terraform/0.12.25/terraform_0.12.25_linux_amd64.zip<br/>unzip
    terraform_0.12.25_linux_amd64.zip<br/>mv ./terraform /usr/bin/<br/># Check TF
    install<br/>terraform --version</pre><h3>Review: Terraform Rollback</h3><p>When
    rollback happens, Harness rolls back the provisioned infrastructure to the previous
    successful version of the Terraform state.</p><p>Harness won&#39;t increment the
    serial in the state, but perform a hard rollback to the exact version of the state
    provided.</p><p>Harness determines what to rollback using the <strong>Provisioner
    Identifier</strong>.</p><p>If you&#39;ve made these settings expressions, Harness
    uses the values it obtains at runtime when it evaluates the expression.</p><h4
    id="undefined">Rollback Limitations</h4><p>Let&#39;s say you deployed two modules
    successfully already: module1 and module2. Next, you try to deploy module3, but
    deployment failed. Harness will roll back to the successful state of module1 and
    module2.</p><p>However, let&#39;s look at the situation where module3 succeeds
    and now you have module1, module2, and module3 deployed. If the next deployment
    fails, the rollback will only roll back to the Terraform state with module3 deployed.
    Module1 and module2 weren&#39;t in the previous Terraform state, so the rollback
    excludes them.</p><p></p><h3>Step 1: Add the Terraform Rollback Step</h3><p>You
    can add the Terraform Rollback step in two places:</p><ul><li>The <strong>Rollback</strong>
    steps of a stage&#39;s Infrastructure, in <strong>Dynamic Provisioning</strong>:</li></ul><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/uznls2lvod/1627413855931/clean-shot-2021-07-27-at-12-23-59.png"/></figure><ul><li>The
    <strong>Rollback</strong> steps of a stage&#39;s <strong>Execution</strong>:</li></ul><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/jgi6d73noy/1627420902929/clean-shot-2021-07-27-at-14-21-07.png"/></figure><p></p><p>Add
    the <strong>Terraform Rollback</strong> step.</p><p>In <strong>Name</strong>,
    enter a name for the step. You can use the name to reference the Terraform Rollback
    settings.</p><h3>Step 2: Reference the Provisioner Identifier</h3><p>In <strong>Provisioner
    Identifier</strong>, enter the same Provisioner Identifier you used in the Terraform
    Plan and Apply steps.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/jgi6d73noy/1627421705770/clean-shot-2021-07-27-at-14-34-48.png"/></figure><p>Click
    <strong>Apply Changes</strong>.</p><p>The Terraform Rollback step is added to
    the <strong>Rollback</strong> steps.</p><h3>See Also</h3><ul><li><a href="/article/j75xc704c8-remove-provisioned-infra-with-terraform-destroy">Remove
    Provisioned Infra with Terraform Destroy</a></li></ul><p></p>'
  slug: rollback-provisioned-infra-with-the-terraform-rollback-step
  tags: []
  is_live: true
