type: article
article_id: as4dtppasg
user_id: mfr0nxh4be
category_id: y6gyszr0kl
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Run Jenkins Jobs in CD Pipelines
slug: run-jenkins-jobs-in-cd-pipelines
description: Run Jenkins jobs in CD stages.
short_version: Run Jenkins jobs in CD stages.
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-22T17:01:09.207047Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Run Jenkins Jobs in CD Pipelines
  description: Run Jenkins jobs in CD stages.
  short_version: Run Jenkins jobs in CD stages.
  body: '<div class="note-callout">Currently, this feature is behind the feature flag
    <code>JENKINS_ARTIFACT</code>. Contact <a href="mailto:support@harness.io" target="_blank">Harness
    Support</a> to enable the feature.</div><p>Continuous Integration (CI) can be
    performed in Harness using the module and <a href="/article/3amcd8hn53-ci-pipeline-basics">CI
    Pipelines</a>.</p><p>If you are using Harness Continuous Delivery (CD) but not
    Harness Continuous Integration (CI), you can still perform CI using the Jenkins
    step in your CD Stage.</p><p>Harness integrates with <a href="https://jenkins.io/"
    target="_blank">Jenkins</a>, enabling you to run Jenkins jobs and dynamically
    capture inputs and outputs from the jobs. </p><p>This topic describes how to use
    the Jenkins step in a Harness CD Pipeline.</p><h3>Before You Begin</h3><ul><li><a
    href="/article/cqgeblt4uh-cd-pipeline-basics">CD Pipeline Basics</a></li></ul><h3
    id="undefined">Supported Platforms and Technologies</h3><p>See <a href="/article/220d0ojx5y-supported-platforms">Supported
    Platforms and Technologies</a>.</p><h3>Limitations and Requirements</h3><ul><li><strong>EnvInject
    Plugin:</strong> For Harness to capture Jenkins environment variables, your Jenkins
    configuration requires the <a href="https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin"
    target="_blank">EnvInject Plugin</a>. The plugin does not provide full compatibility
    with the Pipeline Plugin. See <a href="https://plugins.jenkins.io/envinject" target="_blank">Known
    limitations</a> from Jenkins.</li><li><strong>CD and Custom stage types only:</strong>
    the Jenkins step is available in CD (Deploy) and Custom stages only.</li></ul><h3>Review:
    Jenkins Integration</h3><p>With the <strong>Jenkins</strong> step, you can execute
    Jenkins jobs in the Stage&#39;s shell session.</p><p>When executing a job, you
    can also <em>dynamically capture</em> the output from the job, using runtime variables
    based on the context. You can then use those variables in another step in the
    same or other Stage or Pipeline.</p><h4 id="undefined">What Information is Available
    to Capture?</h4><p>Any Jenkins job information in the particular shell session
    of the Pipeline can be captured and output using one or more Jenkins steps. In
    addition, you can capture information available using the built-in Harness variables.
    For more information, see <a href="/article/lml71vhsim-harness-variables">Built-in
    and Custom Harness Variables Reference</a>.</p><p>Capturing and exporting output
    in the Jenkins step can be very powerful. For example, a Jenkins step could capture
    Jenkins build information, and a Harness Service could echo the build information
    and use it in a complex function, and then export the output down the Pipeline
    for further evaluation.</p><p></p><h3>Step 1: Add the Jenkins Step</h3><p>This
    step assumes you have a created a Pipeline and CD stage. If you are new to stages,
    see <a href="/article/2chyf1acil-add-a-stage">Add a Stage</a>.</p><p>In your CD
    Stage&#39;s <strong>Execution</strong>, click <strong>Add Step</strong>, and then
    click <strong>Jenkins</strong>.</p><h3>Step 2: Jenkins Connector</h3><p>Select
    the Jenkins server you added as a Harness Jenkins Connector. For more information,
    see <a href="/article/7frr40zml5-connect-to-jenkins">Connect to Jenkins</a>.</p><h3>Step
    3: Job Name</h3><p>Select the Jenkins job (also called a project) to execute.
    The list is automatically populated using the Jenkins Server you set up in the
    Jenkins Connector you selected.</p><h3>Option: Use Runtime Inputs and Expressions</h3><p>You
    can use Runtime Inputs or Expressions for the Jenkins Connector and Job Name.</p><p>See
    <a href="/article/f6yobn7iq0-runtime-inputs">Fixed Values, Runtime Inputs, and
    Expressions</a>.</p><h3>Option: Job Parameters</h3><p>If you are using a <a href="https://wiki.jenkins.io/display/JENKINS/Parameterized+Build"
    target="_blank">parameterized build</a>, when you select the job in <strong>Job
    Name</strong>, Harness will automatically populate any Job parameters from the
    server.</p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/as4dtppasg/1658793394507/clean-shot-2022-07-25-at-16-56-19.png"/></figure><p>You
    can also add parameters manually by clicking <strong>Add Job Parameter</strong>.</p><div
    class="note-callout">Runtime Inputs and Expressions are supported for the <strong>Value</strong>
    only.</div><p>You can reference a Job parameter from the Input tab of the executed
    step.</p><p></p><table><tbody><tr><td><p><strong>Job Parameters from Jenkins Step</strong></p></td><td><p><strong>Executed
    Jenkins step Inputs</strong></p></td></tr><tr><td><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/as4dtppasg/1658793551647/clean-shot-2022-07-25-at-16-56-19.png"/></figure></td><td><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/as4dtppasg/1658793534646/clean-shot-2022-07-25-at-16-58-34.png"/></figure></td></tr></tbody></table><p></p><p></p><h3>Option:
    Treat Unstable Jenkins Status as Success</h3><p>If this setting is enabled then
    <code>Unstable</code> statuses will be considered as <code>Success</code>.</p><p></p><h3>Option:
    Advanced Settings</h3><p>In <strong>Advanced</strong>, you can use the following
    options:</p><ul><li><a href="/article/i36ibenkq2">Step Skip Condition Settings</a></li><li><a
    href="/article/htrur23poj">Step Failure Strategy Settings</a></li><li><a href="/article/nnuf8yv13o">Select
    Delegates with Selectors</a></li></ul><p></p><h3>Review: Captured Environment
    Variables from Jenkins Builds</h3><div class="note-callout">For Harness to capture
    Jenkins environment variables, your Jenkins configuration requires the <a href="https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin"
    target="_blank">EnvInject Plugin</a>. The plugin does not provide full compatibility
    with the Pipeline Plugin. See <a href="https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin#EnvInjectPlugin-Knownincompatibilities"
    target="_blank">Known Incompatibilities</a> from Jenkins.</div><p>Harness captures
    certain environment variables from the Jenkins build.</p><p>The following list
    shows the environment variables and the expressions you can use to reference them:</p><ul><li><strong>Job
    Status:</strong> <code>&lt;+pipeline.stages.&lt;stage Id&gt;.spec.execution.steps.&lt;step
    Id&gt;.build.executionStatus&gt;</code></li><li><strong>Job URL:</strong> <code>&lt;+pipeline.stages.&lt;stage
    Id&gt;.spec.execution.steps.&lt;step Id&gt;.build.jobUrl&gt;</code></li><li><strong>Build
    number:</strong> <code>&lt;+pipeline.stages.&lt;stage Id&gt;.spec.execution.steps.&lt;step
    Id&gt;.build.buildNumber&gt;</code></li><li><strong>Build display name:</strong>
    <code>&lt;+pipeline.stages.&lt;stage Id&gt;.spec.execution.steps.&lt;step Id&gt;.build.buildDisplayName&gt;</code></li><li><strong>Full
    build display name:</strong> <code>&lt;+pipeline.stages.&lt;stage Id&gt;.spec.execution.steps.&lt;step
    Id&gt;.build.buildFullDisplayName&gt;</code></li></ul><p>You can reference this
    Job information is subsequent steps in your Pipeline or another Pipeline.</p><h3>Review:
    Multibranch Pipeline Support</h3><div class="note-callout">For Harness to capture
    Jenkins environment variables, your Jenkins configuration requires the <a href="https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin"
    target="_blank">EnvInject Plugin</a>. The plugin does not provide full compatibility
    with the Pipeline Plugin. See <a href="https://wiki.jenkins.io/display/JENKINS/EnvInject+Plugin#EnvInjectPlugin-Knownincompatibilities"
    target="_blank">Known Incompatibilities</a> from Jenkins.</div><p>The Jenkins
    Multibranch Pipeline (Workflow Multibranch) feature enables you to automatically
    create a Jenkins pipeline for each branch on your source control repo.</p><p>Each
    branch has its own <a href="https://jenkins.io/doc/book/pipeline/jenkinsfile/"
    target="_blank">Jenkinsfile</a>, which can be changed independently. This features
    enables you to handle branches better by automatically grouping builds from feature/experimental
    branches.</p><p>In <strong>Job Name</strong>, multibranch pipelines are displayed
    alongside other Jobs, with the child branches as subordinate options.</p><p>Click
    <strong>&gt;</strong> and select the branch.</p><h3>Review: Output Expressions</h3><p>You
    can copy expressions for the Job outputs from the Output tab of the Jenkins step:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/as4dtppasg/1658790797206/clean-shot-2022-07-25-at-16-12-44.png"/></figure><p></p><p></p>'
  slug: run-jenkins-jobs-in-cd-pipelines
  tags: []
  is_live: true
