type: article
article_id: hngrlb7rd6
user_id: mfr0nxh4be
category_id: sy6sod35zi
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Harness Secrets Management Overview
slug: harness-secret-manager-overview
description: Harness includes a built-in Secrets Management feature that enables you
  to store encrypted secrets, such as access keys, and use them in your Harness account.
  Some key points about Secrets Management…
short_version: Harness includes a built-in Secrets Management feature that enables
  you to store encrypted secrets, such as access keys, and use them in your Harness
  account. Some key points about Secrets Management…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-06T16:59:09.624213Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Harness Secrets Management Overview
  description: ""
  short_version: ""
  body: <p>Harness includes a built-in Secrets Management feature that enables you
    to store encrypted secrets, such as access keys, and use them in your Harness
    account. Some key points about Secrets Management:</p><ul><li>Secrets are always
    stored in encrypted form and decrypted when they are needed.</li><li>Harness Manager
    does not have access to your key management system, and only the Harness Delegate,
    which sits in your private network, has access to it. Harness never makes secrets
    management accessible publicly. This adds an important layer of security.</li></ul><h3>Before
    You Begin</h3><ul><li>See <a href="/article/hv2758ro4e-learn-harness-key-concepts">Harness
    Key Concepts</a></li></ul><h3>Visual Summary</h3><p>You can choose to use your
    own secrets management solution, or the built-in Harness Secrets Manager. This diagram
    shows how Harness handles secrets:</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/hngrlb7rd6/1618224217796/image.png"/></figure><p></p><h3>Harness
    Secrets Management Process Overview</h3><p>Harness sends only encrypted data to
    the Secrets Manager, as follows: </p><ol><li>Your browser sends data over HTTPS
    to Harness Manager. </li><li>Harness Manager relays encrypted data to the Harness
    Delegate, also over HTTPS. </li><li>The Delegate exchanges a key pair with the
    Secrets Manager, over an encrypted connection. </li><li>The Harness Delegate uses
    the encrypted key and the encrypted secret and then discards them. The keys never
    leave the Delegate.</li></ol><div class="note-callout">Any secrets manager requires
    a running Harness Delegate to encrypt and decrypt secrets. Any Delegate that references
    a secret requires direct access to the Secrets Manager.</div><p>You can manage
    your secrets in Harness using either a Key Management Service or third-party Secrets
    Manager.</p><h4>Using Key Management Services</h4><p>Google Cloud Key Management
    Service is the default Secrets Manager in Harness and is named Harness Secrets
    Manager Google KMS.</p><p>The Key Management Service (Google Cloud KMS or AWS
    KMS) only stores the key. Harness uses <a href="https://cloud.google.com/kms/docs/envelope-encryption">envelope
    encryption</a> to encrypt and decrypt secrets. The encrypted secret and the encrypted
    Data Encryption Key (used for envelope encryption) are stored in the Harness database. </p><div
    class="warning-callout">If you are using a KMS, rotation of keys is not supported
    by Harness and you might lose access to your secrets if the older version of the
    key is removed from your KMS.</div><h4>Using Third-Party Secrets Managers</h4><p>You
    can also use third-party Secrets Managers — HashiCorp Vault, Azure Key Vault,
    and AWS Secrets Manager.</p><p>These Secrets Managers store the key, perform encryption
    and decryption, and also store the secrets (encrypted key pair). Neither the keys
    nor the secrets are stored in the Harness database. A reference to the secret
    is stored in the Harness database.</p><h4 id="undefined">Secrets in Harness Community
    and Self-Managed Enterprise Edition Accounts</h4><p>In Community and Self-Managed
    Enterprise Edition accounts, Harness uses a random-key secrets store as the Harness
    Secrets Manager.</p><div class="note-callout">Once you have installed Self-Managed
    Enterprise Edition, <a href="/article/bo4qbrcggv-add-secrets-manager">Add a Secrets
    Manager</a>. By default, Self-Managed Enterprise Edition installations use the
    local Harness MongoDB for the default Harness Secrets Manager. This is not recommended.</div><div
    class="note-callout">Harness does not currently support migrating secrets from
    the random-key secrets store. If you add secrets here, you will need to recreate
    them in any custom secrets manager you configure later.</div><p>All Harness secrets
    managers require a running Harness Delegate to encrypt and decrypt secrets.</p><p>If
    you created a Harness trial account, a Delegate is typically provisioned by Harness,
    and the default Harness Secrets Manager performs encryption/decryption.</p><h4>Harness
    Secrets and Harness Git Experience</h4><p>When you set up <a href="/article/utikdyxgfz-harness-git-experience-overview">Harness
    Git Experience</a>, you select the Connectivity Mode for Git syncing. You have
    two options:</p><ul><li><strong>Connect Through Manager:</strong> Harness SaaS
    will connect to your Git repo whenever you make a change and Git and Harness sync.</li><li><strong>Connect
    Through Delegate:</strong> Harness will make all connections using the Harness
    Delegate. This option is used for Self-Managed Enterprise Edition frequently,
    but it is also used for Harness SaaS. See <a href="/article/tb4e039h8x-harness-on-premise-overview">Harness
    Self-Managed Enterprise Edition Overview</a>.</li></ul><p>If you select <strong>Connect
    Through Manager</strong>, the <u>Harness Manager</u> decrypts the secrets you
    have set up in the Harness Secrets Manager.</p><p>This is different than <strong>Connect
    Through Delegate</strong> where only the Harness Delegate, which sits in your
    private network, has access to your key management system.</p>
  slug: harness-secret-manager-overview
  tags: []
  is_live: true
