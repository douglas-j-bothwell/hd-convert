type: article
article_id: s65mzbyags
user_id: 2te4j9f9g7
category_id: 48wnu4u0tj
author:
  name: Rashmi Nanda Sahoo
  profile_image: https://www.gravatar.com/avatar/b7bfd905f8714099535f2ff657fa3975?d=mm&s=150
title: Add a HashiCorp Vault Secret Manager
slug: add-hashicorp-vault
description: This document explains how to store and use encrypted secrets (such as
  access keys) by adding a HashiCorp Vault Secrets Manager.
short_version: This document explains how to store and use encrypted secrets (such
  as access keys) by adding a HashiCorp Vault Secrets Manager.
tags:
- secret management
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-09-12T04:01:01.467863Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Add a HashiCorp Vault Secret Manager
  description: This document explains how to store and use encrypted secrets (such
    as access keys) by adding a HashiCorp Vault Secrets Manager.
  short_version: This document explains how to store and use encrypted secrets (such
    as access keys) by adding a HashiCorp Vault Secrets Manager.
  body: '<p>To store and use encrypted secrets (such as access keys), you can add
    a HashiCorp Vault Secret Manager.</p><h3>Before You Begin</h3><ul><li><a href="https://ngdocs.harness.io/article/hv2758ro4e-learn-harness-key-concepts">Learn
    Harness&#39; Key Concepts</a></li><li><a href="https://ngdocs.harness.io/article/hngrlb7rd6-harness-secret-manager-overview">Harness
    Secret Manager Overview</a></li><li>Make sure that the Harness Delegate can connect
    to the Vault URL.</li><li>Make sure you have View and Create/Edit permissions
    for secrets.​</li></ul><h3>Step 1: Add a Secret Manager</h3><p>This topic assumes
    you have a Harness Project set up. If not, see <a href="https://ngdocs.harness.io/article/36fw2u92i4-create-an-organization">Create
    Organizations and Projects</a>.</p><p>You can add a Connector at Project/Organization/Account
    scope. To do this, go to Project setup, Organization, or Account Resources.</p><p>In <strong>Connectors</strong>,
    click <strong>Connector</strong>.</p><p>In <strong>Secret Managers</strong>, click <strong>HashiCorp
    Vault</strong>. The HashiCorp Vault Secret Manager settings appear.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/bo4qbrcggv/1619414378466/screenshot-2021-04-26-at-10-28-21-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Step
    2: Overview</h3><p>Enter a <strong>Name</strong> for your secret manager.</p><p>You
    can choose to update the <strong>ID</strong> or let it be the same as your secret
    manager&#39;s name. For more information, see <a href="/article/li0my8tcz3-entity-identifier-reference">Entity
    Identifier Reference</a>.</p><p>Enter <strong>Description</strong> for your secret
    manager.</p><p>Enter <strong>Tags</strong> for your secret manager.</p><p>Click
    <strong>Save and Continue.</strong></p><p>Enter <strong>Vault URL</strong>.</p><p>Enter
    <strong>Base Secret Path</strong>. The Base Secret Path is used for writing secrets.
    When Harness reads secrets, it uses the full path.</p><p>For more information,
    see <a href="https://www.vaultproject.io/docs/index.html" target="_blank">Vault
    documentation</a>.</p><p>Select the <strong>Authentication</strong> Type.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1647251581434/screenshot-2022-03-14-at-3-22-11-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Option:
    App Role</h3><p>The App Role option enables the Harness Vault Secret Manager to
    authenticate with Vault-defined roles.</p><p>The Vault AppRole method allows you
    to define multiple roles corresponding to different applications, each with different
    levels of access. The application&#39;s <strong>App Role ID</strong> and <strong>Secret
    ID</strong> are used for authentication with Vault. You need these to log in and
    fetch a Vault token.</p><p>To assign a <strong>Secret ID</strong>, you can create
    a new <a href="/article/osfw70e59c"><strong>Secret</strong></a> or choose an existing
    one.</p><div class="note-callout">The Secret should not expire and it should be
    valid until you manually revoke it. You would need this Secret to generate new
    tokens when the older tokens expire.</div><p>Harness will use the App Role ID
    and Secret ID that you supply, to fetch a Vault Auth Token dynamically at configured
    intervals. This interval is set in Renewal Interval.</p><p>For more information,
    see <a href="https://www.vaultproject.io/docs/auth/approle.html#roleid">RoleID</a> and <a
    href="https://www.hashicorp.com/blog/authenticating-applications-with-vault-approle">Authenticating
    Applications with HashiCorp Vault AppRole</a> from HashiCorp.</p><div class="note-callout">If
    you encounter errors, setting <a href="https://www.vaultproject.io/api-docs/auth/approle#token_num_uses"
    target="_blank">token_num_uses</a> to <code>0</code> can often resolve problems.</div><h4>Permissions</h4><p>The
    Vault AppRole ID or the Periodic Token used in either of the authentication options
    must have an ACL policy attached so that Harness can use it. Typically, you create
    the policy first, then create the AppRole or Periodic Token and attach the policy.</p><div
    class="tip-callout">In the policy examples below: if you&#39;ve created a Read-only
    Vault Secret Manager, this secret manager needs only read, and list permissions
    on Vault. It does not need — and cannot assume — create, update, or delete permissions.</div><p>If
    the secrets are in the Secret Engine named “secret”, the policy must have the
    following permissions.</p><pre class="hljs nginx">path &#34;secret/*&#34; {<br/>  capabilities
    = [&#34;create&#34;, &#34;update&#34;, &#34;list&#34;, &#34;read&#34;, &#34;delete&#34;]<br/>}</pre><p>If
    the secrets are in a subfolder, such as secrets/harness, the policy will look
    like this:</p><pre class="hljs nginx">path &#34;secret/harness/*&#34; {<br/>  capabilities
    = [&#34;create&#34;, &#34;list&#34;, &#34;read&#34;, &#34;update&#34;, &#34;delete&#34;]<br/>}<br/>path
    &#34;secret/harness&#34; {<br/>  capabilities = [&#34;list&#34;, &#34;read&#34;]<br/>}</pre><p></p><div
    class="note-callout">These examples apply only to a <strong>v1</strong> secret
    engine. If you are planning to use a secret engine with version 2 (versioned secret
    engine), then the policies are different as explained <a href="https://www.vaultproject.io/docs/secrets/kv/kv-v2">here</a>.
    Go through this link to understand the correct permissions required for your use
    case.</div><p>If the Vault Secret Manager needs to renew tokens, the following
    permissions are needed:</p><pre class="hljs nginx">path &#34;auth/token/renew-self&#34;
    {<br/> capabilities = [&#34;read&#34;, &#34;update&#34;]<br/>}</pre><p></p><h3>Option:
    Token</h3><p>For Harness, the <strong>Token</strong> option requires <a href="https://www.vaultproject.io/docs/concepts/tokens#periodic-tokens"
    target="_blank">periodic tokens</a> (tokens that have renewal options).</p><p>To
    create a periodic token, make sure to specify a period in the token creation command:</p><pre
    class="hljs routeros">vault token create -policy=harness -period=768h</pre><p></p><p>Next,
    use the new token with Harness. To do this, perform the below steps:</p><ul><li>Click
    <strong>Create or Select a Secret</strong>.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1625565586825/screenshot-2021-07-06-at-11-48-45-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>The
    secret settings page appears. Here you can either <strong>Create a new</strong>
    <a href="/article/osfw70e59c"><strong>Secret</strong></a> or <strong>Select an
    existing secret</strong>. If creating a new Secret, enter the token which you
    created in the <strong>Secret Value</strong> field.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1625553944380/screenshot-2021-07-06-at-12-14-55-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li></ul><p></p><p>For
    detailed steps on creating a secret, see <a href="/article/osfw70e59c">Add Text
    Secrets</a>.</p><p>If you have already added a Secret with your token, you can
    choose the same as shown below:</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1625554656771/screenshot-2021-07-06-at-12-24-02-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><ul><li>Click
    <strong>Apply</strong>.</li></ul><p>If you want to verify the renewal manually,
    use the command:</p><pre class="hljs nginx">vault token lookup &lt;token_id&gt;</pre><h3>Option:
    Vault Agent</h3><p>This option enables the Harness Vault Secret Manager to authenticate
    with the Auto-Auth functionality of the <a href="https://www.vaultproject.io/docs/agent/autoauth"
    target="_blank">Vault Agent</a>.</p><p>To authenticate with Vault Agent, make
    sure you have configured it on the required environment, with entries for <strong>method</strong> and <strong>sinks</strong>.
    For more information, see <a href="https://www.vaultproject.io/docs/agent">Vault
    Agent</a>.</p><p>In the <strong>Sink Path</strong> field, enter any sink path
    you have in your Vault Agent Configuration. This is the path of the encrypted
    file with tokens. The specified Delegate reads this file through file protocol
    (file://).</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1635299427446/screenshot-2021-10-27-at-7-14-51-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>Option:
    AWS Auth</h3><p>This option provides an automated mechanism to retrieve a Vault
    token for IAM principals and AWS EC2 instances. With this method, you do not need
    to manually install or supply security-sensitive credentials such as tokens, usernames,
    or passwords.</p><p>In the AWS Auth method, there are two authentication types:</p><ul><li>IAM</li><li>
    EC2.</li></ul><p>Harness recommends using the IAM technique for authentication
    since it is more versatile and complies with standard practises.</p><p>To authenticate
    with AWS Auth, make sure you have configured the vault with entries for <strong>Header</strong>,
    <strong>Role</strong>, and <strong>Region</strong>. For more information, see
    <a href="https://www.vaultproject.io/docs/auth/aws#iam-auth-method">AWS Auth Method</a>.</p><p>You
    must add the <strong>Server ID Header</strong> from Vault as a <a href="/article/osfw70e59c">Harness
    Encrypted Text Secret</a> and select it for <strong>Server Id Header</strong>
    in Harness.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1645163610743/screenshot-2022-02-18-at-11-22-56-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>In
    <strong>Role</strong>, enter the role you have configured in the Vault.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1645162819233/screenshot-2022-02-18-at-11-09-40-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>In
    <strong>Region</strong>, enter the AWS Region for the Secret Manager.</p><h3>Option:
    Kubernetes Auth</h3><p>This option uses a Kubernetes Service Account Token to
    authenticate with Vault. With this method of authentication, you can easily add
    a Vault token into a Kubernetes Pod.</p><p>To authenticate with Kubernetes Auth,
    make sure you have created a role in the vault inside <code>auth/kubernetes/role</code>.
    This role authorizes the &#34;vault-auth&#34; service account in the default namespace
    and it gives it the default policy. This is also where you&#39;ll find the <strong>service
    account name</strong> and <strong>namespace</strong> that will be used to access
    the vault endpoint.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1647314472462/screenshot-2022-03-14-at-3-36-28-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>For
    more information, see <a href="https://www.vaultproject.io/docs/auth/kubernetes#configuration">Kubernetes
    Auth Method</a>.</p><p>In <strong>Role Name</strong>, enter the role you have
    configured in the Vault.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1647313207252/screenshot-2022-03-15-at-8-26-37-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>In
    <strong>Service Account Token Path</strong> enter the JSON Web Token (JWT) path.
    This is the path where the JWT token is mounted. The default path of this token
    is <code>/var/run/secrets/kubernetes.io/serviceaccount/token</code>.</p><p>For
    more information, see <a href="https://kubernetes.io/docs/reference/access-authn-authz/authentication/#service-account-tokens">Service
    Account Tokens</a>.</p><h3>Step 2: Select Secret Engine and Version</h3><p>Once
    you have entered the required fields, you can choose to <strong>Fetch Engines</strong> or <strong>Manually
    Configure Engine</strong>.</p><h4 id="undefined">Fetch Engines</h4><p>If you want
    Harness to automatically fetch secret engines, include this read permission for <strong>sys/mounts</strong> In
    the ACL policy.</p><pre class="hljs nginx">path &#34;sys/mounts&#34;{<br/> capabilities
    = [&#34;read&#34;]<br/>}</pre><p></p><p>Click <strong>Fetch Engines</strong>.</p><p>Harness
    will populate the Secret Engine drop-down with the list of engines and their versions.</p><p>Select
    the engine you want to use.</p><h4>Manually Configure Engine</h4><p>If you don’t
    want to or cannot add the ACL policy (with read permission for sys/mounts) in
    the Secret Manager, perform the following steps:</p><ol><li>Identify the engine
    version of the Secret Manager in Vault.</li><li>In <strong>Secret Engine Name</strong>,
    enter the name of the Secret Engine.</li><li>In <strong>Secret Engine</strong>
    <strong>Version</strong>, enter the engine version.</li></ol><div class="note-callout">You
    cannot change the Secret Engine later. Harness blocks editing this setting later
    since there might be secrets that are created/referenced under this secret engine.
    Changing the secret engine might break references to those secrets.</div><h3>Step
    3: Renewal Interval (minutes)</h3><p>In <strong>Renew Interval</strong>, you can
    (optionally) enter how often the Harness Delegate reloads the Vault access token.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1620023557996/screenshot-2021-05-03-at-12-01-47-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><div
    class="note-callout">You can expect a delay during the Vault renewal. A periodic
    job runs to check if there has to be a renewal, resulting in a delay of no more
    than two minutes.</div><h3>Review: Validating Non-Read Only Vault Secret Managers</h3><p>To
    validate a non-read-only Vault Secret Manager, Harness creates a dummy secret
    in the secret engine.</p><p>The path of the secret is as follows:</p><p>v2 Secret
    Engine:</p><p><code>&lt;SECRET_ENGINE_NAME&gt;/data/&lt;BASE_PATH&gt;/harness_vault_validation#value</code></p><p>v1
    Secret Engine:</p><p><code>&lt;SECRET_ENGINE_NAME&gt;/&lt;BASE_PATH&gt;/harness_vault_validation#value</code></p><p>The
    secret can fail because of various reasons.</p><ol><li>Using the Token/App Role,
    the V<strong>ault</strong> authentication is not successful.</li><li>The following <strong>permission</strong> is
    not available in any of the policies attached to the Token/App Role. If this permission
    is not available, the user will not be able to fetch the list of secret engines
    from the customer vault and Harness will show a single option of Secret Engine
    named <strong>“secret”</strong> with version 2, which might be incorrect for the
    customer. Make sure to add the permission to a policy attached to the Token/App
    Role as follows:</li></ol><pre class="hljs nginx">         path “sys/mounts”{<br/>            capabilities
    = [&#34;read&#34;]<br/>            }    </pre><ol><li>3. The policy attached to
    the Token/AppRole does not provide the <strong>write </strong>permission in the
    specified path. Make sure you update the policies and permissions.</li></ol><h3>Step
    4: Read-only Vault</h3><p>If required by your organization&#39;s security practices,
    select the <strong>Read-only Vault</strong> check box. This selection authorizes
    Harness to read secrets from Vault, but not to create or manage secrets within
    Vault.</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/s65mzbyags/1620023641368/screenshot-2021-05-03-at-12-03-14-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>Once
    you have filled out the required fields, click <strong>Finish</strong>.</p><h5
    id="undefined">Read-only Limitations</h5><p>If you select <strong>Read-only Vault</strong>,
    there are several limitations on the resulting Harness Vault Secret Manager. A
    read-only secret manager cannot be Harness&#39; default secret manager.</p><p>Also
    a read-only Harness Vault Secret Manager:</p><ul><li>Cannot be used in the <strong>Add
    Encrypted File</strong> dialog.</li><li>Cannot create inline secrets in the <strong>Add
    Encrypted Text</strong> modal.</li><li>Cannot migrate (deprecate) its secrets
    to another secret manager. </li><li>Cannot have secrets migrated to it from another
    secret manager.</li></ul><h3>Step 5: Test Connection</h3><p>Once the Test Connection
    succeeds, click Finish. You can now see the Connector in Connectors.</p><details><summary>Important:
    Test Connection fails</summary><div>​Harness tests connections by creating a dummy
    secret in the Secret Manager or Vault. For the Test Connection to function successfully,
    make sure you have Create permission for secrets. <br/>The Test Connection fails
    if you do not have Create permission. However, Harness still creates the Connector
    for you. You may use this Connector to read secrets, if you have View permissions.</div></details><p></p>'
  slug: add-hashicorp-vault
  tags:
  - secret management
  is_live: true
