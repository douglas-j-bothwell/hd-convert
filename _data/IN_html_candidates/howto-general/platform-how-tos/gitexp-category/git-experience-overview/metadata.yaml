type: article
article_id: xl028jo9jk
user_id: 2te4j9f9g7
category_id: rv2jo2hoiy
author:
  name: Rashmi Nanda Sahoo
  profile_image: https://www.gravatar.com/avatar/b7bfd905f8714099535f2ff657fa3975?d=mm&s=150
title: Harness Git Experience Overview
slug: git-experience-overview
description: Harness Git Experience lets you store configurations for your resources
  like Pipelines, Input Sets in Git. You can choose Git as the source of truth and
  use your Git credentials to access and modify…
short_version: Harness Git Experience lets you store configurations for your resources
  like Pipelines, Input Sets in Git. You can choose Git as the source of truth and
  use your Git credentials to access and modify…
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-25T08:36:21.309041Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Harness Git Experience Overview
  description: ""
  short_version: ""
  body: <p>Harness Git Experience lets you store configurations for your resources
    like Pipelines, Input Sets in Git. You can choose Git as the source of truth and
    use your Git credentials to access and modify your configurations.</p><p>With
    Harness Git Experience, you can select the repository and branch from where you
    want to execute your Pipelines, hence simplifying your Pipeline execution by seamless
    access to your Harness resources and their configurations stored in Git.</p><h3>Before
    You Begin</h3><ul><li>Make sure you have a Git repo with at least one branch.​</li><li>Make
    sure you have a Git connector with a Personal Access Token (PAT) for your Git
    account.​</li></ul><h3>Supported Git Providers</h3><p>The following section lists
    the support for Git providers for Harness Git Sync:​</p><ul><li>GitHub</li><li>Bitbucket
    Cloud</li><li>Bitbucket Server</li></ul><div class="warning-callout">Make sure
    <code>feature.file.editor</code> is not set to <code>false</code> in the <code>bitbucket.properties</code>
    file if you are using Bitbucket on-prem.</div><h3>Supported Harness Entities</h3><p>You
    can save the following Harness resources in Git using Harness Git Experience:</p><ul><li>Pipelines</li><li>Input
    Sets</li></ul><h3>What is Harness Git Experience?</h3><p>Harness Git Experience
    lets you choose a Git-First approach for managing Harness configurations as code,
    using Git as the source of truth.</p><p>You can do this by creating a resource
    with the <strong>Remote</strong> option and specifying the Git repo and branch
    where you want to save your configurations.</p><p>For example, you can create
    a Pipeline by choosing the <strong>Remote</strong> option and save it in Git by
    providing the repo name and branch name along with the file path.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/xl028jo9jk/1655807024937/screenshot-2022-05-24-at-2-24-49-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p></p><p>Harness
    Git Experience lets you modify the configurations stored in Git through the Harness
    UI and save it back to Git.</p><p>You can save the modifications in the existing
    branch or a new branch through a PR.</p><h3>Harness Git Experience Workflow</h3><ul><li>When
    you create a Remote resource in Harness, the configurations are stored in Git.</li><li>You
    can select the branch from which you want to run the Pipeline.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/xl028jo9jk/1655809275588/screenshot-2022-06-06-at-9-32-20-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure></li><li>During
    Pipeline execution, the configurations of the required resources and any referenced
    entities like Input Sets, are fetched from Git.<br/>If the referenced entities
    exist in the same repo, they are fetched from the same branch that you have selected
    for Pipeline execution.<br/>If the referenced entities exist in a different repo,
    they are fetched from the default branch of the repo where the entities are stored.</li><li>Harness
    resolves all the dependencies and then proceeds with the Pipeline execution.</li></ul><h3>Key
    Features</h3><p>Following are the key features of Harness Git Experience:</p><h4>Multiple
    Repo Support</h4><p>Your Harness resources and their configurations can exist
    in multiple repos. You can choose the repository where you wish to make the modifications
    before pushing each configuration. At Pipeline execution, Harness pulls them all
    together to execute your Pipeline as you designed it. This gives you the flexibility
    to manage your Git repositories in the way you want.</p><p>You can store your
    configurations in the following ways:</p><ul><li>Store configuration files along
    with the code repository.</li><li>Store configuration files in a repository separate
    from the code.</li><li>Store the prod configurations in one repo, and the non-prod
    ones in another repo, so that only the selected developers can access prod configs.</li><li>Store
    the configuration files of different environments in different branches.</li><li>Store
    the Pipelines in one repository, and other configuration files in another.</li></ul><h4>Multiple
    Branch Support</h4><p>Multiple users can make commits to multiple branches for
    the resources that are synced with the Git Provider. This provides the flexibility
    for various branching workflows.</p><h3>What Can I Do with Harness Git Experience?</h3><p>Harness
    Git Experience helps you do the following:</p><ul><li>Store and retrieve your
    Harness configurations to/from Git.</li><li>Change the Harness configuration just
    by changing the YAML files in Git.</li><li>Add a remote Pipeline in Harness and
    it gets added to your specified Git repo and branch.</li><li>Maintain your key
    Harness resources like Pipelines, Input sets like you maintain code.</li><li>Submit
    config changes using the Harness Pipeline Studio (GUI and/or YAML) or entirely
    in Git.</li><li>Make Harness Pipeline or resource config changes in a branch,
    test it in isolation (sandbox), and submit changes to master using Harness Manager
    or your Git platform.</li></ul><h3>What Do I Need to Enable Harness Git Experience?</h3><h4>Git
    Connector</h4><p>A Harness Git Connector is used to sync your Harness Project
    with your Git repo. You can set up a <a href="/category/xyexvcc206-ref-source-repo-provider">Git
    Connector</a> first and simply select it when setting up Git Experience, or you
    can create a Git Connector as part of the Git Experience setup.</p><p>You will
    need a Harness Git Connector to connect with the Git provider and perform operations
    like generating a webhook. Your Git Connector credentials are used to commit to
    Git when operations are performed using API.</p><div class="note-callout"><strong>Important:</strong> The
    Connector must use the <strong>Enable API access</strong> option and Username
    and <strong>Token</strong> authentication. Harness requires the token to access
    the Git API. Generate the token in your account on the Git provider and add it
    to Harness as a Secret. Next, use the token in the credentials for the Git Connector.</div><p>For
    detailed steps to add a Git Connector, see <a href="/category/xyexvcc206-ref-source-repo-provider">Code
    Repo Connectors</a>.</p><h4>Repository</h4><p>Harness configurations are stored
    in repositories. These configuration files can be kept in the same repository
    as the code, or they can be kept separate. You can map your resources and configurations
    to multiple repositories.</p><div class="note-callout">You must have valid Git
    credentials and a repo within this Git account before you enable Harness Git Experience.</div><h3>Next
    Steps</h3><ul><li><a href="/article/grfeel98am-configure-git-experience-for-harness-entities">Harness
    Git Experience Quickstart</a></li><li><a href="/article/8tdwp6ntwz-manage-input-sets-in-simplified-git-experience">Manage
    Input Sets and Triggers in Git Experience</a></li><li><a href="/article/5nz7j3e1yc-manage-a-harness-pipeline-repo-using-git-experience">Manage
    a Harness Pipeline Repo using Git Experience</a></li></ul><p></p>
  slug: git-experience-overview
  tags: []
  is_live: true
