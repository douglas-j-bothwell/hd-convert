type: article
article_id: rb33l4x893
user_id: 2te4j9f9g7
category_id: fe0577j8ie
author:
  name: Rashmi Nanda Sahoo
  profile_image: https://www.gravatar.com/avatar/b7bfd905f8714099535f2ff657fa3975?d=mm&s=150
title: Single Sign-On (SSO) with OAuth
slug: single-sign-on-sso-with-oauth
description: This document explains single sign-on with various OAuth providers.
short_version: This document explains single sign-on with various OAuth providers.
tags:
- AccessManagement
- azure
- GitLab
- Github
- LinkedIn
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-28T07:48:15.711704Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Single Sign-On (SSO) with OAuth
  description: This document explains single sign-on with various OAuth providers.
  short_version: This document explains single sign-on with various OAuth providers.
  body: '<p>Harness supports Single Sign-On (SSO) with OAuth 2.0 identity providers,
    such as GitHub, Bitbucket, GitLab, LinkedIn, Google, and Azure. This integration
    allows you to use an OAuth 2.0 provider to authenticate your Harness Users.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623430496791/screenshot-2021-06-11-at-10-23-51-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p>Once
    OAuth 2.0 SSO is enabled, Harness Users can simply log into Harness using their
    GitHub, Google, or other provider&#39;s email address.</p><p>In this topic:</p><ul><li><a
    href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#before_you_begin">Before
    You Begin</a></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#requirements">Requirements</a><ul><li><a
    href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#git_hub_primary_email_required_for_harness_login">GitHub
    Primary Email Required For Harness Login</a></li></ul></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#setup_overview">Setup
    Overview</a><ul><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#how_do_i_prevent_lockouts">How
    Do I Prevent Lockouts?</a></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#harness_local_login">Harness
    Local Login</a></li></ul></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#set_up_o_auth_2_0_sso">Set
    Up OAuth 2.0 SSO</a></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#log_in_with_an_o_auth_2_0_provider">Log
    In With An OAuth 2.0 Provider</a></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#limit_o_auth_2_0_sso_domain_names">Limit
    OAuth 2.0 SSO Domain Names</a></li><li><a href="https://ngdocs.harness.io/article/rb33l4x893-single-sign-on-sso-with-oauth#next_steps">Next
    Steps</a></li></ul><h3>Before You Begin</h3><ul><li>See Authentication Overview.</li><li>See
    Access Management (RBAC) Overview.</li><li>For information on OAuth 2.0 see <a
    href="https://aaronparecki.com/oauth-2-simplified/">OAuth 2 Simplified</a> from
    Aaron Parecki.</li></ul><h3>Requirements</h3><p>To set up OAuth 2.0 successfully,
    the following requirements should be met:</p><ul><li>Each Harness User should
    be registered with Harness using their email address. Users are registered once
    they have logged into Harness. Harness Users are required to register the first
    time they log into Harness.</li><li>A Harness User&#39;s email address should
    also be used to authenticate with the OAuth 2.0 provider you plan to enable in
    Harness for SSO.</li></ul><p>For example, if a Harness User is registered with
    Harness using the email address <strong>JohnOAuth20@outlook.com</strong>, and
    OAuth SSO is enabled in Harness using Bitbucket as the provider, then the user
    must also be registered with Bitbucket using <strong>JohnOAuth20@outlook.com</strong>.</p><h4>GitHub
    Primary Email Required For Harness Login</h4><p>GitHub supports <a href="https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account/managing-email-preferences/changing-your-primary-email-address">primary</a>
    and secondary email addresses:</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623478958948/screenshot-2021-06-12-at-11-45-39-am.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><p>If
    you use GitHub for Harness OAuth 2.0 SSO with Harness, the primary email must
    be used for the Harness account and login.</p><h3>Setup Overview</h3><div class="note-callout">Only
    Harness Users that are members of the User Groups with Create/Edit permissions
    for Authentication Settings can set up and enable OAuth 2.0 SSO.</div><p>Setting
    up Harness OAuth 2.0 SSO involves the following high-level steps:</p><ol><li>Ensure
    that the email addresses of registered Harness Users are also registered with
    the OAuth 2.0 provider you will use for Harness OAuth 2.0 SSO. This applies to
    all users you plan to invite to Harness after you enable Harness OAuth 2.0 SSO.</li><li>Enable
    Harness OAuth 2.0 SSO, and select the OAuth 2.0 providers to use for SSO.</li><li>Test
    SSO by having a user log into Harness using each enabled OAuth 2.0 provider.</li></ol><h4>How
    Do I Prevent Lockouts?</h4><p>The following steps can help you prevents lockouts
    when setting up SSO in Harness:</p><ul><li>When you enable OAuth 2.0 SSO, using
    a Harness User account that is a member of the Administrator Group, remain logged
    in until you have tested SSO using a separate User account. If there is any error,
    you can disable OAuth 2.0 SSO.</li><li>Ensure that one or more Harness Users in
    the Administrators Group are registered with Harness using the same email address
    they use to log into the OAuth 2.0 provider you plan to use for SSO. Repeat this
    test for each enabled OAuth 2.0 provider.</li></ul><p>If you accidentally get
    locked out of Harness, email <a href="mailto:support@harness.io">support@harness.io</a>,
    call 855-879-7727, or contact Harness at <a href="https://harness.io/contact-sales"
    target="_blank">https://harness.io/contact-sales</a>.</p><h4>Harness Local Login</h4><p>To
    prevent lockouts or in the event of OAuth downtime, a User in the Harness Administrators
    Group can use the <a href="http://app.harness.io/auth/#/local-login"><strong>Local
    Login</strong></a> URL (http://app.harness.io/auth/#/local-login) to log in and
    update the OAuth settings.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1638374284838/screenshot-2021-12-01-at-9-27-06-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><ol><li>Log
    in using <strong>Harness Local Login</strong>.</li><li>Change the settings to
    enable users to log in.</li></ol><div class="note-callout">You can disable Local
    Login using the feature flag <code>DISABLE_LOCAL_LOGIN</code>. Contact <a href="mailto:support@harness.io"
    target="_blank">Harness Support</a> to enable the feature flag.</div><h3>Set Up
    OAuth 2.0 SSO</h3><p>To set up OAuth 2.0 SSO, do the following:</p><ol><li>Log
    into Harness using a Harness User account that is a member of the Administrator
    User Group with Create/Edit, Delete permissions for Authentication Settings. For
    information on Harness RBAC, see <a href="/article/vz5cq0nfg2-rbac-in-harness">Access
    Management (RBAC) Overview</a>.<br/><br/>The email address used to log into Harness
    should also be registered with the OAuth 2.0 providers you intend to enable for
    Harness SSO.</li><li>Click <strong>Home</strong>, and then click <strong>Access
    Control</strong> under <strong>ACCOUNT SETUP</strong>. The <strong>Access Control</strong>
    page appears.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623651350568/screenshot-2021-06-14-at-11-34-19-am.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure></li><li>In
    the <strong>Users</strong> tab, we can see the list of all the <strong>Active
    Users</strong> and their <strong>Email</strong>.</li><li>Before you set up SSO,
    confirm that your users&#39; email addresses registered with Harness are the same
    email addresses they use to log into the OAuth 2.0 provider you&#39;re enabling
    for Harness SSO.</li><li>Click <strong>Authentication</strong> under <strong>ACCOUNT
    SETUP</strong>. The <strong>Authentication: Configuration</strong> page appears.</li><li>If
    it&#39;s not already enabled, enable <strong>Use Public OAuth Providers</strong>.</li><li>Enable
    each public OAuth 2.0 provider you want to use for SSO.<figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623660711540/screenshot-2021-06-11-at-10-23-51-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure></li></ol><h3>Log
    In With An OAuth 2.0 Provider</h3><p>The first time you log into Harness using
    OAuth 2.0 SSO, you will be redirected to the OAuth 2.0 provider. Enter the same
    email address you used for Harness, along with the OAuth 2.0 provider-specific
    password. Next, you are redirected back to Harness and automatically logged in.</p><p>For
    all future logins, if you are already logged into your OAuth 2.0 provider in the
    same browser as Harness, simply enter your email address in Harness and log in
    automatically.</p><p>Let&#39;s look at an example:</p><p><strong>ExampleUser</strong>
    is registered in Harness with the email address <strong>exampleharnessUser@gmail.com</strong>:</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623663453106/screenshot-2021-06-14-at-3-06-12-pm.png"
    style="max-height:70%;max-width:70%" data-hd-height="70%" data-hd-width="70%"/></figure><p>The
    email address <strong>exampleharnessUser@gmail.com</strong> is also registered
    with Google:</p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623664308063/screenshot-2021-06-14-at-3-17-01-pm.png"
    style="max-height:30%;max-width:30%" data-hd-height="30%" data-hd-width="30%"/></figure><p>And
    Google is enabled as the Harness SSO provider.</p><p>ExampleUser logs into Harness
    with the email address <strong>exampleharnessUser@gmail.com</strong>:</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1638880593931/screenshot-2021-12-07-at-6-05-34-pm.png"
    style="max-height:30%;max-width:30%" data-hd-height="30%" data-hd-width="30%"/></figure><p>When
    the user clicks Google, the browser is redirected to the Google website:</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/rb33l4x893/1623666585979/screenshot-2021-06-14-at-3-58-48-pm.png"
    style="max-height:30%;max-width:30%" data-hd-height="30%" data-hd-width="30%"/></figure><p>The
    user enters the email address as <strong>exampleharnessUser@gmail.com</strong>
    and clicks <strong>Next</strong>. The user enters the password and clicks <strong>Next</strong>.</p><p>Google
    verifies the email address and password and returns the browser to Harness, where
    Example User is logged in automatically.</p><p>Harness OAuth 2.0 login successful!</p><div
    class="note-callout">Each time you use the OAuth provider to log into Harness,
    you will be required to log into the OAuth provider first. This is the standard
    OAuth process.</div><h3>Limit OAuth 2.0 SSO Domain Names</h3><p>By default, any
    member invited to Harness by a Harness Administrator can log in using an OAuth
    2.0 SSO identity provider that&#39;s enabled on Harness. However, you can limit
    which email domain names can be used to log into Harness.</p><p>For example, you
    might set up Google as a Harness OAuth 2.0 SSO provider, but you want only users
    who have <strong>example.io</strong> in their (login) email address to be able
    to log in via Google.</p><p>To filter domain names in this way, see our <a href="/article/gdob5gvyco-authentication-overview">Authentication
    Overview</a> topic&#39;s section on <a href="/article/gdob5gvyco-authentication-overview#restrict_email_domains">Restrict
    Email Domains</a>.</p><h3>Next Steps</h3><ul><li><a href="/article/ipsux8n7gm-two-factor-authentication">Two-Factor
    Authentication</a></li></ul><p></p>'
  slug: single-sign-on-sso-with-oauth
  tags:
  - AccessManagement
  - azure
  - GitLab
  - Github
  - LinkedIn
  is_live: true
