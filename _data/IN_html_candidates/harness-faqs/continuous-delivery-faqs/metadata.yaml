type: article
article_id: dhlon9vd17
user_id: mfr0nxh4be
category_id: y7j7dl46ua
author:
  name: Michael Cretzman
  profile_image: https://www.gravatar.com/avatar/2e8616837f4ee92be5d19ffe9b9ccba9?d=mm&s=150
title: Continuous Delivery (CD) FAQs
slug: continuous-delivery-faqs
description: Frequently asked questions about Harness Continuous Delivery (CD).
short_version: Frequently asked questions about Harness Continuous Delivery (CD).
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-07-12T21:29:10.660861Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Continuous Delivery (CD) FAQs
  description: Frequently asked questions about Harness Continuous Delivery (CD).
  short_version: Frequently asked questions about Harness Continuous Delivery (CD).
  body: '<p>This article addresses some frequently asked questions about Harness Continuous
    Deployments (CD).</p><p>In this topic:</p><p></p><ul><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#before_you_begin">Before
    You Begin</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#general">General</a></li><li><a
    href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#kubernetes">Kubernetes</a></li><li><a
    href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#terraform">Terraform</a></li><li><a
    href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#harness_configure_as_code">Harness
    Configure as Code</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#harness_git_experience">Harness
    Git Experience</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#uncommon_deployment_platforms">Uncommon
    Deployment Platforms</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#harness_entities">Harness
    Entities</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#secrets_management">Secrets
    Management</a></li><li><a href="https://ngdocs.harness.io/article/dhlon9vd17-continuous-delivery-faqs#harness_variables_expressions">Harness
    Variables Expressions</a></li></ul><h3>Before You Begin</h3><ul><li><a href="/article/hv2758ro4e-learn-harness-key-concepts">Learn
    Harness&#39; Key Concepts</a></li><li><a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a></li></ul><h3>General</h3><p>For an overview of
    Harness&#39; support for platforms, methodologies, and related technologies, see
    <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported Platforms
    and Technologies</a>.</p><h4>What can I deploy using Harness?</h4><p>Harness <a
    href="/article/1e536z41av-supported-platforms-and-technologies">supports all of
    the most common platforms</a> and deployment use cases.</p><div class="note-callout">Currently,
    Harness NextGen CD supports Kubernetes, Helm, and Kustomize deployments. Harness
    NextGen CD will soon support all of the integrations supported in <a href="https://docs.harness.io/article/220d0ojx5y-supported-platforms"
    target="_blank">Harness FirstGen</a>.</div><p>Always start with the Quickstarts
    in <a href="https://docs.harness.io/category/kx4hs8bn38-getting-started">Start
    Here</a>. These will take you from novice to advanced Harness user in a matter
    of minutes.</p><h4>What is a Service Instance in Harness?</h4><p>A Service is
    an independent unit of software you deploy through Harness CD pipelines.</p><p>This
    will typically map to a service in Kubernetes apps, or to an artifact you deploy
    in traditional VM-based apps.</p><p>Service Instances represent the dynamic instantiation
    of a service you deploy via Harness.</p><p>For example, for a service representing
    a Docker image, Service Instances are the number of pods running the Docker image.</p><p></p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1642186518482/image.png"/></figure><p>Notes:</p><ul><li>For
    Services with more than 20 service instances - active pods or VMs for that service
    - additional Service Licenses will be counted for each 20 service instances. This
    typically happens when you have large monolith Services.</li><li>See the <strong>Pricing
    FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</li></ul><h4>How does Harness calculate pricing for CD?</h4><p>See
    <a href="/article/ihboxj8xlz-service-based-licensing-and-usage-for-cd">Service-based
    Licensing and Usage for CD</a>.</p><h4>My definition of a Service differs from
    the above standard definition. How will pricing work in my case?</h4><p>Harness
    allows deployment of various custom technologies such as Terraform scripts, background
    Jobs, and other non-specified deployments. These require custom evaluation to
    assess the correct Licensing model. Please contact the Harness Sales team to discuss
    your specific technologies and deployment use cases.</p><p>See the <strong>Pricing
    FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</p><h4>Are there other mechanisms to license Harness CD beyond Services?</h4><p>See
    the <strong>Pricing FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</p><p>Yes, we are happy to have Harness Sales team work with you
    and understand the specifics of what you are trying to achieve and propose a custom
    licensing/pricing structure.</p><h4>Do unused/stale Services consume a license?</h4><p>See
    the <strong>Pricing FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</p><p>Harness CD actively tracks and provides visibility into all
    <em>Active Services</em> that consume a license.</p><p>An <em>Active Service</em>
    is defined as a service that has been deployed at least once in the last 30 days.
    A service deemed inactive (no deployments in the last 30 days), does not consume
    a license.</p><h4>How will I know if I am exceeding my licensed service usage?</h4><p>See
    the <strong>Pricing FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</p><p>Harness CD has built-in license tracking and management dashboards
    that provide you real-time visibility into your license allocation and usage.</p><p>If
    you notice that you are nearing or exceeding your licensed services, please get
    in touch with Harness Sales team to plan ahead and ensure continued usage and
    compliance of the product.</p><h4>How many users can I onboard onto Harness CD?
    Is there a separate pricing for Users?</h4><p>Harness CD has been designed to
    empower your entire Engineering and DevOps organization to deploy software with
    agility and reliability. We do not charge for users who onboard Harness CD and
    manage various aspects of the deployment process, including looking through deployment
    summaries, reports, and dashboards. We empower users with control and visibility
    while pricing only for the actual ‘services’ you deploy as a team.</p><h4>If I
    procure a certain number of service licenses on an annual contract, and realize
    that more licenses need to be added, am I able to procure more licenses mid-year
    through my current contract?</h4><p>See the <strong>Pricing FAQ</strong> at <a
    href="https://harness.io/pricing/" target="_blank">Harness Pricing</a>.</p><p>Yes,
    Harness Sales team is happy to work with you and help fulfill any Harness-related
    needs, including mid-year plan upgrades and expansions.</p><h4>If I procure a
    certain number of service licenses on an annual contract, and realize that I may
    no longer need as many, am I able to reduce my licenses mid-year through my current
    contract?</h4><p>See the <strong>Pricing FAQ</strong> at <a href="https://harness.io/pricing/"
    target="_blank">Harness Pricing</a>.</p><p>While an annual contract can not be
    lowered mid-year through the contract, please contact us and we will be very happy
    to work with you. In case you are uncertain at the beginning of the contract of
    how many licenses should be procured - you can buy what you use today to start
    and expand mid-year as you use more. You can also start with a monthly contract
    and convert to an annual subscription.</p><h4>What if I am building an Open Source
    project?</h4><p>We love Open Source and are committed to supporting our Community!
    Contact us and we will be happy to provide you with a no restriction Plan!</p><h4>What
    if I add more Service Instance infrastructure outside of Harness?</h4><p>See the
    <strong>Pricing FAQ</strong> at <a href="https://harness.io/pricing/" target="_blank">Harness
    Pricing</a>.</p><p>If you increase the Harness-deployed service instance infrastructure
    outside of Harness, Harness considers this increase part of the service instance
    infrastructure and licensing is applied.</p><h4>When is a Service Instance removed?</h4><p>If
    Harness cannot find the service instance infrastructure it deployed, it removes
    it from the Services dashboard.</p><p>If Harness cannot connect to the service
    instance infrastructure, it will retry until it determines if the service instance
    infrastructure is still there.</p><h4>If the instance/pod is in a failed state
    does it still count towards the service instance count?</h4><p>Harness performs
    a steady state check during deployment and requires that each instance/pod reach
    a healthy state.</p><p>A Kubernetes liveness probe failing later would mean the
    pod is restarted. Harness continues to count it as a service instance.</p><p>A
    Kubernetes readiness probe failing later would mean traffic is no longer routed
    to the pods. Harness continues to count pods in that state.</p><p>Harness does
    not count an instance/pod if it no longer exists. For example, if the replica
    count is reduced.</p><h4>What deployment strategies can I use?</h4><p>Harness
    supports all deployment strategies, such as blue/green, rolling, and canary.</p><p>See <a
    href="/article/0zsf97lo3c-deployment-concepts">Deployment Concepts and Strategies</a>.</p><h4>How
    do I filter deployments on the Deployments page?</h4><p>You can filter deployments
    on the the Deployments page according to multiple criteria, and save these filters
    as a quick way to filter deployments in the future.</p><h4>How do I know which
    Harness Delegates were used in a deployment?</h4><p>Harness displays which Delegates
    performed each task in the Details of each step.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635380469642/clean-shot-2021-10-27-at-17-18-09.png"/></figure><h4>Can
    I restrict deployments to specific User Groups?</h4><p>Yes, you can enable the
    Role permission Pipeline Execute and then apply that Role to specific User Groups.</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635381715356/clean-shot-2021-10-27-at-17-41-48.png"/></figure><p>See
    <a href="/article/tsons9mu0v-add-manage-roles">Add and Manage Roles</a>.</p><h4>Can
    I deploy a Service to multiple infrastructures at the same time?</h4><p>Each stage
    has a Service and target Infrastructure. If your Pipeline has multiple stages,
    you can deploy the same Service to multiple infrastructures.</p><p>See <a href="/article/0ud2ut4vt2-define-your-kubernetes-target-infrastructure">Define
    Your Kubernetes Target Infrastructure</a>.</p><h4>Can I re-run a failed deployment?</h4><p>Yes,
    select <strong>Re-run Pipeline</strong>.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635381869264/clean-shot-2021-10-27-at-17-44-23.png"/></figure><p></p><h3>Kubernetes</h3><p>For
    an overview of Harness&#39; support for platforms, methodologies, and related
    technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4 id="undefined">What is a Harness Kubernetes
    deployment?</h4><p>Harness takes the artifacts and Kubernetes manifests you provide
    and deploys them to the target Kubernetes cluster. You can simply deploy Kubernetes
    objects via manifests and you can provide manifests using remote sources and Helm
    charts.</p><p>See the <a href="/article/knunou9j30-kubernetes-cd-quickstart">Kubernetes
    CD Quickstart</a> and <a href="/article/u29v1uc1mh-kubernetes-deployments-overview">Kubernetes
    Deployments Overview</a>.</p><p>For detailed instructions on using Kubernetes
    in Harness, see the <a href="/category/qfj6m1k2c4">Kubernetes How-tos</a>.</p><h4
    id="undefined">What workloads can Harness deploy in a Kubernetes cluster?</h4><p>See <a
    href="/article/efnlvytc6l-what-can-i-deploy-in-kubernetes">What Can I Deploy in
    Kubernetes?</a>.</p><h4 id="undefined">Does Harness support everything in Kubernetes?</h4><p>Yes.
    Any standard Kubernetes features in your Kubernetes manifests will be deployed.</p><p>Harness
    tracks deployment status to ensure pods reach steady state before considering
    the deployment successful, but other, even unrelated Kubernetes features, are
    supported. For example, liveness, readiness, and startup probes are supported.</p><h4
    id="undefined">For Kubernetes, does Harness count only pods as a service instance
    (SI)? What about a ConfigMap or a Secret?</h4><p>Only pods. Only pods will consume
    SI licenses. ConfigMaps and Secrets do not consume SI licenses.</p><h4 id="undefined">How
    is Harness sure that a pod is a service instance?</h4><p>Harness tracks the workloads
    it deploys. Harness checks every 10 minutes using the Kubernetes API to see how
    many pods are currently running for the given workload.</p><h4 id="undefined">If
    I create a pod using Harness and keep managing it, is it still counted as a service
    instance?</h4><p>Yes. Sidecar containers within pods (log proxy, service mesh
    proxy) do not consume SI licenses. Harness licenses by pod, not the number of
    containers in a pod.</p><h4 id="undefined">Does Harness support OpenShift?</h4><p>Yes.
    Harness supports <a href="https://docs.openshift.com/container-platform/4.1/applications/deployments/what-deployments-are.html"
    target="_blank">DeploymentConfig</a>, <a href="https://docs.openshift.com/enterprise/3.0/architecture/core_concepts/routes.html"
    target="_blank">Route</a>, and <a href="https://docs.openshift.com/enterprise/3.2/architecture/core_concepts/builds_and_image_streams.html#image-streams"
    target="_blank">ImageStream</a> across Canary, Blue Green, and Rolling deployment
    strategies. Please use <code>apiVersion: apps.openshift.io/v1</code> and not <code>apiVersion:
    v1</code>.</p><p>You can leverage Kubernetes list objects as needed without modifying
    your YAML for Harness.</p><p>When you deploy, Harness will render the lists and
    show all the templated and rendered values in the log.</p><p>Harness supports:</p><ul><li>List</li><li>NamespaceList</li><li>ServiceList</li><li>For
    Kubernetes deployments, these objects are supported for all deployment strategies
    (Canary, Rolling, Blue/Green).</li></ul><p>If you run <code>kubectl api-resources</code> you
    should see a list of resources, and <code>kubectl explain</code> will work with
    any of these.</p><h4 id="undefined">Can I use Helm?</h4><p>Yes. Harness Kubernetes
    deployments support Helm v2 and v3.</p><p>Harness supports Helm charts in its
    Kubernetes implementation.</p><p>Harness Kubernetes Deployments allow you to use
    your own Kubernetes manifests or a Helm chart, and Harness executes the Kubernetes
    API calls to build everything without Helm and Tiller needing to be installed
    in the target cluster.</p><p>Harness Kubernetes deployments also support all deployment
    strategies (Canary, Blue/Green, Rolling, etc).</p><h4>Should I use Kubernetes
    or Native Helm?</h4><p>Harness includes both Kubernetes and Helm deployments,
    and you can use Helm charts in both. Here&#39;s the difference:</p><ul><li>Harness <a
    href="/article/knunou9j30-kubernetes-cd-quickstart">Kubernetes Deployments</a> allow
    you to use your own Kubernetes manifests or a Helm chart (remote or local), and
    Harness executes the Kubernetes API calls to build everything without Helm and
    Tiller needing to be installed in the target cluster.<br/>Harness Kubernetes deployments
    also support all deployment strategies (Canary, Blue/Green, Rolling, etc).</li><li>For
    Harness <a href="/article/lbhf2h71at-native-helm-quickstart">Native Helm Deployments</a>,
    you must always have Helm and Tiller (for Helm v2) running on one pod in your
    target cluster. Tiller makes the API calls to Kubernetes in these cases. You can
    perform a Rolling deployment strategy only (no Canary or Blue Green). For Harness
    Native Helm v3 deployments, you no longer need Tiller, but you are still limited
    to the Rolling deployment strategy.<ul><li><strong>Versioning:</strong> Harness
    Kubernetes deployments version all objects, such as ConfigMaps and Secrets. Native Helm
    does not.</li><li><strong>Rollback:</strong> Harness Kubernetes deployments will
    roll back to the last successful version. Native Helm will not. If you did 2 bad
    Native Helm deployments, the 2nd one will just rollback to the 1st. Harness will
    roll back to the last <u>successful</u> version.</li></ul></li></ul><h4 id="undefined">Can
    I deploy Helm charts without adding an artifact source to Harness?</h4><p>Yes.</p><p>Harness
    Kubernetes deployments using Helm charts can involve adding your artifact (image)
    to Harness in addition to your chart. The chart refers to the artifact you added
    to Harness (via its values.yaml). During deployment, Harness deploys the artifact
    you added to Harness and uses the chart to manage it.</p><p>In addition to this
    method, you can also simply deploy the Helm chart without adding your artifact
    to Harness. Instead, the Helm chart identifies the artifact. Harness installs
    the chart, gets the artifact from the repo, and then installs the artifact. We
    call this a <em>Helm chart deployment</em>.</p><p>See <a href="/article/7owpxsaqar-deploy-helm-charts">Deploy
    Helm Charts</a>.</p><h4 id="undefined">Can I run Kubernetes jobs?</h4><p>Yes.
    In Harness Kubernetes deployments, you define Jobs in the Harness Service <strong>Manifests</strong>.
    Next you add the <strong>Apply</strong> step to your Harness Workflow to execute
    the Job.</p><p>See <a href="/article/onwcu7pian-run-kubernetes-jobs">Run Kubernetes
    Jobs</a>.</p><h4 id="undefined">Can I deploy a Kubernetes resources using CRDs?</h4><p>Yes.
    Harness supports all Kubernetes default resources, such as Pods, Deployments,
    StatefulSets, DaemonSets, etc. For these resources, Harness supports steady state
    checking, versioning, displays instances on Harness dashboards, performs rollback,
    and other enterprise features.</p><p>In addition, Harness provides many of the
    same features for Kubernetes <a href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">custom
    resource</a> deployments using Custom Resource Definitions (CRDs). CRDs are resources
    you create that extend the Kubernetes API to support your application.</p><div
    class="note-callout">Harness supports CRDs for both Kubernetes and OpenShift.
    There is no difference in their custom resource implementation.</div><h4 id="undefined">Can
    I deploy resources outside of the main Kubernetes workload?</h4><p>Yes. By default,
    the Harness Kubernetes Workflow will deploy all of the resources you have set
    up in the Service <strong>Manifests</strong> section.</p><p>In some cases, you
    might have resources that you do not want to deploy as part of the main Workflow
    deployment, but want to apply as another step in the Workflow. For example, you
    might want to deploy an additional resource only after Harness has verified the
    deployment of the main resources in the Service <strong>Manifests</strong> section.</p><p>Workflows
    include an <strong>Apply</strong> step that allows you to deploy any resource
    you have set up in the Service <strong>Manifests</strong> section.</p><p>See <a
    href="/article/00el61pzok-deploy-manifests-separately-using-apply-command">Deploy
    Manifests Separately using Apply Step</a>.</p><h4 id="undefined">Can I ignore
    a manifest during deployment?</h4><p>You might have manifest files for resources
    that you do not want to deploy as part of the main deployment.</p><p>Instead,
    you tell Harness to ignore these files and then apply them separately using the
    Harness <a href="/article/xd6o61wp8u-kubernetes-apply-step">Kubernetes Apply Step</a>.</p><p>Or
    you can simply ignore them until you wish to deploy them as part of the main deployment.</p><p>See <a
    href="/article/jyv7jbr8pg-ignore-a-manifest-file-during-deployment">Ignore a Manifest
    File During Deployment</a>.</p><h4 id="undefined">Can I pull an image from a private
    registry?</h4><p>Typically, If the Docker artifact source is in a private registry,
    Harness has access to that registry using the credentials set up in the Harness <a
    href="/article/xxvnk67c5x">Artifact Connector</a>.</p><p>If some cases, your Kubernetes
    cluster might not have the permissions needed to access a private Docker registry.
    For these cases, the values.yaml file added in the Service <strong>Manifests</strong> section
    must contain <code>dockercfg: &lt;+artifact.imagePullSecret&gt;</code> . This
    key will import the credentials from the Docker credentials file in the artifact.</p><p>See <a
    href="/article/o1gf8jslsq-pull-an-image-from-a-private-registry-for-kubernetes">Pull
    an Image from a Private Registry for Kubernetes</a>.</p><h4 id="undefined">Can
    I use remote sources for my manifests?</h4><p>You can use your Git repo for the
    configuration files in <strong>Manifests</strong> and Harness uses them at runtime.
    You have the following options for remote files:</p><ul><li><strong>Kubernetes
    Specs in YAML format</strong> - These files are simply the YAML manifest files
    stored on a remote Git repo. See <a href="/article/ssbq0xh0hx-define-kubernetes-manifests">Add
    Kubernetes Manifests</a>.</li><li><strong>Helm Chart from Helm Repository</strong> -
    Helm charts files stored in standard Helm syntax in YAML on a remote Helm repo.
    See <a href="/article/cifa2yb19a-helm-cd-quickstart">Helm CD Quickstart</a>.</li><li><strong>Kustomization
    Configuration</strong> — kustomization.yaml files stored on a remote Git repo.
    See <a href="/article/uiqe6jz9o1-kustomize-quickstart">Kustomize Quickstart</a>.</li><li><strong>OpenShift
    Template</strong> — OpenShift params file from a Git repo.</li></ul><div class="note-callout">Remote
    files can also use Go templating.</div><h4 id="undefined">Do you support Go templating
    for Kubernetes manifests?</h4><p>Yes. you can use <a href="https://godoc.org/text/template"
    target="_blank">Go templating</a> and Harness built-in variables in combination
    in your <strong>Manifests</strong> files.</p><p>See <a href="/article/qvlmr4plcp-example-kubernetes-manifests-using-go-templating">Example
    Kubernetes Manifests using Go Templating</a>.</p><h4 id="undefined">Can I provision
    Kubernetes infrastructure?</h4><p>Yes, you can use Terraform. You can provision
    the target Kubernetes infrastructure as part of a pre-deployment setup in your
    stage. When the Pipeline runs, it builds your Kubernetes infrastructure first,
    and then deploys to the new infrastructure.</p><p>See <a href="/article/boug6e884h-terraform-provisioning-with-harness">Terraform
    Provisioning with Harness</a>.</p><h4 id="undefined">What deployment strategies
    can I use with Kubernetes?</h4><p>You can use canary, rolling, and blue/green.
    See:</p><ul><li><a href="/article/i5p4feil89-create-a-kubernetes-canary-deployment">Create
    a Kubernetes Canary Deployment</a></li><li><a href="/article/xsla71qg8t-create-a-kubernetes-rolling-deployment">Create
    a Kubernetes Rolling Deployment</a></li><li><a href="/article/mog5tnk5pi-create-a-kubernetes-blue-green-deployment">Create
    a Kubernetes Blue Green Deployment</a></li></ul><h4 id="undefined">Can I select
    namespaces during deployment?</h4><p>Yes. You can select namespaces on the fly
    using Harness variables that are evaluated at runtime.</p><h4 id="undefined">Do
    you support Kustomize?</h4><p>Yes. Harness supports <a href="https://kustomize.io/"
    target="_blank">Kustomize</a> kustomizations in your Kubernetes deployments. You
    can use overlays, multibase, plugins, sealed secrets, etc, just as you would in
    any native kustomization.</p><p>See <a href="/article/uiqe6jz9o1-kustomize-quickstart">Kustomize
    Quickstart</a>.</p><h4 id="undefined">Can I use Ingress traffic routing?</h4><p>Yes.
    You can route traffic using the Ingress rules defined in your Harness Kubernetes
    manifests.</p><h4 id="undefined">Can I scale my pods up and down?</h4><p>Yes.
    When you deploy a Kubernetes workload using Harness, you set the number of pods
    you want in your manifests and in the deployment steps.</p><p>With the Scale step,
    you can scale this number of running pods up or down, by count or percentage.</p><p>See <a
    href="/article/jxe5z9domw-scale-kubernetes-replicas">Scale Kubernetes Pods</a>.</p><h4
    id="undefined">How do I delete Kubernetes resources?</h4><p>Harness includes a
    Delegate step to remove any deployed Kubernetes resources.</p><p>See <a href="/article/eaj0xuegln-delete-kubernetes-resources">Delete
    Kubernetes Resources</a>.</p><h4 id="undefined">Can I use Helm 3 with Kubernetes?</h4><p>Yes.
    You can use Helm 3 charts.</p><p>You can select Helm 3 when you create the Service,
    or upgrade Helm 2 to Helm 3.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635460631950/clean-shot-2021-10-28-at-15-36-42-2-x.png"/></figure><p>See <a
    href="/article/7owpxsaqar-deploy-helm-charts">Deploy Helm Charts</a>.</p><h4 id="undefined">Can
    I use Helm Chart Hooks in Kubernetes Deployments?</h4><p>Yes. You can use <a href="https://helm.sh/docs/topics/charts_hooks/"
    target="_blank">Helm chart hooks</a> in your Kubernetes deployments to intervene
    at specific points in a release cycle.</p><p>You use a Harness Kubernetes Canary
    or Blue Green deployment and apply the hooks flexibly with the Apply step.</p><p>A
    Harness Kubernetes deployment runs <code>kubectl apply</code> for manifest files.
    There is no Tiller involved in this process because Harness is not running any
    Helm commands.</p><h3>Terraform</h3><p>For an overview of Harness&#39; support
    for platforms, methodologies, and related technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4 id="undefined">How does Harness support
    Terraform?</h4><p>Harness lets you use Terraform to provision infrastructure as
    part of your deployment process. Harness can provision any resource that is supported
    by a Terraform <a href="https://www.terraform.io/docs/configuration/providers.html"
    target="_blank">provider or plugin</a>.</p><p>You can use Harness with Terraform
    in two ways:</p><ul><li><strong>Target Infra Provisioning:</strong> provision
    the target infrastructure for a deployment, and then deploy to that provisioned
    infrastructure.</li><li><strong>Non-target Provisioning:</strong> provision any
    resources other than the target infrastructure for the deployment.</li></ul><p>You
    can do both in the same stage if you want.</p><p>For an overview of the process
    see <a href="/article/boug6e884h-terraform-provisioning-with-harness">Terraform
    Provisioning with Harness</a>. </p><p>See the following Terraform How-tos:</p><ul><li><a
    href="https://ngdocs.harness.io/article/uznls2lvod-provision-infra-dynamically-with-terraform">Provision
    Target Deployment Infra Dynamically with Terraform</a></li><li><a href="https://ngdocs.harness.io/article/52n3j0ci72-run-a-terraform-plan-with-the-terraform-plan-step">Plan
    Terraform Provisioning with the Terraform Plan Step</a></li><li><a href="https://ngdocs.harness.io/article/hdclyshiho-run-a-terraform-plan-with-the-terraform-apply-step">Provision
    with the Terraform Apply Step</a></li><li><a href="https://ngdocs.harness.io/article/j75xc704c8-remove-provisioned-infra-with-terraform-destroy">Remove
    Provisioned Infra with the Terraform Destroy Step</a></li><li><a href="https://ngdocs.harness.io/article/jgi6d73noy-rollback-provisioned-infra-with-the-terraform-rollback-step">Rollback
    Provisioned Infra with the Terraform Rollback Step</a></li></ul><h4 id="undefined">Do
    I need to deploy an application to use Terraform?</h4><p>You do not need to deploy
    artifacts via Harness Services to use Terraform provisioning in a Workflow. You
    can simply use Terraform to provision infrastructure without deploying any artifact.</p><p>See
    the following Terraform How-tos:</p><ul><li><a href="https://ngdocs.harness.io/article/uznls2lvod-provision-infra-dynamically-with-terraform">Provision
    Target Deployment Infra Dynamically with Terraform</a></li><li><a href="https://ngdocs.harness.io/article/52n3j0ci72-run-a-terraform-plan-with-the-terraform-plan-step">Plan
    Terraform Provisioning with the Terraform Plan Step</a></li><li><a href="https://ngdocs.harness.io/article/hdclyshiho-run-a-terraform-plan-with-the-terraform-apply-step">Provision
    with the Terraform Apply Step</a></li></ul><h4 id="undefined">Are Harness Service
    Instances counted with Terraform provisioning?</h4><p>Harness Service Instances
    (SIs) are not consumed and no additional licensing is required when a Harness
    Pipeline uses Terraform to provision resources. When Harness deploys artifacts
    via Harness Services to the provisioned infrastructure in the same Pipeline, SIs
    licensing is consumed.</p><h4 id="undefined">What deployment strategies can I
    use Terraform with?</h4><p>You can use Terraform will all strategies.</p><h4 id="undefined">Can
    I perform a Terraform dry run?</h4><p>Yes. The Terraform Plan and Terraform Apply
    steps can be executed as a dry run, just like running the <a href="https://www.terraform.io/docs/commands/plan.html"
    target="_blank">terraform plan</a> command.</p><p>First, you add the Terraform
    Plan step and define the Terraform script for it to use.</p><p>Next, you add the
    Terraform Apply step, select <strong>Inherit from Plan</strong> in <strong>Configuration
    Type</strong>, and reference the Terraform Plan step using the same <strong>Provisioner
    Identifier.</strong></p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635461416041/image.png"/></figure><h4
    id="undefined">Can I remove resources provisioned with Terraform?</h4><p>Yes.
    You can add a <strong>Terraform Destroy</strong> step to remove any provisioned
    infrastructure, just like running the <code>terraform destroy</code> command.
    See <a href="https://www.terraform.io/docs/commands/destroy.html" target="_blank">destroy</a> from
    Terraform.</p><p>See <a href="/article/j75xc704c8-remove-provisioned-infra-with-terraform-destroy">Remove
    Provisioned Infra with the Terraform Destroy Step</a>.</p><h3>Harness Configure
    as Code</h3><p>For an overview of Harness&#39; support for platforms, methodologies,
    and related technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4 id="undefined">Can I create my deployments
    using YAML?</h4><p>Yes. Harness allows you to configure settings like Pipelines,
    Triggers, Connectors, Environments, and Services in Harness using YAML. Everything
    you can do in the Harness platform GUI, you can do in YAML as well.</p><p></p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635461697611/image.png"/></figure><p>See
    <a href="/article/1eishcolt3-harness-yaml-quickstart">Harness YAML Quickstart</a>.</p><h3>Harness
    Git Experience</h3><p>For an overview of Harness&#39; support for platforms, methodologies,
    and related technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4 id="undefined">Can I sync my Harness Project
    with my repo?</h4><p>Yes. You can sync your Harness Project with a Git repo. The
    Harness Project can be synced with one repo and the Connectors used in the Project
    can be synced in the same repo or separately with other repos or branches.</p><p>See
    <a href="/article/utikdyxgfz-harness-git-experience-overview">Harness Git Experience
    Overview</a>.</p><h3>Uncommon Deployment Platforms</h3><p>Harness provides deployment
    support for all of the major artifact, approval, provisioner, and cloud platforms.</p><p>Harness
    also supports uncommon, custom platforms using platform agnostic Connectors and
    <a href="/article/rset0jry8q-triggers-reference#custom_payload_type">Custom Triggers</a>.</p><p>For
    an overview of Harness&#39; support for platforms, methodologies, and related
    technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4 id="undefined">What is a Harness Custom
    Deployment?</h4><p>Harness provides deployment support for all of the major platforms.</p><p>In
    some cases, you might be using a platform that does not have first class support
    in Harness. For these situations, Harness provides a custom deployment option.</p><p>Custom
    deployments use shell scripts to connect to target platforms, obtain target host
    information, and execute deployment steps.</p><h3>Harness Entities</h3><p>For
    an overview of Harness entities, see <a href="/article/hv2758ro4e-learn-harness-key-concepts">Learn
    Harness&#39; Key Concepts</a>.</p><h4>What are Organizations and Projects?</h4><p>Harness
    Organizations (Orgs) allow you to group projects that share the same goal. For
    example, all projects for a business unit or division.</p><p>Within each Org you
    can add several Harness Projects.</p><p>A Harness Project contains Harness Pipelines,
    users, and resources that share the same goal. For example, a Project could represent
    a business unit, division, or simply a development project for an app.</p><p>Think
    of Projects as a common space for managing teams working on similar technologies.
    A space where the team can work independently and not need to bother account admins
    or even org admins when new entities like Connectors, Delegates, or secrets are
    needed.</p><p>Much like account-level roles, project members can be assigned Project
    Admin, Member, and Viewer roles</p><h4>What is a Harness Pipeline?</h4><p>Typically,
    a Pipeline is an end-to-end process that delivers a new version of your software.
    But a Pipeline can be much more: a Pipeline can be a cyclical process that includes
    integration, delivery, operations, testing, deployment, real-time changes, and
    monitoring.</p><p>For example, a Pipeline can use the CI module to build, test,
    and push code, and then a CD module to deploy the artifact to your production
    infrastructure.</p><h4>What&#39;s a Harness Stage?</h4><p>A Stage is a subset
    of a Pipeline that contains the logic to perform one major segment of the Pipeline
    process. Stages are based on the different milestones of your Pipeline, such as
    building, approving, and delivering.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635462781647/image.png"/></figure><p>Some
    stages, like a Deploy stage, use strategies that automatically add the necessary
    steps.</p><p></p><figure><img src="https://files.helpdocs.io/i5nl071jo5/articles/dhlon9vd17/1635462804768/image.png"/></figure><h4>What
    are Services in Harness?</h4><p>A Service represents your microservices and other
    workloads logically.</p><p>A Service is a logical entity to be deployed, monitored,
    or changed independently.</p><h4>What are Service Definitions?</h4><p>When a Service
    is added to the stage in a Pipeline, you define its Service Definition. Service
    Definitions represent the real artifacts, manifests, and variables of a Service.
    They are the actual files and variable values.</p><p>You can also propagate and
    override a Service in subsequent stages by selecting its name in that stage&#39;s
    Service settings.</p><h4>What Artifacts does Harness Support?</h4><p>Harness supports
    all of the common repos.</p><p>See <a href="/article/xxvnk67c5x-connect-to-an-artifact-repo">Connect
    to an Artifact Repo</a>.</p><h4>What&#39;s a Harness Environment?</h4><p>Environments
    represent your deployment targets logically (QA, Prod, etc). You can add the same
    Environment to as many Stages as you need.</p><h4>What are Harness Infrastructure
    Definitions?</h4><p>Infrastructure Definitions represent an Environment&#39;s
    infrastructure physically. They are the actual clusters, hosts, etc.</p><h4>What
    are Harness Connectors?</h4><p>Connectors contain the information necessary to
    integrate and work with 3rd party tools.</p><p>Harness uses Connectors at Pipeline
    runtime to authenticate and perform operations with a 3rd party tool.</p><p>For
    example, a GitHub Connector authenticates with a GitHub account and repo and fetches
    files as part of a build or deploy Stage in a Pipeline.</p><p>See Harness <a href="/category/o1zhrfo8n5">Connectors
    How-tos</a>.</p><h3>Secrets Management</h3><p>For an overview of Harness&#39;
    support for platforms, methodologies, and related technologies, see <a href="/article/1e536z41av-supported-platforms-and-technologies">Supported
    Platforms and Technologies</a>.</p><h4>How does Harness manage secrets?</h4><p>Harness
    includes built-in Secrets Management to store your encrypted secrets, such as
    access keys, and use them in your Harness account. Harness integrates will all
    popular Secrets Managers.</p><p>See <a href="/article/hngrlb7rd6-harness-secret-manager-overview">Harness
    Secrets Management Overview</a>.</p><h3>Harness Variables Expressions</h3><p>Harness
    includes built-in expressions to identify settings.</p><p>See <a href="/article/lml71vhsim-harness-variables">Built-in
    Harness Variables Reference</a>.</p><p>Most settings in Harness Pipelines allow
    you to use Fixed Values, Runtime Inputs, and Expressions.</p><p>See <a href="/article/f6yobn7iq0-runtime-inputs">Fixed
    Values, Runtime Inputs, and Expressions</a>.</p><h4>Can I reference settings using
    expressions?</h4><p>Yes. Everything in Harness can be referenced by a Fully Qualified
    Name (FQN). The FQN is the path to a setting in the YAML of your Pipeline.</p><p>See
    <a href="/article/lml71vhsim-harness-variables">Built-in Harness Variables Reference</a>.</p><h4>Can
    I enter values at runtime?</h4><p>Yes. You can use Runtime Inputs to set placeholders
    for values that will be provided when you start a Pipeline execution.</p><p>See
    <a href="/article/f6yobn7iq0-runtime-inputs">Fixed Values, Runtime Inputs, and
    Expressions</a>.</p><h4>Can I evaluate values at runtime?</h4><p>Yes. With Expressions,
    you can use Harness input, output, and execution variables in a setting.</p><p>All
    of these variables represent settings and values in the Pipeline before and during
    execution.</p><p>At runtime, Harness will replace the variable with the runtime
    value.</p><p>See <a href="/article/f6yobn7iq0-runtime-inputs">Fixed Values, Runtime
    Inputs, and Expressions</a>.</p><p></p>'
  slug: continuous-delivery-faqs
  tags: []
  is_live: true
