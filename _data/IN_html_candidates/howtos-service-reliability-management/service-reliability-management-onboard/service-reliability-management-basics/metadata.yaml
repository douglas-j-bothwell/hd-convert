type: article
article_id: l8up27c7rn
user_id: 2c4rk0cied
category_id: 7lvetjzo1m
author:
  name: Renu Bhaskaran
  profile_image: https://www.gravatar.com/avatar/7d21186ef4e85110a0bd60a931c90361?d=mm&s=150
title: Service Reliability Management Basics
slug: service-reliability-management-basics
description: This topic explains the basic concepts of Service Reliability Management
  (SRM).
short_version: This topic explains the basic concepts of Service Reliability Management
  (SRM).
tags: []
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-15T16:03:36.77829Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Service Reliability Management Basics
  description: This topic explains the basic concepts of Service Reliability Management
    (SRM).
  short_version: This topic explains the basic concepts of Service Reliability Management
    (SRM).
  body: <p>Harness Service Reliability Management (SRM) module helps engineering and
    DevOps teams to balance feature velocity and bug fixes along with the stability
    and reliability needs in a production environment.</p><p>Harness SRM enables teams
    to:</p><ul><li>Practice Service Level Objective (SLO) driven software delivery
    to ensure that users receive agreed-upon service levels.</li><li>Maintain an equilibrium
    between innovation and delivery of reliable services with well-defined SLOs.</li><li>Define
    service reliability goals in the form of SLOs and Error Budgets.</li><li>Identify
    and rollback deployments, when it impacts SLOs or when the Error Budget gets depleted
    in production after rollout.</li><li>Set reliability guardrails within the CI/CD
    Pipeline.</li><li>Practice Shift left reliability in CI/CD Pipeline through SLO-driven
    governance policies as well as ML-powered service reliability checks.</li><li>Identify
    and resolve bugs before they reach production, and cut down the feedback cycle.</li></ul><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/l8up27c7rn/1646815348972/screenshot-2022-03-09-at-2-07-39-pm.png"
    style="max-height:50%;max-width:50%;display:block;margin-left:auto;margin-right:auto"
    data-hd-height="50%" data-hd-width="50%" data-hd-align="center"/></figure><p>Key
    capabilities of Harness SRM are:</p><ul><li><a href="/article/trlszsj5lh-slo-management-quickstart">SLO
    Management</a></li><li><a href="/article/lwi37ku94x-change-impact-analysis-quickstart">Change
    Impact Analysis</a></li><li><a href="/article/3xhqq9xllp-verify-deployments-with-the-verify-step">Service
    Reliability Checks</a></li><li><a href="/article/d3m9uo4mx0-slo-driven-deployment-governance">SLO
    Driven Governance</a></li></ul><p>This topic explains the basic concepts of Service
    Reliability Management (SRM).</p><h3>SLO</h3><p>A Service Level Objective (SLO)
    is an agreed-upon objective or a reliability target value for a system&#39;s availability,
    measured by service level indicator (SLI) metrics. It is the minimum reliability
    level, in terms of customer expectations, that you expect a service to achieve
    most of the time. SLOs are reasonable approximation of user experiences which
    lets you discover the right balance between velocity and quality. For example,
    consider a scenario wherein a team is consistently meeting its reliability goals,
    it can increase its velocity of feature releases. However, if the goals are not
    being met, it results in outages, performance degradation, and so on. The team
    must then first work on stability and reliability needs before adding new features.
    SLOs help to balance the possible negative consequences and the lack of availability.</p><figure><img
    src="https://files.helpdocs.io/i5nl071jo5/articles/l8up27c7rn/1646821494422/screenshot-2022-03-09-at-2-59-55-pm.png"
    style="max-height:50%;max-width:50%" data-hd-height="50%" data-hd-width="50%"/></figure><h3>SLI</h3><p>SLIs
    or service level indicators are metrics that can be monitored and act as quantifiable
    indicators of user experience. These metrics measure the service’s behavior and
    are documented in service level agreements (SLAs). Some examples of SLIs are error
    rate, latency, availability, and system throughput. Harness SRM currently has
    two SLIs - Latency and Availability.</p><h3>Error Budget</h3><p>An Error Budget
    is the measure of acceptable unreliability that a Service can afford before a
    customer is impacted. Developers can take more risks or make safer choices depending
    on whether the Service is within its budget. As long as the Service runs flawlessly,
    you can spend the Error Budget as you like, but the moment it meets, or exceeds
    the configured Error Budget, all the releases are frozen until the errors are
    reduced to a level that meets the contractual promises. Error Budget allows you
    to accommodate planned or unplanned downtime of a service that is unavoidable
    in practice.</p><h3>Remaining Error Budget</h3><p>The remaining Error Budget is
    a measure of the risk that can be safely undertaken enabling you to decide the
    rate of deployment.</p><h3>User Journey</h3><p>A user journey is a visualization
    of a user&#39;s interaction with a service to achieve a specific goal over time
    and across different channels. The potential customer touch points are logged
    and provide an essence of the whole experience from the user’s perspective. Creating
    a user journey enables you to:</p><ul><li>Map the relationship between a customer
    and an organization</li><li>Identify points of friction and opportunities</li></ul><h3>Monitored
    Services</h3><p>A Harness Monitored Service is a Service and Environment combination
    that Harness monitors for:</p><ul><li>Any changes, such as deployments, infrastructure
    changes (Kubernetes events, auditing, etc), and incidents (PagerDuty)</li><li>Any
    health trend deviations using logs and metrics obtained from APM and Logging tools
    respectively</li></ul><h3>Health Source</h3><p>A Health Source monitors changes
    in health trends of the Service using logs or metrics collected from an APM or
    logging tool.</p><p>Harness supported Health Sources:</p><ul><li>AppDynamics</li><li>Prometheus</li><li>Splunk</li><li>Google
    Cloud Operations</li><li>New Relic</li><li>Datadog</li><li>Dynatrace</li></ul><p>Harness
    offers support for all major APM vendors, but there are cases where a customized
    APM is needed. The <a href="/article/n67y68fopr-verify-deployments-with-custom-health-metrics">Custom
    Health Source</a> lets you customize APMs of your choice.</p><h3>Change Source</h3><p>A
    Change Source monitors change events related to deployments, infrastructure changes,
    and incidents. It derives specific data points about all the services and its
    components into a single place which can be simply parsed and analyzed. This enables
    you to immediately understand what&#39;s been changed, why it was changed, and
    when did the change occur across the board.</p><h3>Service Health</h3><p>Service
    Health is basically the Health Score aggregated from multiple Health Sources.
    This helps you analyze the impact of an issue on your organization&#39;s business
    services and applications.</p><h3>Continuous Verification</h3><p>The more often
    you deploy software, the more you need to validate the health of the newly deployed
    service instances. You need the ability to rapidly detect regressions or anomalies,
    and to rapidly roll back failed deployments. Harness&#39; ML-driven Deployment
    Verification simplifies verification in the following ways:</p><ul><li>Aggregates
    data from multiple Health Sources into one dashboard</li><li>Use machine learning
    to identify normal behavior for your applications</li><li>Allows Harness to identify
    and flag anomalies in future deployments, and to perform automatic rollbacks</li></ul><h3>See
    Also</h3><ul><li><a href="/article/trlszsj5lh-slo-management-quickstart">SLO Management
    Quickstart</a></li><li><a href="/article/lwi37ku94x-change-impact-analysis-quickstart">Change
    Impact Analysis Quickstart</a></li></ul><p></p>
  slug: service-reliability-management-basics
  tags: []
  is_live: true
