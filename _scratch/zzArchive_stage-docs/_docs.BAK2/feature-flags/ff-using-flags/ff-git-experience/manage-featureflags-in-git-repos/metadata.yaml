type: article
article_id: 6f5eylg819
user_id: vt9reb71i4
category_id: 77l6flntwl
author:
  name: Clare Wilkinson
  email: clare.wilkinson@harness.io
  profile_image: https://www.gravatar.com/avatar/0ff8d5897ddf326bd94ba0e62e7d2841?d=mm&s=150
title: Manage Your Flags Using Git Experience
slug: manage-featureflags-in-git-repos
description: This topic describes how to manage feature flags using Git experience.
short_version: This topic describes how to manage feature flags using Git experience.
tags:
- git experience
- feature flag
- SCM
show_toc: true
is_private: false
is_published: true
is_featured: false
stale_status:
  is_stale: false
  reason: ""
  source: API
  triggered_at: 2022-08-17T15:19:47.314558Z
  expires_at: null
permission_groups: []
multilingual:
- language_code: en
  title: Manage Your Flags Using Git Experience
  description: This topic describes how to manage feature flags using Git experience.
  short_version: This topic describes how to manage feature flags using Git experience.
  body: '<div class="warning-callout">There is a known issue with this feature. When
    you turn on a Feature Flag, some Target rules may be reordered in your Git repo.
    This doesn&#39;t affect the functionality of your Feature Flag or Targets and
    we are working to fix this issue as soon as possible.</div><p>Using Harness Git
    Experience with Feature Flags allows you to manage your Flags from a .yaml file
    in your Git repository. When you enable Git Experience, changes you make to Flags
    on the Harness Platform are committed on Git, and commits you make on Git are
    reflected in the Harness Platform. This means you can work on Flags entirely from
    Git, the Harness Platform, or both, and your changes will be synchronized in both
    places. </p><div class="note-callout">In the unlikely circumstance that Harness
    and Git are connected but out of sync, your Git file is the source of truth. Changes
    in the Harness Platform don’t take effect until you commit them to Git. </div><h3>Before
    you begin</h3><p>You must set up Git Experience in your Project before you can
    use it with Feature Flags.To do this:</p><ul><li><a href="/article/p92awqts2x-add-source-code-managers"
    target="_blank">Add a Source Code Manager to your account.</a></li><li>Follow
    the steps in <a href="/article/xl028jo9jk-git-experience-overview" target="_blank">Configure
    GitSync in Harness</a> to enable Git Experience and create a Git repository that
    contains a folder called <code>.harness</code>. Harness will automatically create
    a <code>flags.yaml</code> file within this folder and this is where you manage
    your Feature Flags. </li></ul><p>Also ensure you read <a href="#how-git-experience-works-with-feature-flags">How
    Git Experience works with Feature Flags</a>. </p><h3>How Git Experience works
    with Feature Flags</h3><p>When you set up Git Experience and enable it in your
    Feature Flag Project, Harness automatically creates a <code>flags.yaml</code>
    file in the <code>.harness</code> folder you created during the set up. All your
    Flag, Environment, and Target information is stored in this file. </p><p>For example,
    the following sample shows:</p><ul><li>A non-permanent boolean Flag named <code>Flag_1.</code></li><li><code>Flag_1</code>
    sits within Environment <code>Env_1</code>.</li><li>The Variations of <code>Flag_1</code>
    within <code>Env_1</code>, and which Variations are set as default.</li><li>The
    current state of <code>Flag_1</code>, which is toggled <code>on</code>.</li><li>A
    Target with the ID <code>T_1</code>.</li><li>The Variation served to <code>T_1</code>. </li></ul><details><summary>Example
    of a YAML file for Feature Flags</summary><div><pre>featureFlags:<br/> flags:<br/>  -
    flag: <br/>     name: Flag_1<br/>     identifier: Flag_1 <br/>     description:
    &#34;GitExFlag&#34; <br/>     permanent: false <br/>     spec: <br/>         type:
    boolean <br/>         default:<br/>             onVariation: &#34;true&#34; <br/>             offVariation:
    &#34;false&#34;<br/>         variations:<br/>            - identifier: &#34;true&#34;<br/>              value:
    &#34;true&#34; <br/>            - identifier: &#34;false&#34; <br/>              value:
    &#34;false&#34;   <br/>      environments: <br/>         - identifier: Env_1 <br/>           default:<br/>              onVariation:
    &#34;true&#34; <br/>              offVariation: &#34;false&#34;<br/>           state:
    &#34;on&#34;<br/>targetRules:<br/>   - targets: <br/>          - identifier: T1<br/>            variation:
    &#34;false&#34; <br/>projectIdentifier: FF_Docs_Demo<br/>orgIdentifier: Docs</pre></div></details><p> The
    synchronization between the Harness Platform and the <code>flags.yaml</code> file
    works in both directions:</p><ul><li>When you update the Harness Platform, the
    changes are committed to Git.</li><li>When you commit changes to Git, the Harness
    Platform is updated. </li></ul><p>In the unlikely circumstance that Harness and
    Git are connected but out of sync, your Git file is the source of truth. Changes
    in the Harness Platform don’t take effect until you commit them to Git. </p><div
    class="note-callout">If you don’t see the changes you made in Git reflected on
    the Harness Platform, refresh the page.</div><h3>Turn syncing with Git on or off</h3><p>The
    Git Experience icons are displayed on many pages, you can turn it on or off from
    any page where it is displayed.</p><p>After you have enabled Git Experience and
    understand how it works with Harness Feature Flags, you can turn the synchronization
    between the Harness Platform and Git on or off by completing the following: </p><ol><li>Go
    to the Project you enabled Git Experience for.</li><li>Click <strong>Feature Flags</strong>. </li><li>In
    the top bar navigation, next to the New Flag button, the Git repository you connected
    is displayed. </li><li>Next to the Git repository, the branch you connected is
    displayed.</li><li>Click the branch and toggle the sync on or off. You have the
    following options:</li></ol><h4>Sync with Git</h4><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363427347/sffdw-fc-7-a-8-i-6-h-tf-nwtcl-7-xwsww-1-lwvn-vo-1-s-2-cb-gqx-0-c-2-wub-orvv-9-tv-6-nvsfgkzy-s-d-k-zkpat-mw-ae-nsvfv-wq-f-56-ruj-3-ok-ov-skhf-3-pr-smzcxc-zhb-dxp-b-4-zf-0-f-jo-uxue-413-jtasfsw-7-wsptog-zmp-rfl-8"
    style="max-height:30%;max-width:30%;display:block;margin-left:0;margin-right:auto"
    alt="The Sync with Git toggle highlighted." data-hd-height="30%" data-hd-width="30%"
    data-hd-align="left"/></figure><p><em>Figure 1: Sync with Git turned on, auto-commit
    turned off</em></p><p>This turns on syncing with Git. When you toggle only this
    button, each time you make a change on the Harness Platform, you will be prompted
    to confirm which branch you want to commit to in Git and to add a commit message.
    For example: </p><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363433369/lgkc-k-0-cpp-qlv-ul-9-qx-amsj-gs-7-rczgs-ny-g-1-iw-pvv-lkcchxazh-hho-wjm-6-mm-9-ilapf-73-ep-a-3-j-dqp-sdga-1-f-5-zlu-gf-2-q-vadm-chxoc-l-2-ds-6-qm-6-d-cepqol-nif-pq-mo-ze-vs-8-wk-fwpm-62-ot-kj-l-8-jbgmqhoi-r-3-u"
    style="max-height:30%;max-width:30%;display:block;margin-left:0;margin-right:auto"
    alt="An example commit message. " data-hd-height="30%" data-hd-width="30%" data-hd-align="left"/></figure><p><em>Figure
    2: Example commit message</em></p><div class="note-callout">If you select the
    checkbox Always commit to this branch and do not prompt for commit message, the
    Auto-commit to the selected branch option will be toggled on.</div><p>When you
    are using this option, the branch icon is a gray circle:</p><p></p><figure><img
    src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363420475/a-5-hsm-crm-k-937-o-r-8-xlfrxbu-2-i-9-bqqu-5-pho-oz-9-k-w-oc-ju-1-j-08-d-ho-cok-ntj-kod-cy-18-m-9-yd-ryio-8-ml-qp-n-6-cf-ufeddsb-7-c-o-4-r-0-vxe-2-xpqebf-ihy-yo-zk-yu-9-gl-j-0-ajt-54-v-ug-lq-7-ows-mkm-i-pd-olxgbms-lx-3-g"
    style="max-height:20%;max-width:20%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot of the Git Sync button icon when using the Sync with Git option."
    data-hd-height="20%" data-hd-width="20%" data-hd-align="left"/></figure><p><em>Figure
    3: The branch icon when syncing with Git is enabled but auto-commit is disabled</em></p><h4>Auto-commit
    to the selected branch</h4><p></p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363404738/va-stek-lvws-pbfsucq-m-jvm-v-b-7-jxqq-ycg-1-q-3-sgrw-s-2-q-rv-5-mpztz-xn-jnx-46-w-6-j-amizx-icxxb-q-6-h-8-qs-ls-rti-vyioawv-1-v-0-am-0-yk-ft-llkpmzmokk-g-mhpo-71-j-nkw-ogq-m-7-vf-9-ks-mnbit-b-z-2-tr-8-ni-znfs"
    style="max-height:30%;max-width:30%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot with the Sync with Git and Auto-commit to selected branch toggles
    turned on." data-hd-height="30%" data-hd-width="30%" data-hd-align="left"/></figure><p><em>Figure
    4: Sync with Git turned on, auto-commit turned on</em></p><p>This turns on Auto
    committing, which means you do not have to manually enter a commit message and
    confirm the branch you want to commit to. Any changes you make will automatically
    be synced to the flags.yaml file on Git. Changes that are auto-committed have
    a [AUTO-COMMIT] prefix, for example:</p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363397830/i-n-57-k-2-qu-6-trdas-mq-7-gt-efcga-5-g-hi-l-1-zm-unrvr-x-4-bt-xv-pgm-ns-ks-ldcow-gok-gadwa-cyqptf-qw-h-67-qh-wvu-8-djrj-sssqj-3-h-vh-2-byj-zj-78-f-y-82-c-btst-s-mcn-88-jh-2-l-w-3-wq-n-3318-akzafb-d-61-tu-tj-nfidv-w-0-q"
    style="max-height:70%;max-width:70%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot of an auto commit message on GitHub. " data-hd-height="70%"
    data-hd-width="70%" data-hd-align="left"/></figure><p><em>Figure 5: An auto-commit
    message in GitHub</em></p><details><summary>Possible Auto-commit messages</summary><div>[AUTO-COMMIT]
    Created feature flag<br/>[AUTO-COMMIT] Toggled feature flag<br/>[AUTO-COMMIT]
    Updated feature flag details<br/>[AUTO-COMMIT] Updated feature flag rules<br/>[AUTO-COMMIT]
    Updated feature flag targeting<br/>[AUTO-COMMIT] Updated feature flag variations<br/>[AUTO-COMMIT]
    Deleted feature flag variations<br/>[AUTO-COMMIT] Updated feature flag prerequisites<br/>[AUTO-COMMIT]
    Updated feature flag targets<br/>[AUTO-COMMIT] Deleted feature flag<br/>[AUTO-COMMIT]
    Added feature flag to targets</div></details><p>When you are using the auto-commit
    option, the branch icon is a blue circle:</p><h3><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363387801/kb-yln-cvxm-chef-ee-ur-4-f-5-kp-6-w-v-3-au-ib-tu-g-5-mvi-02-isss-ik-n-9-r-8-s-madh-2-y-1-u-4-j-vgf-5-ge-125-zvnt-xut-r-fg-r-ioog-v-elm-03-ue-s-9-f-t-8-c-etei-c-3-sx-glg-iv-3-hm-4-nah-dhi-pj-vn-6-uf-9-g-kxwss-coy-3-p-xhf-m"
    style="max-height:20%;max-width:20%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot of the Git Sync button icon when using the Sync with Git and
    auto-commit option." data-hd-height="20%" data-hd-width="20%" data-hd-align="left"/></figure></h3><p><em>Figure
    6:</em> <em>T</em><em>he branch icon when syncing with Git is enabled but auto-commit
    is enabled</em></p><h3>Turn off syncing with Git</h3><p>To turn off syncing with
    Git, turn off the Sync with Git toggle. </p><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363378146/tb-y-8-k-0-se-v-a-6-z-vhehj-tx-5-dxgk-gs-5-tz-cqn-7-oqf-67-q-60-qr-yjb-3-k-os-dlgnse-8-b-y-b-9-ieq-8-i-9-fv-2-h-64-y-8-s-5-iqbs-6-lqyezxu-m-5-v-oq-kz-5-l-peqel-40-x-3-v-pun-sfi-25-vz-pzt-51-d-9-eh-d-4-gk-7-hb-xg-jo-9-c-6-uj-u"
    style="max-height:30%;max-width:30%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot of the Git sync toggle turned off. " data-hd-height="30%" data-hd-width="30%"
    data-hd-align="left"/></figure><p><em>Figure 7: Sync with Git turned off</em></p><p>If
    you turn the toggle on again, your Flags will sync with Git again right away. </p><div
    class="note-callout">The Auto-commit to selected branch toggle will be the same
    status as before you turned off synching with Git. </div><p>When syncing is off,
    the branch icon is a red warning circle:</p><h3><figure><img src="https://files.helpdocs.io/kw8ldg1itf/articles/6f5eylg819/1659363354344/v-he-9-f-avvn-xnm-po-21-klio-vz-h-4-x-ghnx-a-7-rbo-5-a-vueag-xpskowkqh-6-m-8-zffzo-db-so-7-yah-qep-r-5-b-zb-xpfzh-9-t-etk-3-fb-bv-xdrh-vp-3-om-u-7-pm-9-nb-8-j-5-tgm-k-p-2-b-0-umc-n-3-dgdf-qut-8-xu-s-37-cj-6-sfe-58-d-xg-7-nj-8"
    style="max-height:20%;max-width:20%;display:block;margin-left:0;margin-right:auto"
    alt="A screenshot of the Git Sync icon when Git Sync is toggled off." data-hd-height="20%"
    data-hd-width="20%" data-hd-align="left"/></figure></h3><p><em>Figure 8:</em><em>T</em><em>he
    br</em><em>anch icon when syncing with Git is disabled</em></p><h3>See also</h3><p>For
    more information about using Git Experience, go to <a href="/article/soavr3jh0i-git-experience-how-tos">Git
    Experience How-tos</a>.</p>'
  slug: manage-featureflags-in-git-repos
  tags:
  - git experience
  - feature flag
  - SCM
  is_live: true
